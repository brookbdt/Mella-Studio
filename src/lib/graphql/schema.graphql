# Input for accepting a work order assignment
input AcceptWorkOrderAssignmentInput {
    work_order_id: ID!
    department_id: ID!
    accepted_by: ID!
    tenant_id: ID!
}

# Response type for accept work order assignment
type AcceptWorkOrderAssignmentResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    work_order_id: ID
    planning_phase: String
    diagnostic: AWSJSON @aws_api_key @aws_cognito_user_pools
}

type ActivityPeriod @aws_api_key @aws_cognito_user_pools {
    hour: Int!
    dayOfWeek: Int!
    activityLevel: Float!
    movementCount: Int!
}

input AddDepartmentManagerInput {
    employee_id: ID!
    department_id: ID!
    role_id: ID!
    tenant_id: ID!
    is_primary: Boolean
    start_date: AWSDate
    end_date: AWSDate
    created_by: ID
}

# Additional Resource Assignment type
type AdditionalResourceAssignment @aws_api_key @aws_cognito_user_pools {
    id: ID!
    resource_type: String
    resource_id: ID
    product_id: ID
    quantity: Float
    dimensions: AWSJSON
    created_at: AWSDateTime
    updated_at: AWSDateTime
    tenant_id: ID
    created_by: ID
    updated_by: ID
    subtask_id: ID
    service_task_id: ID
    work_order_id: ID
}

# Supporting types
type AnalyticsCategoryValueBreakdown @aws_api_key @aws_cognito_user_pools {
    categoryId: String!
    categoryName: String!
    totalValue: Float!
    totalCost: Float!
    profit: Float!
    margin: Float!
    itemCount: Int!
    averageValue: Float!
}

type AnalyticsLocationValueBreakdown @aws_api_key @aws_cognito_user_pools {
    locationId: String!
    locationName: String!
    locationType: String!
    totalValue: Float!
    itemCount: Int!
    utilizationRate: Float!
}

# Personnel Actions Types
type ApprovalWorkflow @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    workflow_name: String!
    workflow_type: String!
    approval_steps: AWSJSON!
    auto_approval_rules: AWSJSON
    escalation_rules: AWSJSON
    is_active: Boolean
    created_at: AWSDateTime
    updated_at: AWSDateTime
}

input ApproveCompensationInput {
    id: ID!
    tenant_id: ID!
    approved_by: ID!
    approval_comments: String
}

type ApproveCompensationResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    employeeCompensation: EmployeeCompensation
}

input ApproveJournalEntryInput {
    id: ID!
    tenantId: ID!
    approvalNotes: String
    approvedBy: ID!
}

type ApproveJournalEntryResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    journalEntry: JournalEntry
    errors: [String!]
}

input ApprovePayrollRunInput {
    id: ID!
    tenant_id: ID!
    approved_by: ID!
}

type ApprovePayrollRunResponse {
    success: Boolean!
    message: String
    payrollRun: PayrollRun
}

input ApprovePersonnelActionInput {
    id: ID!
    tenant_id: ID!
    approved_by: ID!
    workflow_status: String!
    notes: String
}

type ApprovePersonnelActionResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    personnel_action: PersonnelAction
}

# Input type for approving work orders
input ApproveWorkOrderInput {
    id: ID!
    service_tasks: [ServiceTaskApprovalInput!]!
    status: WorkOrderApprovalStatus!
    tenant_id: ID!
    updated_by: ID!
}

# Invoice processing types
type ApprovedWorkOrdersResponse @aws_api_key @aws_cognito_user_pools {
    work_order_ids: [ID!]!
}

type AssignedEmployee {
    id: ID!
    first_name: String!
    last_name: String!
    role: EmployeeRole
}

type Attachment {
    id: ID
    serial_number: String!
    status: String!
    equipment_model_id: ID!
    customer_id: ID
    tenant_id: ID!
    created_at: String
    updated_at: String
    created_by: ID
    updated_by: ID
    meta_data: AWSJSON
    # Relationships
    equipment_model: EquipmentModel
    customer: Customer
}

type AttachmentConnection {
    items: [Attachment]
    nextToken: String
}

type AttachmentInner {
    id: ID!
    serial_number: String
    status: String
    equipment_model: EquipmentModelInner
    customer: CustomerInner
}

type BackgroundMedia @aws_api_key @aws_cognito_user_pools {
    desktop: String!
    mobile: String!
}

input BackgroundMediaInput {
    desktop: String!
    mobile: String!
}

# Bank Account Type Definition
type BankAccount @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    account_name: String!
    bank_name: String!
    account_number: String!
    currency: String!
    current_balance: Float
    created_at: AWSDateTime
    updated_at: AWSDateTime
    notes: String
    account_type: String
    is_active: Boolean
    created_by: ID
    updated_by: ID
    created_by_employee: Employee
    updated_by_employee: Employee
    bank_account_files: [BankAccountFile]
}

type BankAccountBasic @aws_api_key @aws_cognito_user_pools {
    id: ID!
    account_name: String!
    bank_name: String!
    account_number: String!
    currency: String!
    account_type: String
    current_balance: Float
    updated_at: AWSDateTime
    created_at: AWSDateTime
}

# Bank Account list response type
type BankAccountConnection @aws_api_key @aws_cognito_user_pools {
    items: [BankAccount]!
    nextToken: String
    total: Int!
}

# Bank Account File Type Definition
type BankAccountFile @aws_api_key @aws_cognito_user_pools {
    id: ID!
    file_key: String!
    created_at: AWSDateTime!
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    file: File
}

# Input for bank account file data
input BankAccountFileInput {
    key: String!
    file_name: String!
    file_type: String
}

input BeginningInventoryInput {
    # Dynamic key-value map where key is dimension name and value is quantity
    dimensions: [DimensionValueInput]
}

type BenchmarkMetric @aws_api_key @aws_cognito_user_pools {
    metric: String!
    value: Float!
    industryAverage: Float!
    bestPractice: Float!
    percentile: Float!
}

# Brand Type Definition
type Brand {
    id: ID!
    name: String!
    description: String
    tenant_id: String!
    created_at: AWSDateTime
    updated_at: AWSDateTime
    brand_files: [BrandFile]
}

# Brand list response type
type BrandConnection {
    items: [Brand]!
    nextToken: String
}

# Brand File Type Definition
type BrandFile {
    id: ID!
    image_key: String!
    file_name: String
    file_type: String
}

# Input type for brand file
input BrandFileInput {
    image_key: String!
    file_name: String
    file_type: String
}

input CalculateQuizResultInput {
    session_token: String!
    force_recalculate: Boolean
}

type CalculateQuizResultResponse @aws_api_key @aws_cognito_user_pools {
    result: QuizResult!
    session: QuizSession!
    payment_required_for_full_analysis: Boolean!
    available_payment_tiers: [PaymentTier!]!
    success: Boolean!
    message: String
}

type CallToAction @aws_api_key @aws_cognito_user_pools {
    text: String!
    href: String!
}

input CallToActionInput {
    text: String!
    href: String!
}

type CartConfig @aws_api_key @aws_cognito_user_pools {
    enabled: Boolean!
    itemCount: Int
}

input CartConfigInput {
    enabled: Boolean!
    itemCount: Int
}

# Category Type Definition
type Category {
    id: ID!
    name: String!
    code: String
    tenant_id: String!
    created_at: AWSDateTime
    updated_at: AWSDateTime
}

# Category list response type
type CategoryConnection {
    items: [Category]!
    nextToken: String
}

type CategoryTurnover @aws_api_key @aws_cognito_user_pools {
    categoryId: String!
    categoryName: String!
    turnoverRate: Float!
    averageDaysToTurn: Float!
}

type CategoryValueBreakdown {
    category: String!
    value: Float!
    count: Int!
}

# ====== FINANCE PORTAL TYPES ======
# Chart of Accounts
type ChartOfAccount @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenantId: ID!
    accountCode: String!
    accountName: String!
    accountType: String!
    accountCategory: String
    accountSubcategory: String
    parentAccountId: ID
    accountLevel: Int!
    fullAccountPath: String
    normalBalance: String!
    isActive: Boolean!
    allowPosting: Boolean!
    requireDimensions: Boolean
    bankAccountId: ID
    customerAccount: Boolean
    supplierAccount: Boolean
    inventoryAccount: Boolean
    currency: String
    allowForeignCurrency: Boolean
    createdAt: AWSDateTime
    updatedAt: AWSDateTime
    createdBy: ID
    updatedBy: ID
    # Relationships
    parentAccount: ChartOfAccount
    childAccounts: [ChartOfAccount!]
    bankAccount: BankAccount
    createdByEmployee: Employee
    updatedByEmployee: Employee
}

type ChartOfAccountConnection @aws_api_key @aws_cognito_user_pools {
    items: [ChartOfAccount!]!
    nextToken: String
}

# ====== INPUT TYPES ======
# Chart of Accounts Inputs
input ChartOfAccountFilterInput {
    accountType: String
    accountCategory: String
    isActive: Boolean
    allowPosting: Boolean
    searchTerm: String
}

type CognitoIdResponse {
    cognitoId: String
}

input CollectResourcesInput {
    requestId: ID!
    subtaskId: ID!
    subtaskResourceAssignmentId: ID!
    collectedDimensionValues: AWSJSON
    collectedQuantity: Float!
    notes: String
    tenant_id: ID!
    created_by: ID!
}

type CollectResourcesResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

# Communication Info
type CommunicationInfo @aws_api_key @aws_cognito_user_pools {
    id: ID!
    type: String!
}

# Company Machine Type Definition
type CompanyMachine @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    product_id: ID
    product_code: String!
    description: String
    department_id: ID
    operational_status: String
    operating_hours: Float
    cost_per_hour: Float
    technical_specs: AWSJSON
    secondary_part_no: String
    tenant_id: ID!
    created_at: AWSDateTime
    updated_at: AWSDateTime
    product: Product
}

# Company Machine list response type
type CompanyMachineConnection {
    items: [CompanyMachine]!
    nextToken: String
}

type CompatibilityRule {
    id: ID!
    equipmentType: EquipmentType
    attachmentType: EquipmentType
    notes: String
}

type CompatibilityRuleConnection {
    items: [CompatibilityRule]!
    nextToken: String
}

enum CompensationStatus {
    draft
    pending_approval
    approved
    rejected
    cancelled
    revision_required
}

input CompleteDepartmentExecutionInput {
    department_id: ID!
    work_order_id: ID!
    status: String!
    tenant_id: ID!
    created_by: ID!
}

type CompleteDepartmentExecutionResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

input ConfirmSignUpInput {
    phone: String!
    confirmation_code: String!
    org_id: String!
    origin: String
}

type ConsumablesInsights {
    totalItems: Int!
    totalValue: Float!
    expiringSoon: Int!
    withOemNumbers: Int!
}

type ConsumptionPattern @aws_api_key @aws_cognito_user_pools {
    productId: String!
    productName: String!
    dailyConsumption: Float!
    weeklyConsumption: Float!
    monthlyConsumption: Float!
    consumptionVariability: Float!
    pattern: String!
}

# Input types for attachment
input CreateAttachmentInput {
    serial_number: String!
    status: String!
    equipment_model_id: ID!
    customer_id: ID
    tenant_id: ID!
    created_by: ID
    updated_by: ID
    meta_data: AWSJSON
}

# Input type for creating a brand
input CreateBrandInput {
    name: String!
    description: String
    files: [BrandFileInput]
    tenant_id: String!
}

# Input type for creating a category
input CreateCategoryInput {
    name: String!
    code: String
    tenant_id: String!
}

input CreateChartOfAccountInput {
    tenantId: ID!
    accountCode: String!
    accountName: String!
    accountType: String!
    accountCategory: String
    accountSubcategory: String
    parentAccountId: ID
    normalBalance: String!
    isActive: Boolean
    allowPosting: Boolean
    requireDimensions: Boolean
    bankAccountId: ID
    customerAccount: Boolean
    supplierAccount: Boolean
    inventoryAccount: Boolean
    currency: String
    allowForeignCurrency: Boolean
    createdBy: ID!
}

# ====== RESPONSE TYPES ======
type CreateChartOfAccountResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    chartOfAccount: ChartOfAccount
    errors: [String!]
}

# --- BEGIN New Machine/Consumable Inputs ---
input CreateCompanyMachineInput {
    # Product Fields
    name: String!
    description: String
    product_code: String!
    brand: String
    product_cost: Float
    product_price: Float
    category_id: ID
    unit_of_measurement: String!
    beginning_inventory: Float
    tenant_id: ID!
    created_by: String
    secondary_part_no: String
    default_warehouse_id: ID
    default_outlet_id: ID
    warehouse_id: ID
    outlet_id: ID
    # Machine Specific Fields
    operational_status: String
    operating_hours: Float
    cost_per_hour: Float
    machine_cost_per_hour: Float
    technical_specs: AWSJSON
    department_id: ID
}

input CreateConsumableInput {
    # Product Fields
    name: String!
    description: String
    product_code: String
    brand: String
    product_cost: Float
    product_price: Float
    category_id: ID
    unit_of_measurement: String!
    sale_unit: String
    purchase_unit: String
    inventory_tracking_method: String
    beginning_inventory: Float
    vat: Float
    tax_type: String
    profit_margin: Float
    color: String
    manufacture_date: AWSDateTime
    remark: String
    cant_be_sold: Boolean
    cant_be_purchased: Boolean
    cant_be_adjusted: Boolean
    secondary_part_no: String
    tenant_id: ID!
    created_by: String
    inventory_dimensions: [InventoryDimensionInput]
    primary_unit_formula: [FormulaComponentInput]
    conversion_factor: Float
    default_warehouse_id: ID
    default_outlet_id: ID
    warehouse_id: ID
    outlet_id: ID
    # Consumable Specific Fields
    manufacturer: String
    oem_part_number: String
    compatible_models: AWSJSON
    create_warehouse: Boolean
    create_default_warehouse: Boolean
    location_code: String
    warranty_period: String
    shelf_life: String
    technical_specs: AWSJSON
}

input CreateCustomerInput {
    name: String!
    email: String
    phone: String
    address: String
    tenant_id: ID!
    is_active: Boolean
}

# Input type for creating a department
input CreateDepartmentInput {
    name: String!
    type: String!
    tenant_id: ID!
    description: String
    manager_role_id: ID
    level: Int
    is_active: Boolean
    metadata: AWSJSON
    parent_department_id: ID
    created_by: ID
}

# Department Invoice Types
input CreateDepartmentInvoiceInput {
    work_order_id: ID!
    department_id: ID!
    vat_percentage: Float!
    customer_notes: String
    internal_notes: String
    payment_terms: String
    tenant_id: ID!
    created_by: ID!
}

type CreateDepartmentInvoiceResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
    invoice_id: ID
    invoice_number: String
    subtotal: Float
    vat_amount: Float
    total_amount: Float
    diagnostic: AWSJSON
}

input CreateEmployeeCompensationInput {
    tenant_id: ID!
    employee_id: ID!
    salary_structure_id: ID
    salary_type: SalaryType
    base_salary: Float
    hourly_rate: Float
    commission_rate: Float
    overtime_multiplier: Float
    currency: String
    pay_frequency: PayFrequency
    allowances: AWSJSON
    deductions: AWSJSON
    bonus_structure: AWSJSON
    effective_date: AWSDate!
    end_date: AWSDate
    is_active: Boolean
    change_reason: String
    approved_by: ID
    created_by: ID
    # Workflow fields
    status: CompensationStatus
    workflow_id: ID
    submit_for_approval: Boolean
}

type CreateEmployeeCompensationResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    employeeCompensation: EmployeeCompensation
}

input CreateEmployeeInput {
    first_name: String!
    last_name: String!
    email: String
    phone: String
    address: String
    date_of_birth: AWSDate
    department_id: ID
    role_id: ID
    gross_salary: Float
    net_salary: Float
    employee_id: String
    start_date: AWSDate
    tenant_id: ID!
    created_by: ID
    status: String
    employee_files: [EmployeeFileInput]
    is_active: Boolean
    branch_id: ID
    employment_type: String
    job_title: String
    contract_start_date: AWSDate
    contract_end_date: AWSDate
    supervisor_id: ID
    work_location: String
    national_id: String
    tax_id_number: String
    custom_fields: AWSJSON
    generate_employee_id: Boolean
    is_department_manager: Boolean
    managed_departments: [ManagedDepartmentInput]
}

# Input types for equipment model
input CreateEquipmentModelInput {
    name: String!
    description: String
    equipment_type_id: ID!
    machine_brand_id: ID!
    year: Int
    tenant_id: ID!
    created_by: ID
    updated_by: ID
    manufacturer: String
    specifications: AWSJSON
}

# Input types for equipment type compatibility
input CreateEquipmentTypeCompatibilityInput {
    equipment_type_id: ID!
    attachment_type_id: ID!
    tenant_id: ID!
    created_by: ID
    updated_by: ID
    notes: String
}

# Input types for equipment type
input CreateEquipmentTypeInput {
    name: String!
    description: String
    classification: String
    can_have_attachments: Boolean!
    tenant_id: ID!
    created_by: ID
    updated_by: ID
}

input CreateExpenseInput {
    tenant_id: ID!
    category_id: ID
    project_id: ID
    product_id: ID
    amount: Float!
    currency: String!
    description: String
    date: AWSDate
    work_order_id: ID
    created_by: ID!
    approved_by: ID
    status: String
    notes: String
    payment_method: String
    bank_account_id: ID
    files: [ExpenseFileInput]
}

type CreateExpenseResponse @aws_api_key @aws_cognito_user_pools {
    result: Expense!
    diagnostic: ExpenseDiagnostic!
    files: [String]
}

# Fiscal Period Inputs
input CreateFiscalPeriodInput {
    tenantId: ID!
    fiscalYear: Int!
    periodNumber: Int!
    periodName: String!
    startDate: AWSDate!
    endDate: AWSDate!
    ethiopianYear: Int
    ethiopianMonth: Int
    createdBy: ID!
}

type CreateFiscalPeriodResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    fiscalPeriod: FiscalPeriod
    errors: [String!]
}

# MellaStudio CMS Input Types
input CreateHeroSectionInput {
    tenantId: String!
    badge: String
    headline: String!
    subtitle: String
    firstWordStyle: WordStyleInput!
    lastWordStyle: WordStyleInput!
    cta: CallToActionInput!
    backgroundMedia: BackgroundMediaInput!
    isActive: Boolean
    order: Int
}

# Inventory Movement Types
input CreateInventoryMovementInput {
    inventory_id: ID!
    movement_type: String!
    quantity_change: Float!
    reason: String!
    notes: String
    reference_id: ID
    dimension_adjustments: [InventoryMovementDimensionInput]
    tenant_id: ID!
    created_by: ID!
}

type CreateInventoryMovementResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    movement_id: ID
    new_quantity: Float
    error: String
}

input CreateJournalEntryInput {
    tenantId: ID!
    description: String!
    journalDate: AWSDate!
    postingDate: AWSDate!
    fiscalPeriodId: ID!
    sourceType: String!
    sourceReference: String
    batchId: String
    journalEntryLines: [CreateJournalEntryLineInput!]!
    createdBy: ID!
}

input CreateJournalEntryLineInput {
    lineNumber: Int!
    accountId: ID!
    description: String!
    debitAmount: Float
    creditAmount: Float
    departmentId: ID
    branchId: ID
    customerId: ID
    supplierId: ID
    currency: String
    exchangeRate: Float
    foreignDebitAmount: Float
    foreignCreditAmount: Float
    taxAmount: Float
    taxRate: Float
    taxType: String
    referenceId: ID
    referenceType: String
    dimensionValues: AWSJSON
}

type CreateJournalEntryResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    journalEntry: JournalEntry
    errors: [String!]
}

# Input for machine attachment
input CreateMachineAttachmentInput {
    attachment_id: ID!
    machine_id: ID!
    is_currently_attached: Boolean!
    attached_at: AWSDateTime
    detached_at: AWSDateTime
    # Changed from String to AWSDateTime for consistency
    notes: String
    tenant_id: ID!
    created_by: ID!
}

# Input types for machine brand
input CreateMachineBrandInput {
    name: String!
    description: String
    tenant_id: ID!
    created_by: ID
    updated_by: ID
    website: String
}

# Input types for machine
input CreateMachineInput {
    name: String
    description: String
    serial_number: String!
    equipment_model_id: ID!
    customer_id: ID
    status: String
    tenant_id: ID!
    created_by: ID
    updated_by: ID
    purchase_date: String
    last_maintenance_date: String
    warranty_expiry_date: String
    meta_data: AWSJSON
}

input CreateNotificationInput {
    title: String!
    message: String!
    type: String!
    category: String!
    priority: String!
    channels: [String!]!
    action_url: String
    metadata: AWSJSON
    recipient_ids: [String!]!
    tenant_id: ID!
    created_by: String!
}

# Input type for creating an outlet
input CreateOutletInput {
    name: String!
    code: String!
    type: String!
    status: String
    tenant_id: ID!
    address: String
    location: String
    manager_id: ID
    contact_phone: String
    contact_email: String
    tax_registration_no: String
    business_license_no: String
    is_default: Boolean
    has_storage: Boolean
    storage_capacity: Float
    coordinates: AWSJSON
    operating_hours: AWSJSON
    created_by: ID
}

input CreatePayrollEntryInput {
    tenant_id: ID!
    payroll_run_id: ID!
    employee_id: ID!
    base_salary: Float!
    overtime_amount: Float
    allowances: AWSJSON
    deductions: AWSJSON
    gross_salary: Float!
    tax_deductions: Float
    other_deductions: Float
    net_salary: Float!
    hours_worked: Float
    overtime_hours: Float
    leave_days_taken: Float
    bonus_amount: Float
    commission_amount: Float
    payment_method: String
    payment_reference: String
    payment_date: AWSDate
}

type CreatePayrollEntryResponse {
    success: Boolean!
    message: String
    payrollEntry: PayrollEntry
}

# Payroll Input Types
input CreatePayrollRunInput {
    tenant_id: ID!
    payroll_period_start: AWSDate!
    payroll_period_end: AWSDate!
    run_date: AWSDate
    processed_by: ID!
    notes: String
}

# Response Types
type CreatePayrollRunResponse {
    success: Boolean!
    message: String
    payrollRun: PayrollRun
}

# Personnel Action Input Types
input CreatePersonnelActionInput {
    tenant_id: ID!
    employee_id: ID!
    action_type: String!
    effective_date: AWSDate!
    previous_data: AWSJSON
    new_data: AWSJSON
    reason: String
    documents: AWSJSON
    notes: String
    created_by: ID
    # Employee information for file organization
    employee_first_name: String
    employee_last_name: String
    employee_employee_id: String
}

# Personnel Action Response Types
type CreatePersonnelActionResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    personnel_action: PersonnelAction
    workflow_id: ID
    processed_files: AWSJSON
}

# POS Transaction Input Types
input CreatePosTransactionInput {
    transaction_details: PosTransactionDetailsInput!
    total_price: Float!
    discount: TaxDiscountInput
    tax: TaxDiscountInput
    payment_method: String!
    bank_account_id: ID
    payment_status: String!
    customer: PosCustomerInput
    credit_amount: Float
    is_anonymous: Boolean!
    employee_id: ID!
    tenant_id: ID!
    total_paid: Float!
}

type CreatePosTransactionResponse @aws_api_key @aws_cognito_user_pools {
    transaction_id: ID!
    amount_due: Float!
    amount_paid: Float!
    change_amount: Float!
    diagnostic: AWSJSON
}

input CreatePostingDefinitionInput {
    tenantId: ID!
    ruleName: String!
    ruleCode: String!
    description: String
    sourceTable: String!
    sourceEvent: String!
    conditionSql: String
    postingRules: AWSJSON!
    isActive: Boolean
    priority: Int
    createdBy: ID!
}

# Response Types
type CreatePostingDefinitionResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    postingDefinition: PostingDefinition
    errors: [String!]
}

# Input type for creating a product
input CreateProductInput {
    name: String!
    description: String
    barcode_symbology: String
    product_code: String
    brand: String
    duplicateStrategy: DuplicateStrategy
    size: ProductSizeInput
    tenant_id: ID!
    machine_cost_per_hour: Float
    unit_of_measurement: String
    default_warehouse_id: ID
    default_outlet_id: ID
    product_cost: Float
    product_price: Float
    imei: String
    raw_materials: [RawMaterialInput]
    sale_unit: String
    purchase_unit: String
    inventory_threshold: Float
    vat: Float
    tax_type: String
    profit_margin: Float
    color: String
    rgb_color: String
    manufacture_date: AWSDateTime
    expiry_date: AWSDateTime
    remark: String
    category_id: ID
    multi_variants: [String]
    cant_be_sold: Boolean
    cant_be_purchased: Boolean
    cant_be_adjusted: Boolean
    is_fixed_asset: Boolean
    product_type: String
    inventory_tracking_method: String
    has_imei: Boolean
    has_multi_variants: Boolean
    has_raw_materials: Boolean
    conversion_factor: Float
    beginning_inventory: Float
    primary_unit_id: String
    classification: ProductClassificationInput
    inventory_dimensions: [InventoryDimensionInput]
    primary_unit_formula: [FormulaComponentInput]
    files: [ProductFileInput]
    created_by: ID
    # --- Spare Part Specific Fields (for Lambda/DB) ---
    manufacturer: String
    compatible_models: AWSJSON
    warranty_period: String
    shelf_life: String
    technical_specs: AWSJSON
}

# Response type for batch product creation
type CreateProductsBatchResponse {
    results: [CreateProductsBatchResponseItem!]!
    # Optional: Add overall status if needed
    overallSuccess: Boolean!
    totalProcessed: Int!
    totalSucceeded: Int!
    totalFailed: Int!
}

# Response item for batch product creation
type CreateProductsBatchResponseItem {
    success: Boolean!
    message: String
    createdProduct: Product
    createdWarehouseId: ID!
    warehouseCreated: Boolean
    inputProductCode: String
    inputProductName: String
}

# Role Input Definitions
# Input types need corresponding fields
input CreateRoleInput {
    role_name: String!
    description: String
    department_id: ID!
    tenant_id: ID!
    is_manager: Boolean
    type: String
    level: Int
    is_active: Boolean
    can_manage_roles: Boolean
    can_manage_departments: Boolean
    department_access: [ID]
    metadata: AWSJSON
    permissions: AWSJSON
    kpis: AWSJSON
    scopes: [ID]
    subordinates: [ID]
    superiors: [ID]
    created_by: ID
}

input CreateSalaryStructureInput {
    tenant_id: ID!
    structure_name: String!
    position_id: ID
    department_id: ID
    salary_type: SalaryType!
    base_salary: Float
    hourly_rate: Float
    commission_rate: Float
    overtime_multiplier: Float
    allowances: AWSJSON
    deductions: AWSJSON
    bonus_structure: AWSJSON
    currency: String
    pay_frequency: String
    effective_from: AWSDate!
    effective_to: AWSDate
    is_active: Boolean
    auto_assign_by_position: Boolean
    auto_assign_by_department: Boolean
    requires_approval: Boolean
}

type CreateSalaryStructureResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    salaryStructure: SalaryStructure
}

# Input types for service task template
input CreateServiceTaskTemplateInput {
    name: String!
    description: String
    estimated_duration: Int
    tenant_id: ID!
    created_by: ID
    updated_by: ID
    equipment_type_id: ID
}

# Input for creating a standalone resource request
input CreateStandaloneResourceRequestInput {
    request_type: ResourceRequestType!
    request_title: String!
    request_description: String!
    business_justification: String
    category_id: ID!
    department_id: ID!
    project_id: ID
    priority: ResourceRequestPriority!
    urgency: ResourceRequestUrgency!
    required_by_date: AWSDateTime
    expected_usage_start_date: AWSDateTime
    expected_usage_end_date: AWSDateTime
    cost_center_code: String
    budget_reference: String
    delivery_location_id: ID
    delivery_contact_name: String
    delivery_contact_phone: String
    delivery_contact_email: String
    is_returnable: Boolean!
    special_instructions: String
    requested_items: [ResourceRequestItemInput!]!
    attachments_metadata: AWSJSON
    tenant_id: ID!
    created_by: ID!
}

# Response type for creating standalone resource requests
type CreateStandaloneResourceRequestResponse
    @aws_api_key
    @aws_cognito_user_pools {
    success: Boolean!
    message: String
    resource_request: StandaloneResourceRequest
    errors: [String!]
}

# Tax Management Input Types
input CreateTaxPeriodInput {
    start_date: AWSDate
    end_date: AWSDate
    tenant_id: ID!
    created_by: ID!
}

# Tax Management Response Types
type CreateTaxPeriodResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
    tax_period: AWSJSON
}

# Input type for creating a unit
input CreateUnitInput {
    name: String!
    abbreviation: String
    base_unit: String
    operator: String
    operand: Float
    tenant_id: String
}

# Input type for creating a warehouse
input CreateWarehouseInput {
    name: String!
    code: String!
    type: String!
    status: String
    tenant_id: ID!
    manager_id: ID
    is_default: Boolean
    coordinates: AWSJSON
    operating_hours: AWSJSON
    description: String
    address: AWSJSON!
    storage_conditions: AWSJSON
    contact: AWSJSON!
    capacity: AWSJSON!
    facilities: [String]
    certifications: AWSJSON
    staff: AWSJSON
    created_by: ID
}

# Input types
input CreateWorkOrderInput {
    work_order_number: String
    customer_id: ID!
    equipment_type_id: ID
    machine_brand_id: ID
    equipment_model_id: ID
    machine_id: ID
    status: String
    estimated_completion_date: AWSDateTime
    scheduled_date: String
    notes: String
    attachment_id: ID
    tenant_id: ID!
    created_by: ID!
    # New entity creation fields
    new_customer_name: String
    new_customer_contact: String
    new_equipment_type_name: String
    new_equipment_type_description: String
    new_equipment_type_classification: String
    new_equipment_type_can_have_attachments: Boolean
    new_machine_brand_name: String
    new_machine_brand_description: String
    new_machine_brand_website: String
    new_machine_model_name: String
    new_machine_model_description: String
    new_machine_model_year: Int
    new_machine_serial_number: String
    new_machine_name: String
    new_machine_description: String
    # Tasks
    task_ids: [ID]
    new_task_names: [String]
    # Attachment specific
    attachment_notes: String
    new_attachment_identifier: String
    associated_machine_serial: String
}

type CriticalInventoryItem {
    product: SimplifiedProduct!
    current_quantity: Float!
    required_quantity: Float!
    shortage: Float!
}

type CriticalStockItem @aws_api_key @aws_cognito_user_pools {
    productId: String!
    productName: String!
    currentQuantity: Float!
    threshold: Float!
    daysRemaining: Int!
    urgencyScore: Float!
    estimatedCost: Float!
}

# Tax Management Types
type CurrentTaxPeriod @aws_api_key @aws_cognito_user_pools {
    id: ID!
    start_date: AWSDate!
    end_date: AWSDate!
    status: String!
    total_vat_collected: Float!
    total_vat_paid: Float!
    net_vat_liability: Float!
    filing_due_date: AWSDate!
    payment_due_date: AWSDate!
    filing_reference: String
}

# Core schema for PulseERP with AppSync and Aurora PostgreSQL
type Customer @aws_api_key @aws_cognito_user_pools @aws_iam {
    id: ID!
    name: String!
    email: String
    phone: String
    address: String
    tenant_id: ID!
    created_at: AWSDateTime
    updated_at: AWSDateTime
    is_active: Boolean
    _version: Int
    _deleted: Boolean
    customer_files: [CustomerFile]
    # Additional fields based on the actual schema
    loyalty_points: Int
    registration_date: AWSDate
    customer_type: String
    contact_information: AWSJSON
    credit_limit: Float
    total_credit: Float
    business_type: String
    industry_sector: String
    tax_id: String
    company_size: String
    annual_revenue: Float
    segment: String
    status: String
    source: String
    acquisition_cost: Float
    lifetime_value: Float
    last_purchase_date: AWSDateTime
    purchase_frequency: String
    average_order_value: Float
    risk_score: Int
    payment_terms: AWSJSON
    credit_score: Int
    preferences: AWSJSON
    account_manager_id: ID
    notes: String
    tags: String
    _lastchanged: AWSDateTime
}

type CustomerConnection @aws_api_key @aws_cognito_user_pools @aws_iam {
    items: [Customer]
    nextToken: String
}

type CustomerFile @aws_api_key @aws_cognito_user_pools @aws_iam {
    id: ID!
    customer_id: ID!
    file_key: String!
    file_name: String
    file_type: String
    upload_date: AWSDateTime
    tenant_id: ID!
    _version: Int
    _deleted: Boolean
}

# Customer Info for invoice display
type CustomerInfo @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
}

type CustomerInner {
    id: ID!
    name: String!
}

type DashboardInventoryMovement @aws_cognito_user_pools {
    product_name: String!
    movement_type: String!
    quantity_change: Float!
    movement_date: AWSDateTime
    notes: String
}

type DashboardInventoryStatus @aws_cognito_user_pools {
    in_stock: Int!
    out_of_stock: Int!
    low_stock: Int!
    total_quantity: Float!
    avg_quantity: Float!
}

input DateRangeFilterInput {
    startDate: AWSDate
    endDate: AWSDate
}

input DateRangeInput {
    startDate: AWSDateTime
    endDate: AWSDateTime
    period: String
}

# Input for deleting a bank account
input DeleteBankAccountInput {
    id: ID!
    tenant_id: ID!
    deleted_by: ID!
}

# Response for bank account deletion
type DeleteBankAccountResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

type DeleteEmployeeCompensationResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
}

type DeletePostingDefinitionResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    errors: [String!]
}

# Delete operation response types
type DeleteProductResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String!
    productId: ID
    wasAlreadyDeleted: Boolean
}

type DeleteProductResult @aws_api_key @aws_cognito_user_pools {
    productId: ID!
    success: Boolean!
    message: String!
    wasAlreadyDeleted: Boolean
}

type DeleteProductsResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    total: Int!
    successful: Int!
    failed: Int!
    results: [DeleteProductResult!]!
}

type DeleteSalaryStructureResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
}

type DemandForecast @aws_api_key @aws_cognito_user_pools {
    productId: String!
    productName: String!
    forecastPeriod: String!
    predictedDemand: Float!
    confidence: Float!
    trendDirection: String!
}

# Department Type Definition
type Department @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    name: String!
    type: String!
    description: String
    manager_employee_id: ID
    manager: AWSJSON
    level: Int!
    is_active: Boolean!
    metadata: AWSJSON
    parent_department_id: ID
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    manager_role_id: ID
    managers: [DepartmentManager]
}

type DepartmentAssignmentHistory {
    id: ID!
    department_id: ID!
    department_name: String!
    start_date: String!
    end_date: String
    assignment_reason: String
    assignment_type: String
}

# Enhanced input for department management scenarios
input DepartmentAssignmentInput {
    # Primary department assignment
    department_id: ID
    # Whether this change should also affect management
    update_management_accordingly: Boolean
    # Reason for the change (for audit trail)
    change_reason: String
}

# Department list response type
type DepartmentConnection {
    items: [Department]!
    nextToken: String
}

type DepartmentEmployeeCount {
    department_id: ID!
    department_name: String!
    employee_count: Int!
}

# Input for department employee in update operations
input DepartmentEmployeeInput {
    id: ID!
    _status: DepartmentEmployeeStatus!
}

# Status enum for department employee actions
enum DepartmentEmployeeStatus {
    new
    removed
    unchanged
}

# Type for grouped assignments by department (when departmentId is not provided)
type DepartmentGroupedAssignments @aws_api_key @aws_cognito_user_pools {
    department_id: ID!
    department_name: String
    assignments: [WorkOrderAssignmentWithDetails!]!
}

type DepartmentInvoice @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    work_order_id: ID!
    department_id: ID!
    invoice_number: String!
    invoice_date: String
    due_date: String!
    subtotal_amount: Float!
    vat_percentage: Float!
    vat_amount: Float!
    total_amount: Float!
    status: String
    customer_id: ID!
    customer_notes: String
    internal_notes: String
    created_at: String
    updated_at: String
    created_by: ID
    last_updated_by: ID
    payment_terms: String
    currency: String
    sent_date: String
    sent_by: ID
    last_reminder_date: String
    reminder_count: Int
    dispute_reason: String
    dispute_date: String
    dispute_resolved_date: String
}

# Department Invoice with Payments for the payments page
type DepartmentInvoiceWithPayments @aws_api_key @aws_cognito_user_pools {
    id: ID!
    invoice_number: String!
    work_order_id: ID!
    invoice_date: String
    due_date: String!
    subtotal_amount: Float!
    vat_amount: Float!
    total_amount: Float!
    status: String!
    payment_terms: String
    currency: String
    work_order: WorkOrderInfo!
    customer: CustomerInfo!
    payments: [InvoicePayment!]!
}

type DepartmentInvoicesConnection @aws_api_key @aws_cognito_user_pools {
    items: [DepartmentInvoice!]!
}

# Response type for department invoices with payments
type DepartmentInvoicesWithPaymentsResponse
    @aws_api_key
    @aws_cognito_user_pools {
    items: [DepartmentInvoiceWithPayments!]!
}

input DepartmentManagementInput {
    # Departments to manage
    managed_departments: [ManagedDepartmentInput!]
    # Whether to keep current department assignment
    keep_current_department: Boolean
    # If not keeping current, new primary department
    new_primary_department_id: ID
    # Management change reason
    management_change_reason: String
}

type DepartmentManager @aws_api_key @aws_cognito_user_pools @aws_iam {
    id: ID!
    department_id: ID!
    department_name: ID!
    employee_id: ID
    employee_name: String
    role_id: ID
    role_name: String
    is_primary: Boolean
    start_date: AWSDateTime
    end_date: AWSDateTime
    tenant_id: ID!
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
}

type DepartmentManagerConnection @aws_api_key @aws_cognito_user_pools {
    items: [DepartmentManager]!
    nextToken: String
}

# Input for department manager in update operations
input DepartmentManagerInput {
    id: ID
    employee_id: ID!
    role_id: ID!
    is_primary: Boolean!
    start_date: AWSDateTime
    end_date: AWSDateTime
    _status: DepartmentManagerStatus!
}

# Status enum for department manager actions
enum DepartmentManagerStatus {
    new
    removed
    updated
    unchanged
}

# Work Order Planning Types
type DepartmentPlanning {
    id: ID!
    name: String!
    work_orders: [WorkOrderSummary]!
    pending_assignments: Int!
    accepted_assignments: Int!
    completed_assignments: Int!
    cancelled_assignments: Int!
    in_progress_assignments: Int!
    rejected_assignments: Int!
    executing_assignments: Int!
    ready_for_execution_assignments: Int!
    total_assignments: Int!
    inventory_status: InventoryStatus
}

type DepartmentPlanningResponse {
    departments: [DepartmentPlanning]!
}

type DepartmentWithAssignments @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String
    assignments: [WorkOrderAssignment] @aws_api_key @aws_cognito_user_pools
}

type DepartmentWorkOrderItem @aws_cognito_user_pools @aws_api_key {
    work_order: WorkOrderDetails
    department: Department
    status: String
    assigned_at: AWSDateTime
    accepted_at: AWSDateTime
    service_tasks: [DepartmentWorkOrderServiceTask]
    planning_status: DepartmentWorkOrderPlanningStatus
}

# Department work order planning type
type DepartmentWorkOrderPlanning @aws_api_key @aws_cognito_user_pools {
    id: ID
    current_phase: String
    department_id: ID!
    resources_estimated: Boolean
    subtasks_defined: Boolean
    team_assigned: Boolean
    ready_for_approval: Boolean
}

type DepartmentWorkOrderPlanningStatus @aws_cognito_user_pools @aws_api_key {
    id: ID
    work_order_id: ID
    department_id: ID
    current_phase: String
    created_by: ID
    tenant_id: ID
    created_at: AWSDateTime
    updated_at: AWSDateTime
    resources_estimated: Boolean
    subtasks_defined: Boolean
    team_assigned: Boolean
    manager_reviewed: Boolean
    estimated_start_date: AWSDateTime
    estimated_completion_date: AWSDateTime
    notes: String
    updated_by: ID
    priority: String
    manager_review_status: String
    manager_review_notes: String
    manager_review_by: ID
    manager_review_date: AWSDateTime
    ready_for_approval: Boolean
}

type DepartmentWorkOrderResponse @aws_cognito_user_pools @aws_api_key {
    work_orders: [DepartmentWorkOrderItem]
}

# Add Department Work Order types
type DepartmentWorkOrderServiceTask @aws_cognito_user_pools @aws_api_key {
    id: ID
    status: String
    description: String
    start_date: AWSDateTime
    end_date: AWSDateTime
    actual_duration: Float
    service_task_template: ServiceTaskTemplate
}

input DeviceInfoInput {
    deviceType: String!
    deviceId: String!
    deviceName: String!
    platform: String!
    appVersion: String!
    timezone: String
    language: String
}

input DimensionValueInput {
    dimension: String!
    value: Float!
}

# Enum for duplicate handling strategies during import
enum DuplicateStrategy {
    SKIP
    UPDATE_INVENTORY
    REPLACE
}

# Enhanced Employee type to return comprehensive department information
type Employee @aws_api_key @aws_cognito_user_pools {
    id: ID!
    first_name: String!
    last_name: String!
    email: String
    phone: String
    address: String
    date_of_birth: String
    # Primary department assignment
    department_id: ID
    department_name: String
    # Role information
    role_id: ID
    role_name: String
    gross_salary: Float
    net_salary: Float
    employee_id: String!
    start_date: String
    tenant_id: ID!
    created_at: String
    updated_at: String
    created_by: ID
    updated_by: ID
    status: String
    user_email: String
    branch_id: ID
    employment_type: String
    job_title: String
    contract_start_date: String
    contract_end_date: String
    supervisor_id: ID
    work_location: String
    termination_date: String
    termination_reason: String
    is_active: Boolean
    national_id: String
    tax_id_number: String
    custom_fields: String
    bio: String
    # ENHANCED: Comprehensive management information
    is_department_manager: Boolean
    managed_departments: [ManagedDepartmentDetails!]
    # Department assignment history and context
    department_assignment_history: [DepartmentAssignmentHistory!]
    # Management permissions derived from roles and assignments
    effective_permissions: EmployeePermissions
    employee_files: [EmployeeFile!]
    role: Role
}

type EmployeeBasic @aws_api_key @aws_cognito_user_pools {
    id: ID!
    first_name: String!
    last_name: String!
    email: String!
}

type EmployeeChangeLog {
    change_type: String!
    old_value: String
    new_value: String
    change_reason: String
    timestamp: String!
}

# Employee Compensation Types
type EmployeeCompensation @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    employee_id: ID!
    salary_structure_id: ID
    salary_type: SalaryType
    base_salary: Float
    hourly_rate: Float
    commission_rate: Float
    overtime_multiplier: Float
    currency: String!
    pay_frequency: PayFrequency
    allowances: AWSJSON
    deductions: AWSJSON
    bonus_structure: AWSJSON
    effective_date: AWSDate!
    end_date: AWSDate
    is_active: Boolean!
    change_reason: String
    approved_by: ID
    created_by: ID
    updated_by: ID
    # Workflow fields
    status: CompensationStatus!
    workflow_id: ID
    submitted_at: AWSDateTime
    approved_at: AWSDateTime
    rejected_at: AWSDateTime
    rejection_reason: String
    current_approval_step: Int
    approval_history: AWSJSON
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    # Related data
    employee: Employee
    salary_structure: SalaryStructure
    approver: Employee
    creator: Employee
    updater: Employee
    workflow: ApprovalWorkflow
}

type EmployeeCompensationConnection @aws_api_key @aws_cognito_user_pools {
    items: [EmployeeCompensation!]!
    nextToken: String
}

input EmployeeCompensationFilterInput {
    employee_id: ID
    salary_structure_id: ID
    is_active: Boolean
    status: CompensationStatus
    searchTerm: String
    # Advanced filter fields
    salary_type: SalaryType
    pay_frequency: PayFrequency
    min_salary: Float
    max_salary: Float
    effective_date_from: AWSDate
    effective_date_to: AWSDate
}

type EmployeeConnection @aws_api_key @aws_cognito_user_pools @aws_iam {
    items: [Employee]!
    nextToken: String
}

type EmployeeFile @aws_api_key @aws_cognito_user_pools @aws_iam {
    id: ID!
    employee_id: ID!
    file_id: ID!
    file_key: String!
    file_name: String
    file_type: String
    file_category: String
    upload_date: AWSDateTime
    tenant_id: ID!
    created_at: AWSDateTime!
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
}

# Employee Files Types
type EmployeeFileDetails @aws_api_key @aws_cognito_user_pools {
    id: ID!
    employee_id: ID!
    employee_name: String!
    employee_employee_id: String
    file_id: ID!
    file_key: String!
    file_name: String!
    file_type: String
    file_category: String
    file_size: Int
    source_type: String!
    # 'employee_file' or 'personnel_action_file'
    source_id: ID
    # personnel_action_id if from personnel action
    upload_date: AWSDateTime
    uploaded_by: String
    uploaded_by_employee: EmployeeBasic
    tenant_id: ID!
    created_at: AWSDateTime!
    updated_at: AWSDateTime
}

input EmployeeFileInput {
    file_key: String!
    file_name: String
    file_type: String
    file_category: String
}

type EmployeeFilesConnection @aws_api_key @aws_cognito_user_pools {
    items: [EmployeeFileDetails!]!
    nextToken: String
    total: Int
}

input EmployeeFilesFilterInput {
    searchTerm: String
    employee_id: ID
    employee_name: String
    file_category: String
    source_type: String
    date_from: AWSDate
    date_to: AWSDate
}

input EmployeeFilterInput {
    searchTerm: String
    department_id: ID
    status: String
    employment_type: String
    is_active: Boolean
    role_id: ID
    supervisor_id: ID
    is_department_manager: Boolean
}

type EmployeeImpactMetrics {
    # Work management
    workOrdersCreated: Int
    workOrdersApproved: Int
    workOrdersAssigned: Int
    # Resource management
    resourcesManaged: Int
    inventoryTransactionsInitiated: Int
    # Financial impact
    purchaseOrdersApproved: Int
    expensesApproved: Int
    # Team management
    directReports: [Employee]
    directReportsCount: Int
    teamAssignmentsCount: Int
    # Customer impact
    customerInteractionsCount: Int
    managedCustomersCount: Int
    # System impact
    totalRelatedRecords: Int
    managedDepartments: [Department]
}

type EmployeePermissions {
    # Departments the employee has access to
    accessible_departments: [ID!]!
    # Departments the employee manages
    managed_departments: [ID!]!
    # Whether the employee can manage roles
    can_manage_roles: Boolean!
    # Whether the employee can manage departments
    can_manage_departments: Boolean!
    # Specific scopes/permissions
    scopes: [String!]!
}

type EmployeeRole {
    role_name: String!
}

type EmploymentTypeCount {
    employment_type: String!
    count: Int!
}

type EquipmentModel @aws_api_key @aws_cognito_user_pools {
    id: ID
    name: String!
    description: String
    equipment_type_id: ID!
    machine_brand_id: ID!
    year: Int
    tenant_id: ID!
    created_at: String
    updated_at: String
    manufacturer: String
    specifications: AWSJSON
    created_by: ID
    updated_by: ID
    # Relationships
    equipment_type: EquipmentType
    machine_brand: MachineBrand
}

type EquipmentModelConnection {
    items: [EquipmentModel]
    nextToken: String
}

type EquipmentModelInner {
    id: ID!
    name: String!
    manufacturer: String
    equipment_type: EquipmentTypeInner
}

type EquipmentType @aws_api_key @aws_cognito_user_pools {
    id: ID
    name: String!
    description: String
    classification: String
    can_have_attachments: Boolean!
    tenant_id: ID!
    created_at: String
    updated_at: String
    created_by: ID
    updated_by: ID
}

type EquipmentTypeCompatibility {
    id: ID
    equipment_type_id: ID!
    attachment_type_id: ID!
    tenant_id: ID!
    created_at: String
    updated_at: String
    notes: String
    created_by: ID
    updated_by: ID
    # Relationships
    equipmentType: EquipmentType
    attachmentType: EquipmentType
}

type EquipmentTypeCompatibilityConnection {
    items: [EquipmentTypeCompatibility]
    nextToken: String
}

type EquipmentTypeConnection {
    items: [EquipmentType]
    nextToken: String
}

type EquipmentTypeInner {
    id: ID!
    name: String!
    classification: String
    can_have_attachments: Boolean
}

type ExcessStockItem @aws_api_key @aws_cognito_user_pools {
    productId: String!
    productName: String!
    currentQuantity: Float!
    optimalQuantity: Float!
    excessValue: Float!
    monthsOfSupply: Float!
    carryingCost: Float!
}

# Expense Types
type Expense @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    category_id: ID
    project_id: ID
    product_id: ID
    amount: Float!
    currency: String!
    description: String
    expense_date: AWSDate
    work_order_id: ID
    created_by: ID!
    approved_by: ID
    status: String!
    notes: String
    payment_method: String
    bank_account_id: ID
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
}

# Expense Category Type Definition
type ExpenseCategory @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: String!
    name: String!
    description: String
    created_at: AWSDateTime
    updated_at: AWSDateTime
    color: String!
    icon: String!
    budget_limit: Float
    created_by: ID!
    is_active: Boolean!
    created_by_employee: Employee
}

# Expense Category list response type
type ExpenseCategoryConnection @aws_api_key @aws_cognito_user_pools {
    items: [ExpenseCategory]!
    total: Int!
}

type ExpenseConnection @aws_api_key @aws_cognito_user_pools {
    items: [ExpenseWithRelations!]!
    total: Int!
}

type ExpenseDiagnostic @aws_api_key @aws_cognito_user_pools {
    operation: String!
    notification_config_found: Boolean!
    required_scopes: [String]
    recipients_created: Int
}

type ExpenseFile @aws_api_key @aws_cognito_user_pools {
    id: ID!
    file_key: String!
    file_name: String!
    created_at: AWSDateTime!
}

input ExpenseFileInput {
    key: String!
    file_name: String!
}

# Expense Types with relationships
type ExpenseWithRelations @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    category_id: ID
    project_id: ID
    product_id: ID
    amount: Float!
    currency: String!
    description: String
    expense_date: AWSDate
    work_order_id: ID
    created_by: ID!
    approved_by: ID
    status: String!
    notes: String
    payment_method: String
    bank_account_id: ID
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    # Related entities
    expense_category: ExpenseCategory
    project: ProjectWithBudgetItems
    product: ProductBasic
    work_order: WorkOrder
    created_by_employee: EmployeeBasic
    approved_by_employee: EmployeeBasic
    bank_account: BankAccountBasic
    expense_files: [ExpenseFile]
}

type FeaturedProduct @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    slug: String
    description: String
    shortDescription: String
    price: Float
    originalPrice: Float
    featured: Boolean!
    status: String!
    displayOrder: Int
    seoTitle: String
    seoDescription: String
    seoKeywords: String
    publishedAt: AWSDateTime
    categoryName: String
    brandName: String
    images: [ProductImage!]!
    cmsMetadata: AWSJSON
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

# File Type Definition
type File @aws_api_key @aws_cognito_user_pools {
    id: ID!
    key: String!
    file_name: String!
    file_type: String
    created_at: AWSDateTime!
    updated_at: AWSDateTime
}

input FinalizeDepartmentInvoiceInput {
    invoice_id: ID!
    tenant_id: ID!
    created_by: ID!
}

type FinalizeDepartmentInvoiceResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
    invoice: AWSJSON
    work_order: AWSJSON
    diagnostic: AWSJSON
}

type FinancialMetrics @aws_cognito_user_pools {
    total_inventory_value: Float!
    total_cost_value: Float!
    potential_profit: Float!
    avg_margin: Float!
    highest_value_product: HighestValueProduct
}

# Fiscal Periods
type FiscalPeriod @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenantId: ID!
    fiscalYear: Int!
    periodNumber: Int!
    periodName: String!
    startDate: AWSDate!
    endDate: AWSDate!
    status: String!
    closedAt: AWSDateTime
    closedBy: ID
    closingNotes: String
    lockedAt: AWSDateTime
    lockedBy: ID
    ethiopianYear: Int
    ethiopianMonth: Int
    createdAt: AWSDateTime
    updatedAt: AWSDateTime
    createdBy: ID
    updatedBy: ID
    # Relationships
    closedByEmployee: Employee
    lockedByEmployee: Employee
    createdByEmployee: Employee
    updatedByEmployee: Employee
}

type FiscalPeriodConnection @aws_api_key @aws_cognito_user_pools {
    items: [FiscalPeriod!]!
    nextToken: String
}

# New type for formula
type Formula {
    id: ID!
    formula_components: [FormulaComponent]
}

# Formula component type
type FormulaComponent {
    id: ID!
    component_type: String!
    value: Int
    dimension_id: ID
    operator: String
    sequence_number: Int!
}

# Input for formula component
input FormulaComponentInput {
    type: String!
    # 'dimension' or 'operator'
    value: String!
    # Either a dimension name or operator symbol
    seq: Int!
}

input GenerateAIAnalysisInput {
    result_id: ID!
    tier: QuizResultTier!
    force_regenerate: Boolean
    language_preference: String
}

type GenerateAIAnalysisResponse @aws_api_key @aws_cognito_user_pools {
    result: QuizResult!
    analysis_generated: Boolean!
    processing_time_seconds: Int
    success: Boolean!
    message: String
}

input GeneratePayslipsInput {
    tenant_id: ID!
    payroll_run_id: ID!
    employee_ids: [ID!]
}

type GeneratePayslipsResponse {
    success: Boolean!
    message: String
    payslipsGenerated: Int
    errors: [String]
    payslips: [Payslip]
}

type GetNotificationTypesResponse {
    success: Boolean!
    error: String
    notificationTypes: [NotificationType!]!
}

type GetUserNotificationPreferencesResponse {
    success: Boolean!
    error: String
    preferences: [NotificationPreference!]!
}

type GetUserNotificationsResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    error: String
    notifications: [UserNotification!]!
    totalCount: Int!
    unreadCount: Int!
}

type GetUserPushSubscriptionsResponse {
    success: Boolean!
    error: String
    subscriptions: [PushSubscription!]!
}

# HR Dashboard Statistics Type
type HRDashboardStats {
    # Employee Statistics
    total_employees: Int!
    active_employees: Int!
    new_hires_this_month: Int!
    departures_this_month: Int!
    # Organizational Statistics
    departments_count: Int!
    open_positions: Int!
    # Time & Attendance Statistics
    pending_leave_requests: Int!
    upcoming_birthdays: Int!
    # Personnel Actions Statistics
    pending_personnel_actions: Int!
    completed_personnel_actions_this_month: Int!
    # Payroll Statistics
    payroll_cost_this_month: Float
    overtime_hours_this_month: Float
    # Average metrics
    average_tenure_months: Float
    # Breakdown statistics
    employees_by_department: [DepartmentEmployeeCount!]!
    employees_by_employment_type: [EmploymentTypeCount!]!
    recent_personnel_actions: [RecentPersonnelAction!]!
}

# Input for resource request verification action
input HandleResourceRequestApprovalActionInput {
    requestId: ID!
    action: String!
    notes: String
    employeeId: ID!
    tenantId: ID!
}

# Response type for resource request verification action
type HandleResourceRequestApprovalActionResponse
    @aws_api_key
    @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

# Input for resource request preparation action
input HandleResourceRequestPreparationActionInput {
    requestId: ID!
    preparedQuantity: Float!
    preparedDimensionValues: AWSJSON
    preparationNotes: String
    employeeId: ID!
    tenantId: ID!
}

# Response type for resource request preparation action
type HandleResourceRequestPreparationActionResponse
    @aws_api_key
    @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

# Input for resource request verification action
input HandleResourceRequestVerificationActionInput {
    requestId: ID!
    action: String!
    notes: String
    employeeId: ID!
    tenantId: ID!
}

# Response type for resource request verification action
type HandleResourceRequestVerificationActionResponse
    @aws_api_key
    @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

input HandleVerifyResourceReturnInput {
    requestId: ID!
    verifiedQuantity: Float!
    verifiedDimensionValues: AWSJSON
    verificationNotes: String
    status: String
    verifiedBy: ID!
    tenantId: ID!
}

type HandleVerifyResourceReturnResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

input HandleWorkOrderClosureApprovalInput {
    work_order_id: ID!
    status: String!
    tenant_id: ID!
    created_by: ID!
    notes: String
}

type HandleWorkOrderClosureApprovalResponse
    @aws_api_key
    @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

input HandleWorkOrderFinancialReviewInput {
    work_order_id: ID!
    departments: AWSJSON!
    settings: WorkOrderFinancialReviewSettingsInput!
    adjustments: WorkOrderFinancialReviewAdjustmentsInput!
    notes: String
    status: String!
    employee_id: ID!
    tenant_id: ID!
}

type HandleWorkOrderFinancialReviewResponse
    @aws_api_key
    @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

type HeroSection @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenantId: String!
    badge: String
    headline: String!
    subtitle: String
    firstWordStyle: WordStyle!
    lastWordStyle: WordStyle!
    cta: CallToAction!
    backgroundMedia: BackgroundMedia!
    isActive: Boolean!
    order: Int!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type HighestValueProduct @aws_cognito_user_pools {
    name: String!
    value: Float!
}

# Payroll Workflow Types
input InitiatePayrollApprovalInput {
    tenant_id: ID!
    payroll_run_id: ID!
    requested_by: ID
    request_notes: String
}

type InitiatePayrollApprovalResponse {
    success: Boolean!
    message: String
    workflowInstanceId: ID
    workflowName: String
    currentStep: Int
    totalSteps: Int
}

# Input for analytics filtering
input InventoryAnalyticsFilterInput {
    warehouseIds: [ID]
    outletIds: [ID]
    categoryIds: [ID]
    brandIds: [ID]
    productTypes: [String]
    dateRange: DateRangeInput
    includeInactive: Boolean
}

# Enhanced Inventory Analytics Types
type InventoryAnalyticsResponse @aws_api_key @aws_cognito_user_pools {
    valueMetrics: InventoryValueMetrics!
    stockHealth: InventoryStockHealth!
    predictiveInsights: InventoryPredictiveInsights!
    movementAnalytics: InventoryMovementAnalytics!
    optimizationOpportunities: [InventoryOptimizationOpportunity!]!
    trendAnalysis: InventoryTrendAnalysis!
    generatedAt: AWSDateTime!
}

type InventoryConnection {
    items: [InventoryItem]!
    nextToken: String
}

# Comprehensive Inventory Dashboard Insights Response Types
type InventoryDashboardInsights {
    totalItems: Int!
    totalValue: Float!
    stockAlerts: Int!
    dimensionAlerts: Int!
    recentMovements: Int!
    stockHealth: StockHealthBreakdown!
    valueByCategory: [CategoryValueBreakdown!]!
    valueByLocation: [LocationValueBreakdown!]!
    valueByProductType: [ProductTypeValueBreakdown!]!
    trackingMethodStats: TrackingMethodStats!
    consumablesInsights: ConsumablesInsights!
    sparePartsInsights: SparePartsInsights!
}

# Inventory dimension type
type InventoryDimension {
    dimension: String!
    unit_id: String!
    is_primary: Boolean!
    is_consumable: Boolean!
    is_sale_unit: Boolean!
    is_purchase_unit: Boolean!
    minimum_usable_value: Float!
    abbreviation: String
}

# Input for inventory dimension
input InventoryDimensionInput {
    dimension: String!
    unit_id: String!
    is_primary: Boolean!
    is_consumable: Boolean!
    is_sale_unit: Boolean!
    is_purchase_unit: Boolean!
    minimum_usable_value: Float!
    abbreviation: String
}

type InventoryDimensionValue {
    id: ID!
    product_dimension_id: ID!
    current_value: Float!
    minimum_value: Float
    maximum_value: Float
    last_updated: AWSDateTime
    created_by: SimplePerson
    updated_by: SimplePerson
}

# Inventory dimension value detail
type InventoryDimensionValueDetail @aws_api_key @aws_cognito_user_pools {
    id: ID!
    dimension_id: ID!
    dimensionName: String!
    current_value: Float!
    minimum_value: Float
    maximum_value: Float
    abbreviation: String
}

# Input type for inventory filtering
input InventoryFilterInput {
    productIds: [ID]
    warehouseIds: [ID]
    outletIds: [ID]
    searchTerm: String
}

type InventoryInsights @aws_cognito_user_pools {
    recent_movements: [DashboardInventoryMovement!]!
    total_movements_today: Int!
}

# Inventory-related types
type InventoryItem {
    id: ID!
    product_id: ID!
    tracking_method: String!
    current_quantity: Float!
    unit_cost: Float
    warehouse_id: ID
    outlet_id: ID
    last_purchase_date: AWSDateTime
    last_sale_date: AWSDateTime
    last_movement_date: AWSDateTime
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    product: Product
    warehouse: Warehouse
    outlet: Outlet
    inventory_dimension_values: [InventoryDimensionValue]
    inventory_movements: [InventoryMovementInventory]
    created_by: Employee
    updated_by: Employee
}

type InventoryLocation {
    id: ID!
    warehouse_id: ID
    outlet_id: ID
    current_quantity: Float
    tracking_method: String
}

# Inventory location detail - warehouse/outlet information
type InventoryLocationDetail @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    code: String!
    type: String!
    manager: InventoryLocationManager
}

# Inventory location manager
type InventoryLocationManager @aws_api_key @aws_cognito_user_pools {
    id: ID!
    first_name: String!
    last_name: String!
    email: String
}

type InventoryMovement @aws_api_key @aws_cognito_user_pools {
    id: ID!
    inventory_id: ID!
    movement_type: String!
    reference_type: String!
    reference_id: String!
    quantity_change: Float!
    unit_cost: Float
    previous_quantity: Float!
    new_quantity: Float!
    movement_date: AWSDateTime!
    notes: String
    created_at: AWSDateTime!
    created_by: MovementUser!
    inventory: MovementInventory!
    inventory_movement_dimensions: [MovementDimension]!
}

# Movement and velocity analytics
type InventoryMovementAnalytics @aws_api_key @aws_cognito_user_pools {
    velocityMetrics: VelocityMetrics!
    movementFrequency: MovementFrequency!
    turnoverAnalysis: TurnoverAnalysis!
    movementTrends: [MovementTrend!]!
    activityHeatmap: [ActivityPeriod!]!
    productVelocityRanking: [ProductVelocityRank!]!
}

type InventoryMovementDimension {
    dimension_id: ID!
    previous_value: Float
    change_value: Float
    new_value: Float
}

input InventoryMovementDimensionInput {
    dimension_id: ID!
    change_value: Float!
}

# Input for filtering inventory movements
input InventoryMovementFilterInput {
    movementTypes: [String]
    searchTerm: String
    warehouseIds: [ID]
    outletIds: [ID]
    referenceTypes: [String]
    dateFrom: AWSDateTime
    dateTo: AWSDateTime
    showOnlyAffectingInventory: Boolean
}

type InventoryMovementInventory {
    id: ID!
    movement_type: String!
    reference_type: String
    reference_id: String
    quantity_change: Float!
    unit_cost: Float
    previous_quantity: Float
    new_quantity: Float
    movement_date: AWSDateTime!
    notes: String
    created_by: SimplePerson
    inventory_movement_dimensions: [InventoryMovementDimension]
}

# Optimization opportunities for cost reduction and efficiency
type InventoryOptimizationOpportunity @aws_api_key @aws_cognito_user_pools {
    type: String!
    priority: String!
    description: String!
    potentialSavings: Float!
    implementationEffort: String!
    impactedProducts: [String!]!
    actionItems: [String!]!
    roi: Float!
}

# Predictive analytics and forecasting
type InventoryPredictiveInsights @aws_api_key @aws_cognito_user_pools {
    stockoutPredictions: [StockoutPrediction!]!
    demandForecasts: [DemandForecast!]!
    seasonalTrends: [SeasonalTrend!]!
    reorderPoints: [ProductReorderPoint!]!
    leadTimeAnalysis: LeadTimeAnalysis!
    consumptionPatterns: [ConsumptionPattern!]!
    riskAssessment: StockRiskAssessment!
}

type InventoryStatus {
    critical_items: [CriticalInventoryItem]!
    low_stock_items: [LowStockItem]!
}

# Comprehensive stock health analysis
type InventoryStockHealth @aws_api_key @aws_cognito_user_pools {
    healthScore: Float!
    criticalItems: [CriticalStockItem!]!
    outOfStockItems: [OutOfStockItem!]!
    excessStockItems: [ExcessStockItem!]!
    reorderRecommendations: [ReorderRecommendation!]!
    stockDistribution: StockDistribution!
    agingAnalysis: StockAgingAnalysis!
    thresholdCompliance: Float!
}

# Trend analysis for strategic planning
type InventoryTrendAnalysis @aws_api_key @aws_cognito_user_pools {
    inventoryGrowthRate: Float!
    valueGrowthRate: Float!
    turnoverTrend: Float!
    efficiencyTrend: Float!
    costTrend: Float!
    performanceIndicators: [PerformanceIndicator!]!
    benchmarkComparisons: [BenchmarkMetric!]!
}

# Value-based metrics for enterprise decision making
type InventoryValueMetrics @aws_api_key @aws_cognito_user_pools {
    totalInventoryValue: Float!
    totalCostValue: Float!
    projectedValue: Float!
    potentialProfit: Float!
    averageMargin: Float!
    turnoverRate: Float!
    deadStockValue: Float!
    deadStockCount: Int!
    fastMovingValue: Float!
    slowMovingValue: Float!
    valueByCategory: [AnalyticsCategoryValueBreakdown!]!
    valueByLocation: [AnalyticsLocationValueBreakdown!]!
    valueGrowthTrend: Float!
    profitabilityScore: Float!
}

# Invoice Payment type
type InvoicePayment @aws_api_key @aws_cognito_user_pools {
    id: ID!
    payment_date: String!
    amount: Float!
    payment_method: String!
    reference_number: String
    payment_notes: String
    reconciled: Boolean!
    reconciled_at: String
}

# Invoice Payment Update Info
type InvoicePaymentUpdate @aws_api_key @aws_cognito_user_pools {
    id: ID!
    invoice_number: String!
    new_status: String!
    total_paid: Float!
    remaining_amount: Float!
}

# Job Position Types
type JobPosition @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    position_code: String!
    position_title: String!
    department_id: ID
    job_level: String
    employment_type: String
    min_salary: Float
    max_salary: Float
    job_description: String
    requirements: [String!]
    responsibilities: [String!]
    benefits: [String!]
    default_role: ID
    roles: AWSJSON
    is_active: Boolean!
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    created_by: ID
    updated_by: ID
    # Related data
    department: Department
}

type JobPositionConnection @aws_api_key @aws_cognito_user_pools {
    items: [JobPosition!]!
    nextToken: String
}

input JobPositionFilterInput {
    department_id: ID
    job_level: String
    employment_type: String
    is_active: Boolean
    searchTerm: String
}

# Journal Entries
type JournalEntry @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenantId: ID!
    journalNumber: String!
    description: String!
    journalDate: AWSDate!
    fiscalPeriodId: ID!
    sourceType: String!
    postingDate: AWSDate!
    sourceReference: String
    totalDebit: Float!
    totalCredit: Float!
    status: String!
    workflowStatus: String
    postedAt: AWSDateTime
    postedBy: ID
    approvedAt: AWSDateTime
    approvedBy: ID
    reversedAt: AWSDateTime
    reversedBy: ID
    reversalJournalEntryId: ID
    batchId: String
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
    createdBy: ID!
    updatedBy: ID
    # Relationships
    fiscalPeriod: FiscalPeriod
    journalEntryLines: [JournalEntryLine!]!
    postedByEmployee: Employee
    approvedByEmployee: Employee
    reversedByEmployee: Employee
    reversalJournalEntry: JournalEntry
    createdByEmployee: Employee!
    updatedByEmployee: Employee
}

type JournalEntryConnection @aws_api_key @aws_cognito_user_pools {
    items: [JournalEntry!]!
    nextToken: String
    totalCount: Int
}

# Journal Entry Inputs
input JournalEntryFilterInput {
    status: String
    workflowStatus: String
    sourceType: String
    fiscalPeriodId: ID
    accountId: ID
    dateRange: DateRangeFilterInput
    searchTerm: String
    createdBy: ID
    batchId: String
}

# Journal Entry Lines
type JournalEntryLine @aws_api_key @aws_cognito_user_pools {
    id: ID!
    journalEntryId: ID!
    lineNumber: Int!
    accountId: ID!
    description: String!
    debitAmount: Float
    creditAmount: Float
    departmentId: ID
    branchId: ID
    customerId: ID
    supplierId: ID
    currency: String!
    exchangeRate: Float
    foreignDebitAmount: Float
    foreignCreditAmount: Float
    taxAmount: Float
    taxRate: Float
    taxType: String
    referenceId: ID
    referenceType: String
    dimensionValues: AWSJSON
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
    # Relationships
    journalEntry: JournalEntry!
    account: ChartOfAccount!
    department: Department
    branch: Outlet
    customer: Customer
    supplier: Customer
}

type JournalEntryLineConnection @aws_api_key @aws_cognito_user_pools {
    items: [JournalEntryLine!]!
    nextToken: String
}

# Labor employee detail for resource usage
type LaborEmployeeDetail @aws_api_key @aws_cognito_user_pools {
    id: ID
    first_name: String
    last_name: String
    email: String
    employee_id: String
    phone: String
    status: String
    department_id: ID
    job_title: String
    employment_type: String
    is_active: Boolean
    role: Role
}

# Labor resource detail type for resource usage
type LaborResourceDetail @aws_api_key @aws_cognito_user_pools {
    team_assignment: TeamAssignmentDetail
    employee: Employee
}

type LeadTimeAnalysis @aws_api_key @aws_cognito_user_pools {
    averageLeadTime: Float!
    minLeadTime: Float!
    maxLeadTime: Float!
    leadTimeVariability: Float!
    reliability: Float!
}

# User ID mapping types
type LegacyIdResponse {
    legacyId: String
}

type LocationTurnover @aws_api_key @aws_cognito_user_pools {
    locationId: String!
    locationName: String!
    turnoverRate: Float!
    efficiency: Float!
}

type LocationValueBreakdown {
    locationId: String!
    locationName: String!
    locationType: String!
    value: Float!
    count: Int!
}

# Input for logging resource usage
input LogResourceUsageInput {
    subtaskId: ID!
    usageDate: String!
    usages: [AWSJSON!]!
    tenant_id: ID!
    created_by: ID!
}

# Response type for logging resource usage
type LogResourceUsageResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
    diagnostic: AWSJSON
}

type LogoConfig @aws_api_key @aws_cognito_user_pools {
    src: String!
    alt: String!
    href: String!
    text: String
}

input LogoConfigInput {
    src: String!
    alt: String!
    href: String!
    text: String
}

type LowStockItem {
    item_name: String!
    current_quantity: Float!
    minimum_required: Float!
}

type Machine @aws_api_key @aws_cognito_user_pools {
    id: ID
    name: String
    description: String
    serial_number: String
    equipment_model_id: ID!
    customer_id: ID
    status: String
    tenant_id: ID!
    created_at: String
    cost_per_hour: Float
    updated_at: String
    purchase_date: String
    last_maintenance_date: String
    warranty_expiry_date: String
    meta_data: AWSJSON
    created_by: ID
    updated_by: ID
    # Relationships
    equipment_model: EquipmentModel
    customer: Customer
}

type MachineAttachment {
    id: ID!
    machine_id: ID!
    attachment_id: ID!
    is_currently_attached: Boolean!
    attached_at: AWSDateTime
    detached_at: AWSDateTime
    # Changed from String
    notes: String
    tenant_id: ID!
    created_at: AWSDateTime
    # Changed from String
    updated_at: AWSDateTime
    # Changed from String
    created_by: ID
    updated_by: ID
    attachment: AttachmentInner
    # Ensure this structure matches client needs
    machine: MachineInner
    customer: Customer
}

type MachineAttachmentConnection {
    items: [MachineAttachment!]!
    nextToken: String
}

# Machine basic info
type MachineBasic @aws_api_key @aws_cognito_user_pools {
    id: ID
    name: String
    serial_number: String
    cost_per_hour: Float
    operational_status: String
}

# Update MachineBrand type to include files
type MachineBrand @aws_api_key @aws_cognito_user_pools {
    id: ID
    name: String!
    description: String
    tenant_id: ID!
    created_at: String
    updated_at: String
    created_by: ID
    updated_by: ID
    website: String
    machine_brand_files: [MachineBrandFile]
    models_count: Int
}

type MachineBrandConnection @aws_api_key @aws_cognito_user_pools {
    items: [MachineBrand]
    nextToken: String
    avg_models_per_brand: Int
    total_brands: Int
    total_models: Int
}

# Machine Brand File Type Definition
type MachineBrandFile @aws_api_key @aws_cognito_user_pools {
    id: ID!
    machine_brand_id: ID!
    file_key: String!
    file_name: String
    file_type: String
    created_at: AWSDateTime
    updated_at: AWSDateTime
    tenant_id: ID!
}

# Input for machine brand file
input MachineBrandFileInput {
    file_key: String!
    file_name: String!
    file_type: String
}

type MachineConnection @aws_api_key @aws_cognito_user_pools {
    items: [Machine]
    nextToken: String
}

input MachineFilter {
    equipment_type: String
    can_have_attachments: Boolean
}

type MachineInner @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    serial_number: String
    equipment_model: EquipmentModel
}

# Machine resource detail for resource usage
type MachineResourceDetail @aws_api_key @aws_cognito_user_pools {
    id: ID
    name: String
    product_code: String
    description: String
    technical_specs: AWSJSON
    secondary_part_no: String
    operational_status: String
    operating_hours: Float
    cost_per_hour: Float
    department_id: ID
    product_id: ID
    tenant_id: ID
    created_at: AWSDateTime
    updated_at: AWSDateTime
}

type MachinesByStatus @aws_cognito_user_pools {
    operational: Int
    maintenance: Int
    down: Int
    unknown: Int
}

type MachinesSummary @aws_cognito_user_pools {
    total_machines: Int!
    operational_machines: Int!
    total_operating_hours: Float!
    avg_cost_per_hour: Float!
    machines_by_status: MachinesByStatus
}

type ManagedDepartment @aws_api_key @aws_cognito_user_pools @aws_iam {
    id: ID!
    department_id: ID!
    department_name: String
    is_primary: Boolean!
    start_date: AWSDateTime
}

# New types for comprehensive department information
type ManagedDepartmentDetails {
    id: ID!
    department_id: ID!
    department_name: String!
    is_primary: Boolean!
    start_date: String!
    end_date: String
    role_id: ID
    role_name: String
    # Additional context
    management_type: String
    permissions_scope: [String!]
}

# Enhanced ManagedDepartmentInput
input ManagedDepartmentInput {
    department_id: ID!
    is_primary: Boolean!
    # Optional: specific start date for this management role
    start_date: String
    # Optional: role override for this specific department
    role_id_override: ID
}

# Add these new types
type MarkNotificationAsReadResponse {
    success: Boolean!
    message: String
    error: String
    unreadCount: Int
}

input MarkNotificationReadInput {
    notificationId: ID!
    profileId: ID!
    tenantId: ID!
}

input MarkNotificationsReadInput {
    notificationIds: [ID!]!
    profileId: ID!
    tenantId: ID!
}

type MarkNotificationsReadResponse {
    success: Boolean!
    message: String
    error: String
    updatedCount: Int
}

# Material resource detail type for resource usage
type MaterialResourceDetail @aws_api_key @aws_cognito_user_pools {
    subtask_resource_assignment: SubtaskResourceAssignmentDetail
    product: ProductResourceDetail
    machine: MachineResourceDetail
}

type MovementDimension @aws_api_key @aws_cognito_user_pools {
    dimension_id: String!
    previous_value: Float!
    change_value: Float!
    new_value: Float!
}

type MovementFrequency @aws_api_key @aws_cognito_user_pools {
    daily: Int!
    weekly: Int!
    monthly: Int!
    quarterly: Int!
    annually: Int!
}

type MovementInventory @aws_api_key @aws_cognito_user_pools {
    product: MovementProduct!
}

type MovementProduct @aws_api_key @aws_cognito_user_pools {
    name: String!
    product_code: String!
    unit: MovementUnit!
}

type MovementTrend @aws_api_key @aws_cognito_user_pools {
    period: String!
    inMovements: Int!
    outMovements: Int!
    inQuantity: Float!
    outQuantity: Float!
    netChange: Float!
    valueChange: Float!
}

type MovementUnit @aws_api_key @aws_cognito_user_pools {
    name: String!
    abbreviation: String!
}

type MovementUser @aws_api_key @aws_cognito_user_pools {
    first_name: String!
    last_name: String!
    email: String!
}

type NavbarConfig @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenantId: String!
    logo: LogoConfig!
    centerNavigation: [NavigationItem!]!
    rightNavigation: [NavigationItem!]!
    searchConfig: SearchConfig!
    cartConfig: CartConfig!
    styling: NavbarStyling!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type NavbarStyling @aws_api_key @aws_cognito_user_pools {
    heroOverlayStyles: StyleConfig!
    scrolledStyles: StyleConfig!
}

input NavbarStylingInput {
    heroOverlayStyles: StyleConfigInput!
    scrolledStyles: StyleConfigInput!
}

type NavigationItem @aws_api_key @aws_cognito_user_pools {
    text: String!
    href: String!
    target: String
}

input NavigationItemInput {
    text: String!
    href: String!
    target: String
}

# Response Types
type NotificationMutationResponse {
    success: Boolean!
    message: String
    error: String
}

type NotificationPreference {
    notification_type: String!
    channels: [String!]!
    enabled: Boolean!
    display_name: String!
    description: String!
    category: String!
}

input NotificationPreferenceInput {
    notificationType: String!
    channels: [String!]!
    enabled: Boolean!
}

type NotificationReceivedEvent @aws_api_key @aws_cognito_user_pools @aws_iam {
    action: String
    notification: UserNotificationWithRecipient
    profileId: ID
    tenantId: ID
}

input NotificationSubscriptionInput {
    fcmToken: String!
    endpoint: String
}

type NotificationType {
    type_key: String!
    display_name: String!
    description: String!
    category: String!
    default_channels: [String!]!
    is_enabled: Boolean!
}

type OutOfStockItem @aws_api_key @aws_cognito_user_pools {
    productId: String!
    productName: String!
    lastMovementDate: AWSDateTime!
    averageConsumption: Float!
    lostSalesOpportunity: Float!
    daysSinceStockout: Int!
}

# Outlet Type Definition
type Outlet @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    name: String!
    code: String!
    type: String!
    status: String!
    address: String
    location: String
    manager_id: ID
    manager: Employee
    contact_phone: String
    contact_email: String
    tax_registration_no: String
    business_license_no: String
    is_default: Boolean
    has_storage: Boolean
    storage_capacity: Float
    coordinates: AWSJSON
    operating_hours: AWSJSON
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
}

# Outlet list response type
type OutletConnection @aws_api_key @aws_cognito_user_pools {
    items: [Outlet]!
    nextToken: String
}

enum PayFrequency {
    weekly
    biweekly
    monthly
    quarterly
    annually
}

enum PaymentStatus {
    PENDING
    PROCESSING
    COMPLETED
    FAILED
    EXPIRED
    REFUNDED
}

enum PaymentTier {
    TIER_100_BIRR
    TIER_300_BIRR
}

type PayrollEntry {
    id: ID!
    tenant_id: ID!
    payroll_run_id: ID!
    employee_id: ID!
    base_salary: Float!
    overtime_amount: Float
    allowances: AWSJSON
    deductions: AWSJSON
    gross_salary: Float!
    tax_deductions: Float
    other_deductions: Float
    net_salary: Float!
    hours_worked: Float
    overtime_hours: Float
    leave_days_taken: Float
    bonus_amount: Float
    commission_amount: Float
    bonus_eligible: Boolean
    commission_eligible: Boolean
    overtime_eligible: Boolean
    payment_method: String
    payment_reference: String
    payment_date: AWSDate
    payslip_generated: Boolean
    payslip_sent: Boolean
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    employee: Employee
    payroll_run: PayrollRun
}

type PayrollEntryConnection {
    items: [PayrollEntry!]!
    nextToken: String
}

input PayrollEntryFilterInput {
    payroll_run_id: ID
    employee_id: ID
    department_id: ID
    payment_method: String
    payslip_generated: Boolean
    payslip_sent: Boolean
    searchTerm: String
    min_gross_salary: Float
    max_gross_salary: Float
    min_net_salary: Float
    max_net_salary: Float
    payment_date_from: AWSDate
    payment_date_to: AWSDate
}

# Payroll System Types
type PayrollRun {
    id: ID!
    tenant_id: ID!
    payroll_period_start: AWSDate!
    payroll_period_end: AWSDate!
    run_date: AWSDate!
    status: String!
    total_gross_amount: Float!
    total_deductions: Float!
    total_net_amount: Float!
    processed_by: ID
    approved_by: ID
    notes: String
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    processor: Employee
    approver: Employee
}

type PayrollRunConnection {
    items: [PayrollRun!]!
    nextToken: String
}

input PayrollRunFilterInput {
    status: String
    payroll_period_start: AWSDate
    payroll_period_end: AWSDate
    searchTerm: String
}

type PayrollWorkflowStatusResponse {
    success: Boolean!
    message: String
    workflowStatus: AWSJSON
}

type Payslip {
    id: ID!
    employee_id: ID!
    payroll_run_id: ID!
    payslip_url: String!
    generated_at: AWSDateTime!
    employee: Employee
}

type PendingInvoice @aws_api_key @aws_cognito_user_pools {
    id: ID!
    work_order_number: String!
    customer: PendingInvoiceCustomer!
    financial_metrics: [PendingInvoiceFinancialMetric!]!
    financial_adjustments: PendingInvoiceFinancialAdjustments!
    financial_settings: PendingInvoiceFinancialSettings!
    assignments: [PendingInvoiceAssignment!]!
}

type PendingInvoiceAssignment @aws_api_key @aws_cognito_user_pools {
    department_id: ID!
    service_task_id: ID!
    department: PendingInvoiceDepartment!
}

type PendingInvoiceCustomer @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
}

type PendingInvoiceDepartment @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
}

type PendingInvoiceFinancialAdjustments @aws_api_key @aws_cognito_user_pools {
    admin_overhead_percentage: Float!
    machine_overhead_percentage: Float!
    margin_percentage: Float!
}

type PendingInvoiceFinancialMetric @aws_api_key @aws_cognito_user_pools {
    id: ID!
    department_id: ID!
    service_task_id: ID!
    resource_type: String!
    resource_name: String!
    final_quantity: Float!
    final_rate: Float!
    final_cost: Float!
    service_task: PendingInvoiceServiceTask!
}

type PendingInvoiceFinancialSettings @aws_api_key @aws_cognito_user_pools {
    show_unit_costs: Boolean!
    show_quantities: Boolean!
    show_rates: Boolean!
}

type PendingInvoiceServiceTask @aws_api_key @aws_cognito_user_pools {
    id: ID!
    template: PendingInvoiceServiceTaskTemplate!
}

type PendingInvoiceServiceTaskTemplate @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
}

type PendingInvoicesConnection @aws_api_key @aws_cognito_user_pools {
    items: [PendingInvoice!]!
}

type PerformanceIndicator @aws_api_key @aws_cognito_user_pools {
    metric: String!
    currentValue: Float!
    previousValue: Float!
    trend: String!
    target: Float!
    performance: String!
}

# New types for permissions system
type Permission @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    description: String
}

type PermissionGroup @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    permissions: [Permission!]!
}

# Personnel Actions Types
type PersonnelAction @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    employee_id: ID!
    action_type: String!
    effective_date: AWSDate!
    previous_data: AWSJSON
    new_data: AWSJSON
    reason: String
    approved_by: ID
    workflow_status: String
    workflow_id: ID
    documents: AWSJSON
    files: AWSJSON
    notes: String
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    # Related data
    employee: Employee
    approver: Employee
    workflow: ApprovalWorkflow
}

type PersonnelActionConnection @aws_api_key @aws_cognito_user_pools {
    items: [PersonnelAction!]!
    nextToken: String
}

input PersonnelActionFilterInput {
    employee_id: ID
    action_type: String
    workflow_status: String
    searchTerm: String
    date_from: AWSDate
    date_to: AWSDate
}

type PlanningDimensionValue @aws_api_key @aws_cognito_user_pools {
    dimension_id: ID!
    dimension_name: String!
    current_value: Float!
    minimum_value: Float
    maximum_value: Float
}

# Simplified planning-specific types
type PlanningInventoryItem @aws_api_key @aws_cognito_user_pools {
    id: ID
    product_id: ID!
    tracking_method: String!
    current_quantity: Float!
    unit_cost: Float
    product: PlanningProduct
    location: PlanningLocation
    dimension_values: [PlanningDimensionValue]
    latest_movement: PlanningMovement
}

type PlanningInventoryResponse @aws_api_key @aws_cognito_user_pools {
    items: [PlanningInventoryItem]!
}

type PlanningLocation @aws_api_key @aws_cognito_user_pools {
    type: String!
    id: ID!
    name: String!
    code: String
    status: String
    manager: PlanningLocationManager
}

type PlanningLocationManager @aws_api_key @aws_cognito_user_pools {
    id: ID
    employee_id: String
    first_name: String
    last_name: String
    email: String
    status: String
    role: Role
}

type PlanningMovement @aws_api_key @aws_cognito_user_pools {
    type: String!
    reference_type: String
    quantity_change: Float!
    date: AWSDateTime!
    notes: String
}

type PlanningProduct @aws_api_key @aws_cognito_user_pools {
    name: String!
    code: String
    unit: String
    unitAbbreviation: String
    category: String
    brand: String
    inventory_threshold: Float
}

input PosCustomerInput {
    id: ID
    isNew: Boolean
    name: String!
    total_credit: Float
    credit_limit: Float
}

input PosTransactionDetailsInput {
    transaction_number: String!
    transaction_type: String!
    items: [PosTransactionItemInput!]!
}

input PosTransactionItemInput {
    item_id: ID!
    item_type: String!
    name: String!
    quantity: Float!
    unit_price: Float!
    discount: TaxDiscountInput
    vat: VatInput
}

input PostJournalEntryInput {
    id: ID!
    tenantId: ID!
    postedBy: ID!
}

type PostJournalEntryResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    journalEntry: JournalEntry
    errors: [String!]
}

# ======================================
# POSTING DEFINITIONS TYPES
# ======================================
type PostingDefinition @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenantId: ID!
    ruleName: String!
    ruleCode: String!
    description: String
    sourceTable: String!
    sourceEvent: String!
    conditionSql: String
    postingRules: AWSJSON!
    isActive: Boolean!
    priority: Int!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
    createdBy: ID
    updatedBy: ID
    # Computed fields
    ruleCount: Int
    lastUsed: AWSDateTime
    usageCount: Int
}

type PostingDefinitionConnection @aws_api_key @aws_cognito_user_pools {
    items: [PostingDefinition!]!
    nextToken: String
    total: Int
}

# Input Types
input PostingDefinitionFilterInput {
    ruleName: String
    ruleCode: String
    sourceTable: String
    sourceEvent: String
    isActive: Boolean
    searchTerm: String
}

type PostingRule @aws_api_key @aws_cognito_user_pools {
    accountCode: String!
    side: String!
    # DEBIT or CREDIT
    amountField: String!
    conditions: AWSJSON
    description: String
}

input PostingRuleInput {
    accountCode: String!
    side: String!
    # DEBIT or CREDIT
    amountField: String!
    conditions: AWSJSON
    description: String
}

input ProcessPayrollRunInput {
    payroll_run_id: ID!
    tenant_id: ID!
    processed_by: ID
}

type ProcessPayrollRunResponse {
    success: Boolean!
    message: String
    payrollRun: PayrollRun
    entriesCreated: Int
    errors: [String]
}

input ProcessPayrollWorkflowStepInput {
    workflow_instance_id: ID!
    approver_id: ID!
    action: String!
    comments: String
}

type ProcessPayrollWorkflowStepResponse {
    success: Boolean!
    message: String
    workflowStatus: String
    currentStep: Int
    totalSteps: Int
    nextStepInfo: AWSJSON
}

input ProcessQuizPaymentInput {
    session_token: String!
    payment_tier: PaymentTier!
    payment_method: String!
    contact_phone: String
    contact_email: String
    user_id: ID
}

type ProcessQuizPaymentResponse @aws_api_key @aws_cognito_user_pools {
    payment: QuizPayment!
    verification_required: Boolean!
    verification_method: String
    payment_instructions: String
    success: Boolean!
    message: String
}

# Product Type Definition
type Product @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    description: String
    barcode_symbology: String
    inventory_status: String
    inventory_locations: [InventoryLocation]
    inventory: ProductInventoryInfo
    product_code: String
    secondary_part_no: String
    brand: String
    brand_name: String
    size: ProductSize
    tenant_id: ID!
    unit_of_measurement: String
    product_cost: Float
    product_price: Float
    imei: String
    sale_unit: String
    purchase_unit: String
    inventory_threshold: Float
    vat: Float
    tax_type: String
    profit_margin: Float
    color: String
    rgb_color: String
    manufacture_date: AWSDateTime
    expiry_date: AWSDateTime
    raw_materials: [RawMaterial]
    remark: String
    category_id: ID
    category_name: String
    multi_variants: [String]
    cant_be_sold: Boolean
    cant_be_purchased: Boolean
    cant_be_adjusted: Boolean
    is_fixed_asset: Boolean
    product_type: String
    inventory_tracking_method: String
    has_imei: Boolean
    has_multi_variants: Boolean
    has_raw_materials: Boolean
    conversion_factor: Float
    beginning_inventory: Float
    primary_unit_id: String
    classification: ProductClassification
    product_dimensions: [ProductDimension]
    inventory_dimensions: [InventoryDimension]
    primary_unit_formula: [FormulaComponent]
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: String
    updated_by: String
    product_files: [ProductFile]
    company_machines: [Product]
    # 🎯 CMS-specific fields added for MellaStudio
    slug: String
    short_description: String
    featured: Boolean
    display_order: Int
    seo_title: String
    seo_description: String
    seo_keywords: String
    status: String
    published_at: AWSDateTime
    cms_metadata: AWSJSON
}

# Product basic info
type ProductBasic @aws_api_key @aws_cognito_user_pools {
    id: ID
    name: String
    product_cost: Float
    product_price: Float
    product_code: String
    unit: Unit
    product_type: String
    description: String
}

# Product classification type
type ProductClassification @aws_api_key @aws_cognito_user_pools {
    type: String
    departmentIds: [String]
}

# Input for product classification
input ProductClassificationInput {
    type: String
    departmentIds: [String]
}

# Product list response type
type ProductConnection @aws_api_key @aws_cognito_user_pools {
    items: [Product]!
    nextToken: String
}

type ProductDashboardData @aws_cognito_user_pools {
    summary: ProductDashboardSummary!
    product_types: [ProductTypeBreakdown!]!
    inventory_status: DashboardInventoryStatus!
    top_categories: [TopCategory!]!
    top_brands: [TopBrand!]!
    recent_products: [RecentProduct!]!
    financial_metrics: FinancialMetrics!
    inventory_insights: InventoryInsights!
    machines_summary: MachinesSummary!
    generated_at: AWSDateTime!
}

input ProductDashboardFilterInput {
    productType: String
    categoryId: ID
    brandId: ID
    search: String
}

# Response Types
# =============================================================================
type ProductDashboardSummary @aws_cognito_user_pools {
    total_products: Int!
    total_value: Float!
    total_cost: Float!
    avg_price: Float!
    out_of_stock_count: Int!
    low_stock_count: Int!
}

# New type for product dimensions
type ProductDimension {
    id: ID!
    name: String!
    unit_id: ID!
    is_primary: Boolean!
    is_consumable: Boolean!
    is_sale_unit: Boolean!
    is_purchase_unit: Boolean!
    minimum_usable_value: Float!
    abbreviation: String
    formula: Formula
}

# Product dimension detail for inventory
type ProductDimensionDetail @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    abbreviation: String
    is_primary: Boolean!
    minimum_usable_value: Float
}

# Product File Type Definition
type ProductFile @aws_api_key @aws_cognito_user_pools {
    id: ID!
    product_id: ID!
    file_key: String!
    file_name: String
    file_type: String
    file_url: String
    order_index: String
    image_type: String
    upload_date: AWSDateTime
    tenant_id: ID!
    _version: Int
    _deleted: Boolean
}

# Input for product file
input ProductFileInput {
    file_key: String!
    file_name: String
    file_type: String
}

# Filter input for products
input ProductFilterInput {
    categoryId: ID
    productType: String
    isFixedAsset: Boolean
    cantBeSold: Boolean
    cantBePurchased: Boolean
    search: String
    inventoryFilter: String
    sortField: String
    sortOrder: String
}

# MellaStudio CMS Enhanced Product Types
type ProductImage @aws_api_key @aws_cognito_user_pools {
    id: ID!
    fileKey: String!
    fileName: String!
    fileType: String
    fileUrl: String!
    orderIndex: Int!
    imageType: String!
}

# Product inventory detail - essential product info for inventory context
type ProductInventoryDetail @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    product_code: String
    inventory_threshold: Float
    unitAbbreviation: String!
    dimensions: [ProductDimensionDetail]
}

# Product inventory information - comprehensive inventory data for products
type ProductInventoryInfo @aws_api_key @aws_cognito_user_pools {
    id: ID!
    current_quantity: Float!
    tracking_method: String!
    unit_cost: Float
    last_purchase_date: AWSDateTime
    last_sale_date: AWSDateTime
    last_movement_date: AWSDateTime
    product: ProductInventoryDetail!
    location: InventoryLocationDetail!
    dimension_values: [InventoryDimensionValueDetail!]!
}

type ProductReorderPoint @aws_api_key @aws_cognito_user_pools {
    productId: String!
    productName: String!
    reorderPoint: Float!
    safetyStock: Float!
    leadTime: Int!
    averageConsumption: Float!
}

# Product resource detail for resource usage
type ProductResourceDetail @aws_api_key @aws_cognito_user_pools {
    id: ID
    name: String
    product_code: String
    description: String
    product_type: String
    inventory_tracking_method: String
    product_cost: Float
    product_price: Float
    inventory_threshold: Float
    brand_id: ID
    category_id: ID
    unit_of_measurement_id: ID
    purchase_unit_id: ID
    sale_unit_id: ID
    primary_unit_id: ID
    default_warehouse_id: ID
    default_outlet_id: ID
    size: AWSJSON
    color: String
    classification: String
    secondary_part_no: String
    cant_be_sold: Boolean
    cant_be_purchased: Boolean
    cant_be_adjusted: Boolean
    is_fixed_asset: Boolean
    has_raw_materials: Boolean
    has_imei_or_serial_number: Boolean
    has_multi_variants: Boolean
    multi_variants: AWSJSON
    is_deleted: Boolean
    unit: UnitResourceDetail
}

# Product size type
type ProductSize @aws_api_key @aws_cognito_user_pools {
    length: Float
    width: Float
    height: Float
}

# Input for product size
input ProductSizeInput {
    length: Float
    width: Float
    height: Float
}

type ProductTypeBreakdown @aws_cognito_user_pools {
    type: String!
    count: Int!
    percentage: Float!
    total_value: Float!
    avg_price: Float!
}

type ProductTypeStockHealth {
    critical: Int!
    low: Int!
    optimal: Int!
    excess: Int!
}

type ProductTypeTurnover @aws_api_key @aws_cognito_user_pools {
    productType: String!
    turnoverRate: Float!
    averageDaysToTurn: Float!
}

type ProductTypeValueBreakdown {
    productType: String!
    value: Float!
    count: Int!
    stockHealth: ProductTypeStockHealth!
}

type ProductVelocityRank @aws_api_key @aws_cognito_user_pools {
    productId: String!
    productName: String!
    velocityScore: Float!
    rank: Int!
    category: String!
}

# Project Type Definition
type Project @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    description: String
    status: String
    priority: String
    start_date: AWSDate
    end_date: AWSDate
    expected_completion_date: AWSDate
    actual_completion_date: AWSDate
    budget: Float
    actual_cost: Float
    progress_percentage: Float
    tenant_id: ID!
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    created_by: ID
    updated_by: ID
    # Relationships
    project_budget_items: [ProjectBudgetItem!]!
    created_by_employee: Employee
    updated_by_employee: Employee
}

# Project Budget Item Type Definition
type ProjectBudgetItem @aws_api_key @aws_cognito_user_pools {
    id: ID!
    project_id: ID!
    item_name: String!
    description: String
    category: String
    estimated_cost: Float
    actual_cost: Float
    quantity: Float
    unit_price: Float
    status: String
    notes: String
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    created_by: ID
    updated_by: ID
}

type ProjectBudgetItemBasic @aws_api_key @aws_cognito_user_pools {
    id: ID!
    item_name: String!
    description: String
    category: String
    estimated_cost: Float
    actual_cost: Float
    quantity: Float
    unit_price: Float
    status: String
    notes: String
}

type ProjectWithBudgetItems @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    description: String
    status: String
    priority: String
    start_date: AWSDate
    end_date: AWSDate
    budget: Float
    actual_cost: Float
    progress_percentage: Float
    project_budget_items: [ProjectBudgetItemBasic!]!
}

type PushSubscription {
    id: ID!
    fcm_token: String!
    device_type: String!
    device_id: String!
    app_version: String!
    is_active: Boolean!
    last_used_at: String!
    created_at: String!
}

enum QuestionType {
    LIKERT_5
    YES_NO
    MULTIPLE_CHOICE
    SLIDER
}

# Main Quiz Type
type Quiz @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name_en: String!
    name_am: String!
    description_en: String
    description_am: String
    quiz_type: QuizType!
    version: Int!
    total_questions: Int!
    estimated_duration_minutes: Int
    is_active: Boolean!
    requires_authentication: Boolean!
    free_tier_enabled: Boolean!
    paid_tier_100_enabled: Boolean!
    paid_tier_300_enabled: Boolean!
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    metadata: AWSJSON
}

# Quiz Analytics Type
type QuizAnalytics @aws_api_key @aws_cognito_user_pools {
    date_period: AWSDate!
    period_type: String!
    total_sessions: Int!
    completed_sessions: Int!
    anonymous_sessions: Int!
    authenticated_sessions: Int!
    free_tier_views: Int!
    paid_tier_100_conversions: Int!
    paid_tier_300_conversions: Int!
    total_revenue_birr: Float!
    amharic_preference: Int!
    english_preference: Int!
    personality_distribution: AWSJSON
    average_completion_time_minutes: Float
    bounce_rate_percentage: Float
}

input QuizAnalyticsFilterInput {
    start_date: AWSDate
    end_date: AWSDate
    period_type: String
    quiz_type: QuizType
}

type QuizAnalyticsResponse @aws_api_key @aws_cognito_user_pools {
    analytics: [QuizAnalytics!]!
    summary: AWSJSON
    trends: AWSJSON
    conversion_funnel: AWSJSON
}

# Quiz Connection for pagination
type QuizConnection @aws_api_key @aws_cognito_user_pools {
    items: [Quiz!]!
    nextToken: String
}

# Input Types
input QuizFilterInput {
    quiz_type: QuizType
    is_active: Boolean
    requires_authentication: Boolean
}

# Quiz Payment Type
type QuizPayment @aws_api_key @aws_cognito_user_pools {
    id: ID!
    result_id: ID!
    session_id: ID!
    user_id: ID
    payment_tier: PaymentTier!
    amount_birr: Float!
    currency: String!
    payment_method: String
    payment_status: PaymentStatus!
    payment_provider: String
    external_transaction_id: String
    payment_reference: String!
    verification_code: String
    verification_status: VerificationStatus!
    contact_phone: String
    contact_email: String
    created_at: AWSDateTime!
    paid_at: AWSDateTime
    expires_at: AWSDateTime
}

# Quiz Question Type
type QuizQuestion @aws_api_key @aws_cognito_user_pools {
    id: ID!
    quiz_id: ID!
    question_number: Int!
    question_text_en: String!
    question_text_am: String!
    question_type: QuestionType!
    response_scale_min: Int!
    response_scale_max: Int!
    response_options: AWSJSON
    personality_dimensions: AWSJSON
    weight: Float!
    is_reverse_scored: Boolean!
    is_active: Boolean!
    metadata: AWSJSON
}

# Response Types
type QuizQuestionsResponse @aws_api_key @aws_cognito_user_pools {
    questions: [QuizQuestion!]!
    session: QuizSession!
    total_questions: Int!
    current_question: Int!
}

# Quiz Response Type
type QuizResponse @aws_api_key @aws_cognito_user_pools {
    id: ID!
    session_id: ID!
    question_id: ID!
    response_value: Int!
    response_text: String
    response_time_seconds: Int
    is_skipped: Boolean!
    answered_at: AWSDateTime!
    question: QuizQuestion
}

# Quiz Result Type
type QuizResult @aws_api_key @aws_cognito_user_pools {
    id: ID!
    session_id: ID!
    quiz_id: ID!
    user_id: ID
    # Basic Results (Free Tier)
    personality_type: String
    primary_traits: AWSJSON
    basic_summary_en: String
    basic_summary_am: String
    # Paid Tier 100 Birr Results
    detailed_analysis_en: String
    detailed_analysis_am: String
    astrological_insights_en: String
    astrological_insights_am: String
    strengths_weaknesses: AWSJSON
    compatibility_insights: AWSJSON
    # Paid Tier 300 Birr Results (Super AI)
    ai_life_profile_en: String
    ai_life_profile_am: String
    growth_recommendations: AWSJSON
    career_insights: AWSJSON
    relationship_insights: AWSJSON
    life_path_guidance_en: String
    life_path_guidance_am: String
    # Scoring and Analysis Data
    raw_scores: AWSJSON!
    percentile_scores: AWSJSON
    confidence_level: Float
    # Access Control
    free_tier_unlocked: Boolean!
    paid_tier_100_unlocked: Boolean!
    paid_tier_300_unlocked: Boolean!
    # Timestamps
    calculated_at: AWSDateTime!
    ai_analysis_completed_at: AWSDateTime
    last_accessed_at: AWSDateTime!
    # Metadata
    algorithm_version: String
    ai_model_used: String
    processing_time_seconds: Int
}

enum QuizResultTier {
    FREE
    PAID_100
    PAID_300
}

# Quiz Session Type
type QuizSession @aws_api_key @aws_cognito_user_pools {
    id: ID!
    quiz_id: ID!
    user_id: ID
    session_token: String!
    ip_address: String
    user_agent: String
    language_preference: String!
    current_question_number: Int!
    total_questions: Int!
    is_completed: Boolean!
    completion_percentage: Float!
    started_at: AWSDateTime!
    completed_at: AWSDateTime
    last_activity_at: AWSDateTime!
    quiz: Quiz
    responses: [QuizResponse!]
}

# Enums
enum QuizType {
    PERSONALITY
    MBTI
    BIG5
    ENNEAGRAM
    ASTROLOGY
    COMBINED
}

# Define a dedicated type for raw materials
type RawMaterial {
    id: ID
    productCode: String
    productName: String
    qty: Float
    maxQty: Float
    costPerUnit: Float
}

# Input type for raw materials
input RawMaterialInput {
    id: ID
    productCode: String
    productName: String
    qty: Float
    maxQty: Float
    costPerUnit: Float
}

type RecentInventoryMovementsResponse @aws_api_key @aws_cognito_user_pools {
    movements: [InventoryMovement]
    nextToken: String
}

type RecentPersonnelAction {
    id: ID!
    employee_name: String!
    action_type: String!
    effective_date: String!
    status: String!
}

type RecentProduct @aws_cognito_user_pools {
    id: ID!
    name: String!
    product_code: String
    product_type: String!
    price: Float
    cost: Float
    current_quantity: Float!
    created_at: AWSDateTime!
    category_name: String
    brand_name: String
}

input ReconcileTaxTransactionInput {
    transaction_id: ID!
    status: String!
    reconciliation_type: String
    reconciled_amount: Float
    dispute_reason: String
    dispute_details: String
    supporting_document_ids: [ID]
    vat_registration_number: String
    original_document_date: AWSDateTime
    notes: String
    tenant_id: ID!
    updated_by: ID!
}

type ReconcileTaxTransactionResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
    transaction: AWSJSON
}

# Record Invoice Payment Input
input RecordInvoicePaymentInput {
    department_invoice_id: ID!
    amount: Float!
    payment_method: String!
    reference_number: String
    payment_notes: String
    tenant_id: ID!
    recorded_by: ID!
}

# Record Invoice Payment Response
type RecordInvoicePaymentResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
    payment: RecordedPayment
    invoice: InvoicePaymentUpdate
    tax_transaction: TaxTransactionInfo
    communication: CommunicationInfo
    diagnostic: AWSJSON
}

# Recorded Payment Info
type RecordedPayment @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    department_invoice_id: ID!
    amount: Float!
    payment_method: String!
    reference_number: String
    payment_notes: String
    recorded_by: ID!
    payment_date: String!
    reconciled: Boolean!
    reconciled_at: String
    created_at: String!
    updated_at: String!
}

# Update your Redis response types
type RedisCacheResponse @aws_iam @aws_cognito_user_pools @aws_api_key {
    success: Boolean!
    result: String
    error: String
}

input RedisGetInput {
    key: String!
}

type RedisGetResponse @aws_iam @aws_cognito_user_pools @aws_api_key {
    value: String
    exists: Boolean!
}

input RedisSetInput {
    key: String!
    value: String!
    expirySeconds: Int
}

type RedisSetResponse @aws_iam @aws_cognito_user_pools @aws_api_key {
    success: Boolean!
    message: String
}

input RejectCompensationInput {
    id: ID!
    tenant_id: ID!
    rejected_by: ID!
    rejection_reason: String!
}

type RejectCompensationResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    employeeCompensation: EmployeeCompensation
}

input RemoveDepartmentManagerInput {
    id: ID!
    tenant_id: ID!
}

input RemovePushSubscriptionInput {
    subscriptionId: ID!
    profileId: ID!
    tenantId: ID!
}

type ReorderRecommendation @aws_api_key @aws_cognito_user_pools {
    productId: String!
    productName: String!
    recommendedQuantity: Float!
    reorderPoint: Float!
    economicOrderQuantity: Float!
    estimatedCost: Float!
    urgency: String!
}

input RequestResourceReturnInput {
    requestId: ID!
    resourceId: ID!
    subtaskId: ID!
    notes: String
    subtaskResourceAssignmentId: ID!
    returnQuantity: Float!
    returnDimensionValues: AWSJSON!
    tenant_id: ID!
    created_by: ID!
}

type RequestResourceReturnResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

input RequestResourcesInput {
    subtaskId: ID!
    requests: [ResourceRequestItem!]!
    tenant_id: ID!
    created_by: ID!
}

type RequestResourcesResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
}

# Resource approval workflow type
type ResourceApprovalWorkflow @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    name: String!
    description: String
    category: ResourceRequestCategory
    department: Department
    steps: AWSJSON!
    is_active: Boolean!
    created_by: ID!
    updated_by: ID!
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
}

# Resource collection
type ResourceCollection @aws_api_key @aws_cognito_user_pools {
    id: ID!
    collected_quantity: Float!
    collection_date: String!
    dimension_values: AWSJSON
    provided_by: ID
    notes: String
    provider: Employee
}

type ResourceDimension @aws_api_key @aws_cognito_user_pools {
    id: ID!
    resource_estimate_id: ID!
    dimension_id: ID!
    value: Float!
    tenant_id: ID!
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    work_order_id: ID
    is_additional: Boolean
}

type ResourceEstimate @aws_api_key @aws_cognito_user_pools {
    id: ID
    service_task_id: ID!
    department_id: ID!
    work_order_id: ID
    resource_type: String!
    resource_id: ID!
    estimated_hours: Float!
    estimated_quantity: Float!
    is_additional: Boolean
    is_assigned: Boolean
    tenant_id: ID!
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    dimensions: [ResourceDimension] @aws_api_key @aws_cognito_user_pools
    entries: [ResourceEstimateEntry] @aws_api_key @aws_cognito_user_pools
}

# Resource estimate details
type ResourceEstimateDetails @aws_api_key @aws_cognito_user_pools {
    id: ID!
    resource_type: String!
    resource_id: ID
    estimated_hours: Float
    estimated_quantity: Float
    department_id: ID
    is_assigned: Boolean
    service_task_id: ID
    tenant_id: ID
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    dimensions: AWSJSON
    product: ProductBasic
    machine: MachineBasic
}

type ResourceEstimateEntry @aws_api_key @aws_cognito_user_pools {
    amount: Int
    dimensions: AWSJSON
}

input ResourceEstimateEntryInput {
    amount: Float!
    dimensions: AWSJSON
}

input ResourceEstimateInput {
    service_task_id: ID!
    resource_type: String!
    resource_id: ID!
    estimated_hours: Float
    estimated_quantity: Float
    is_assigned: Boolean!
    entries: [ResourceEstimateEntryInput]
}

# Resource request
type ResourceRequest @aws_api_key @aws_cognito_user_pools {
    id: ID!
    status: String!
    request_date: String
    approver_id: ID
    requested_quantity: Float
    prepared_by: Employee
    created_by: ID!
    approver: Employee
    preparer: Employee
    resource_request_balances: ResourceRequestBalance
    resource_collections: [ResourceCollection!]
    resource_return_verifications: [ResourceReturnVerification!]
    return_request_audits: [ResourceReturnRequestAudit!]
    return_verification_audits: [ResourceReturnVerificationAudit!]
    created_at: AWSDateTime
    # Additional fields from database table
    subtask_resource_assignment_id: ID
    subtask_id: ID!
    service_task_id: ID!
    work_order_id: ID!
    dimension_values: AWSJSON
    status_reason: String
    tenant_id: ID!
    updated_by: ID!
    updated_at: AWSDateTime!
    request_notes: String
    verifier_id: ID
    verification_result: String
    verification_date: AWSDateTime
    verification_note: String
    approval_result: String
    approval_notes: String
    prepared_at: AWSDateTime
    preparation_notes: String
    collected_at: AWSDateTime
    collected_by: Employee
    collection_notes: String
    prepared_quantity: Float
    actual_collected_quantity: Float
    prepared_dimension_values: AWSJSON
    actual_collected_dimension_values: AWSJSON
    resource_type: String!
    additional_resource_assignment_id: ID
    return_requested_at: AWSDateTime
    return_requested_by: Employee
    return_verified_at: AWSDateTime
    return_verified_by: Employee
    return_verification_notes: String
    requested_return_quantity: Float
    requested_return_dimension_values: AWSJSON
    return_notes: String
    verified_return_quantity: Float
    verified_return_dimension_values: AWSJSON
    # Relationships for additional fields
    updater: Employee
    verifier: Employee
    collector: Employee
    return_requester: Employee
    return_verifier: Employee
}

# Resource request balance type
type ResourceRequestBalance @aws_api_key @aws_cognito_user_pools {
    total_collected: Float
    total_used: Float
    total_returned: Float
    dimension_values: AWSJSON
    used_dimension_values: AWSJSON
    returned_dimension_values: AWSJSON
    updated_at: AWSDateTime
}

# Resource request category type
type ResourceRequestCategory @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    name: String!
    description: String
    code: String!
    is_active: Boolean!
    requires_approval: Boolean!
    auto_approve_limit: Float
    default_approver_role: Role
    created_by: ID!
    updated_by: ID!
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
}

# Resource request category list response type
type ResourceRequestCategoryConnection @aws_api_key @aws_cognito_user_pools {
    items: [ResourceRequestCategory]!
    nextToken: String
}

# Detailed resource request type
type ResourceRequestDetail @aws_api_key @aws_cognito_user_pools {
    id: ID!
    status: String!
    requested_quantity: Float!
    dimension_values: AWSJSON
    request_notes: String
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    subtask_resource_assignment: SubtaskResourceAssignment!
    subtask: SubtaskDetail!
    service_task: ServiceTask!
    tenant_id: ID
    notes: String
    request_date: AWSDateTime
    prepared_by: Employee
    approval_result: String
    verification_result: String
    verification_date: AWSDateTime
    verification_note: String
    approval_note: String
    verifier_id: ID
    created_by: Employee
    updated_by: Employee
    approver_id: ID
    work_order: WorkOrder!
    requested_by: Employee!
    approver: Employee
    verifier: Employee
    # Preparation details
    prepared_at: AWSDateTime
    prepared_quantity: Float
    prepared_dimension_values: AWSJSON
    preparation_notes: String
    # Collection details
    collected_at: AWSDateTime
    collected_by: Employee
    actual_collected_quantity: Float
    actual_collected_dimension_values: AWSJSON
    collection_notes: String
    # Return details
    return_requested_at: AWSDateTime
    return_requested_by: Employee
    return_verified_at: AWSDateTime
    return_verified_by: Employee
    return_verification_notes: String
    requested_return_quantity: Float
    requested_return_dimension_values: AWSJSON
    return_notes: String
    verified_return_quantity: Float
    verified_return_dimension_values: AWSJSON
    status_reason: String
    resource_type: String
    approval_notes: String
    # Relationships
    additional_resource_assignment: AdditionalResourceAssignment
    # Balance and verification records
    balance: ResourceRequestBalance
    return_verifications: [ResourceReturnVerification]
    return_request_audits: [ResourceReturnRequestAudit]
    return_verification_audits: [ResourceReturnVerificationAudit]
}

# Input types for requestResources
input ResourceRequestItem {
    resourceAssignmentId: ID!
    quantity: Float!
    productType: String
    dimensions: AWSJSON
    notes: String
    isAdditional: Boolean
    resourceType: String
}

# Input for individual resource request items
input ResourceRequestItemInput {
    product_id: ID!
    quantity: Float!
    unit_abbreviation: String!
    notes: String
    dimension_values: AWSJSON
}

enum ResourceRequestPriority {
    low
    medium
    high
    urgent
    critical
}

# Resource request response type
type ResourceRequestResponse @aws_api_key @aws_cognito_user_pools {
    resourceRequests: [ResourceRequestDetail!]!
}

# Enums for resource request fields
enum ResourceRequestType {
    standalone
    maintenance
    project
    emergency
}

enum ResourceRequestUrgency {
    normal
    urgent
    immediate
}

# Resource return request audit type
type ResourceReturnRequestAudit @aws_api_key @aws_cognito_user_pools {
    id: ID!
    resource_request_id: ID
    action: String
    previous_status: String
    requested_return_quantity: Float
    requested_dimension_values: AWSJSON
    dimension_values: AWSJSON
    notes: String
    requested_by: ID
    created_by: ID
    created_at: AWSDateTime
    tenant_id: ID
    balance_at_request: AWSJSON
    department_info: AWSJSON
    work_order_info: AWSJSON
    creator: Employee
}

# Resource return verification
type ResourceReturnVerification @aws_api_key @aws_cognito_user_pools {
    id: ID!
    status: String!
    return_date: String
    verified_date: String
    created_by: ID
    updated_by: ID
    verified_by: ID
    creator: Employee
    updated_at: AWSDateTime
    created_at: AWSDateTime
    verification_status: String
    verification_notes: String
    verified_dimension_values: AWSJSON
    requested_dimension_values: AWSJSON
    verified_quantity: Float
    requested_quantity: Float
    updater: Employee
    verifier: Employee
}

type ResourceReturnVerificationAudit @aws_api_key @aws_cognito_user_pools {
    id: ID!
    previous_status: String
    new_status: String
    status: String
    verified_quantity: Float
    verified_dimension_values: AWSJSON
    verification_notes: String
    verified_by: ID
    created_at: AWSDateTime
    updated_at: AWSDateTime
    balance_before_return: AWSJSON
    inventory_id: ID
    previous_inventory_quantity: Float
    movement_type: String
    resource_request_id: ID
    action: String
    created_by: ID
    updated_by: ID
    tenant_id: ID
    dimension_values: AWSJSON
    verification_status: String
    return_date: String
    verified_date: String
    creator: Employee
    updater: Employee
    verifier: Employee
}

type ResourceUsage @aws_api_key @aws_cognito_user_pools {
    id: ID!
    subtask_id: ID
    resource_id: ID
    resource_type: String
    work_order_id: ID
    service_task_id: ID!
    usage_type: String!
    quantity: Float
    hours: Float
    resource_estimate_id: ID
    product_id: ID
    is_additional: Boolean
    tenant_id: ID
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    dimensions: AWSJSON
    employee_id: ID
    dimension_values: AWSJSON
    usage_date: String!
    department_id: ID!
    subtask_resource_assignment_id: ID
    team_assignment_id: ID
    employee: Employee
    # Enhanced resource details based on usage_type
    # Labor resource details (when usage_type = 'labor')
    labor_resource: LaborResourceDetail
    # Material/Tool/Machine resource details (when usage_type != 'labor')
    material_resource: MaterialResourceDetail
}

type RestoreProductResult @aws_api_key @aws_cognito_user_pools {
    productId: ID!
    success: Boolean!
    message: String!
}

type RestoreProductsResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    total: Int!
    successful: Int!
    failed: Int!
    results: [RestoreProductResult!]!
}

input ReverseJournalEntryInput {
    id: ID!
    tenantId: ID!
    reversalDescription: String!
    reversalDate: AWSDate!
    reversedBy: ID!
}

type ReverseJournalEntryResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    journalEntry: JournalEntry
    reversalJournalEntry: JournalEntry
    errors: [String!]
}

input ReviewPlanningInput {
    work_order_id: ID!
    department_id: ID!
    status: String!
    notes: String
    reviewed_by: ID!
    tenant_id: ID!
    subtask_ids: [ID!]
    phase: String
}

# Response type for reviewing planning
type ReviewPlanningResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    work_order_id: ID
    work_order_number: String
    planning_status: String
}

# Role and Scope type definitions
# Updated Role schema
type Role @aws_api_key @aws_cognito_user_pools {
    id: ID!
    role_name: String
    description: String
    tenant_id: ID!
    department_id: ID!
    type: String!
    level: Int!
    is_active: Boolean!
    is_manager: Boolean
    can_manage_roles: Boolean!
    can_manage_departments: Boolean!
    department_access: [ID]
    metadata: AWSJSON
    permissions: AWSJSON
    kpis: AWSJSON
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    # Relationships
    roles_scopes: [RoleScope]
    departments: [Department]
    subordinates: [ID]
    superiors: [ID]
}

# Role Type Definitions
type RoleConnection {
    items: [Role!]!
    nextToken: String
}

type RoleData {
    id: ID
    role_name: String
    departments: [Department]
    roles_scopes: [RoleScope]
}

# More detailed RoleScope type
type RoleScope {
    id: ID!
    role_id: ID!
    scope_id: ID!
    tenant_id: ID
    assigned_by: ID
    is_active: Boolean!
    assignment_context: AWSJSON
    created_at: AWSDateTime
    updated_at: AWSDateTime
    scopes: Scope
}

type SalaryStructure @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    structure_name: String!
    position_id: ID
    department_id: ID
    salary_type: SalaryType!
    base_salary: Float
    hourly_rate: Float
    commission_rate: Float
    overtime_multiplier: Float
    allowances: AWSJSON
    deductions: AWSJSON
    bonus_structure: AWSJSON
    currency: String
    pay_frequency: String
    effective_from: AWSDate!
    effective_to: AWSDate
    is_active: Boolean!
    auto_assign_by_position: Boolean
    auto_assign_by_department: Boolean
    requires_approval: Boolean
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    # Related data
    position: JobPosition
    department: Department
    # Usage statistics
    employee_count: Int
    usage_statistics: SalaryStructureUsageStats
}

type SalaryStructureConnection @aws_api_key @aws_cognito_user_pools {
    items: [SalaryStructure!]!
    nextToken: String
}

input SalaryStructureFilterInput {
    structure_name: String
    department_id: ID
    position_id: ID
    is_active: Boolean
    searchTerm: String
}

type SalaryStructureUsageStats @aws_api_key @aws_cognito_user_pools {
    earliest_assignment: AWSDate
    latest_assignment: AWSDate
    avg_base_salary: Float
    min_base_salary: Float
    max_base_salary: Float
}

# Salary Structures Types
enum SalaryType {
    FIXED
    HOURLY
    COMMISSION
    COMBINATION
}

input SaveResourceEstimatesInput {
    work_order_id: ID!
    tenant_id: ID!
    created_by: ID!
    department_id: ID!
    resource_estimates: [ResourceEstimateInput!]!
}

type SaveResourceEstimatesResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    work_order_id: ID
    work_order_number: String
    estimates_count: Int
    planning_status: AWSJSON
    all_departments_estimated: Boolean
    resource_estimates: [ResourceEstimate] @aws_api_key @aws_cognito_user_pools
}

# Input Types
input SaveSubscriptionInput {
    userId: ID!
    tenantId: ID!
    subscription: NotificationSubscriptionInput!
    deviceInfo: DeviceInfoInput!
}

type SaveSubscriptionResponse {
    success: Boolean!
    message: String
    error: String
    subscriptionId: String
}

input SaveSubtasksInput {
    work_order_id: ID!
    service_task_id: ID!
    department_id: ID!
    tenant_id: ID!
    created_by: ID!
    subtasks: [SubtaskInput!]!
}

type SaveSubtasksResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    work_order_id: ID
    work_order_number: String
    subtasks_count: Int
    planning_status: AWSJSON
    all_subtasks_defined: Boolean
}

input SaveTeamAssignmentsInput {
    work_order_id: ID!
    department_id: ID!
    assignments: AWSJSON!
    created_by: ID!
    tenant_id: ID!
}

type SaveTeamAssignmentsResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    work_order_id: ID
    work_order_number: String
    planning_status: String
    team_assigned: Boolean
}

type Scope {
    id: ID!
    name: String!
    description: String
    is_active: Boolean
    metadata: AWSJSON
    created_at: AWSDateTime
    updated_at: AWSDateTime
}

# Scope Type Definitions
type ScopeConnection {
    items: [Scope!]!
}

type SearchConfig @aws_api_key @aws_cognito_user_pools {
    enabled: Boolean!
    placeholder: String
}

input SearchConfigInput {
    enabled: Boolean!
    placeholder: String
}

type SeasonalTrend @aws_api_key @aws_cognito_user_pools {
    month: Int!
    seasonalIndex: Float!
    averageConsumption: Float!
    trendDescription: String!
}

input SendTestNotificationInput {
    profileId: ID!
    tenantId: ID!
    title: String!
    message: String!
    channels: [String!]
    metadata: AWSJSON
}

type SendTestNotificationResponse {
    success: Boolean!
    message: String
    error: String
    notificationId: String
}

type ServiceTask @aws_api_key @aws_cognito_user_pools {
    id: ID
    work_order_id: ID!
    service_task_template_id: ID
    name: String!
    description: String
    status: String
    estimated_duration: Int
    actual_duration: Int
    assigned_to: ID
    tenant_id: ID!
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    start_date: AWSDateTime
    end_date: AWSDateTime
    total_actual_labor_hours: Float
    total_actual_machine_hours: Float
    total_estimated_labor_hours: Float
    total_estimated_machine_hours: Float
    # Relationships
    work_order: WorkOrder
    service_task_template: ServiceTaskTemplate
    resource_estimates: [ResourceEstimate]
    subtasks: [SubtaskDetail]
    work_order_assignments: [WorkOrderAssignment]
    team_members: [TeamMember] @aws_api_key @aws_cognito_user_pools
    assignments: [ServiceTaskAssignment] @aws_api_key @aws_cognito_user_pools
}

# Input type for service task approval assignments
input ServiceTaskApprovalInput {
    id: ID!
    assigned_to: [ID!]!
}

type ServiceTaskAssignment @aws_api_key @aws_cognito_user_pools {
    id: ID!
    status: String
    assigned_at: AWSDateTime
    accepted_at: AWSDateTime
    started_at: AWSDateTime
    completed_at: AWSDateTime
    notes: String
    department: Department @aws_api_key @aws_cognito_user_pools
    assigned_by: Employee @aws_api_key @aws_cognito_user_pools
    accepted_by: Employee @aws_api_key @aws_cognito_user_pools
}

type ServiceTaskTemplate @aws_api_key @aws_cognito_user_pools {
    id: ID
    name: String!
    description: String
    estimated_duration: Int
    equipment_type_id: ID
    equipment_type: EquipmentType
    tenant_id: ID!
    created_at: String
    updated_at: String
    created_by: ID
    updated_by: ID
}

type ServiceTaskTemplateConnection @aws_api_key @aws_cognito_user_pools {
    items: [ServiceTaskTemplate]
    nextToken: String
}

# Service task with subtasks
type ServiceTaskWithSubtasks @aws_api_key @aws_cognito_user_pools {
    id: ID!
    service_task_template: ServiceTaskTemplate
    description: String
    subtasks: [SubtaskWithDetails!]
}

input SetPrimaryDepartmentManagerInput {
    id: ID!
    department_id: ID!
    tenant_id: ID!
}

input SignUpInput {
    phone: String!
    password: String!
    org_id: String!
    origin: String
}

type SignUpResponse {
    success: Boolean!
    message: String
    user: User
    redirectUrl: String
    verification_required: Boolean
    phone: String
}

type SimplePerson {
    first_name: String
    last_name: String
    email: String
}

type SimplifiedProduct {
    name: String!
    code: String
}

type SparePartsInsights {
    totalItems: Int!
    totalValue: Float!
    warrantyExpiring: Int!
    withCompatibilityInfo: Int!
}

# Standalone resource request type (expanded from existing ResourceRequest)
type StandaloneResourceRequest @aws_api_key @aws_cognito_user_pools {
    id: ID!
    request_type: String!
    request_title: String!
    request_description: String!
    business_justification: String
    category: ResourceRequestCategory
    department: Department
    project: Project
    priority: String!
    urgency: String!
    status: String!
    required_by_date: AWSDateTime
    expected_usage_start_date: AWSDateTime
    expected_usage_end_date: AWSDateTime
    cost_center_code: String
    budget_reference: String
    delivery_location: Warehouse
    delivery_contact_name: String
    delivery_contact_phone: String
    delivery_contact_email: String
    is_returnable: Boolean!
    special_instructions: String
    requested_items: [StandaloneResourceRequestItem!]!
    attachments_metadata: AWSJSON
    approval_workflow: ResourceApprovalWorkflow
    current_approval_step: Int
    total_approval_steps: Int
    tenant_id: ID!
    created_by: ID!
    updated_by: ID!
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    creator: Employee
    updater: Employee
}

# Individual resource request item type
type StandaloneResourceRequestItem @aws_api_key @aws_cognito_user_pools {
    id: ID!
    product: Product!
    quantity: Float!
    unit_abbreviation: String!
    notes: String
    dimension_values: AWSJSON
    status: String!
    current_stock: Float
    stock_status: String
    location_name: String
}

# Input type for starting department execution
input StartDepartmentExecutionInput {
    work_order_id: ID!
    department_id: ID!
    status: String!
    notes: String
    tenant_id: ID!
    created_by: ID!
}

# Response type for department execution
type StartDepartmentExecutionResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    work_order_id: ID
    work_order_number: String
    department_id: ID
    department_name: String
    status: String
}

input StartQuizSessionInput {
    quiz_id: ID!
    user_id: ID
    language_preference: String
    ip_address: String
    user_agent: String
}

type StartQuizSessionResponse @aws_api_key @aws_cognito_user_pools {
    session: QuizSession!
    quiz: Quiz!
    first_question: QuizQuestion
    success: Boolean!
    message: String
}

type StockAgingAnalysis @aws_api_key @aws_cognito_user_pools {
    newStock: Float!
    oneToThreeMonths: Float!
    threeToSixMonths: Float!
    sixToTwelveMonths: Float!
    overOneYear: Float!
}

type StockDistribution @aws_api_key @aws_cognito_user_pools {
    optimalStock: Int!
    lowStock: Int!
    criticalStock: Int!
    excessStock: Int!
    outOfStock: Int!
    totalProducts: Int!
}

type StockHealthBreakdown {
    critical: StockHealthMetric!
    low: StockHealthMetric!
    optimal: StockHealthMetric!
    excess: StockHealthMetric!
}

type StockHealthMetric {
    count: Int!
    value: Float!
}

type StockRiskAssessment @aws_api_key @aws_cognito_user_pools {
    overallRisk: String!
    stockoutRisk: Float!
    excessStockRisk: Float!
    obsolescenceRisk: Float!
    riskFactors: [String!]!
}

type StockoutPrediction @aws_api_key @aws_cognito_user_pools {
    productId: String!
    productName: String!
    predictedStockoutDate: AWSDateTime!
    confidence: Float!
    daysUntilStockout: Int!
    recommendedAction: String!
}

type StyleConfig @aws_api_key @aws_cognito_user_pools {
    backgroundColor: String!
    textColor: String!
    hoverTextColor: String!
    buttonHoverBg: String!
    logoFilter: String!
    borderColor: String!
}

input StyleConfigInput {
    backgroundColor: String!
    textColor: String!
}

# Compensation Workflow Input Types
input SubmitCompensationForApprovalInput {
    id: ID!
    tenant_id: ID!
    workflow_id: ID
    submitted_by: ID!
}

# Compensation Workflow Response Types
type SubmitCompensationForApprovalResponse
    @aws_api_key
    @aws_cognito_user_pools {
    success: Boolean!
    message: String
    employeeCompensation: EmployeeCompensation
}

# Input for submitting planning for review
input SubmitPlanningForReviewInput {
    work_order_id: ID!
    department_id: ID!
    notes: String
    created_by: ID!
    tenant_id: ID!
}

# Response type for submitting planning for review
type SubmitPlanningForReviewResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    work_order_id: ID
    work_order_number: String
    planning_status: String
}

input SubmitQuizResponseInput {
    session_token: String!
    question_id: ID!
    response_value: Int!
    response_text: String
    response_time_seconds: Int
    is_skipped: Boolean
}

type SubmitQuizResponseResponse @aws_api_key @aws_cognito_user_pools {
    response: QuizResponse!
    session: QuizSession!
    next_question: QuizQuestion
    is_quiz_completed: Boolean!
    success: Boolean!
    message: String
}

type SubtaskDetail @aws_api_key @aws_cognito_user_pools {
    id: ID!
    service_task_id: ID!
    name: String!
    description: String
    status: String!
    tenant_id: ID!
    department_id: ID
    created_by: Int!
    start_date: AWSDateTime
    end_date: AWSDateTime
    priority: String
    actual_start_date: AWSDateTime
    actual_completion_date: AWSDateTime
    estimated_duration: Int
    estimated_labor_hours: Float
    estimated_machine_hours: Float
    actual_labor_hours: Int
    actual_machine_hours: Int
    actual_duration: Int
    team_assignments: [TeamAssignment]
    department: Department
    resource_usage: [ResourceUsage]
    subtask_resource_assignments: [SubtaskResourceAssignment]
    created_at: AWSDateTime
    updated_at: AWSDateTime
}

# Subtask related inputs
input SubtaskInput {
    name: String!
    description: String
    estimated_labor_hours: Float!
    estimated_machine_hours: Float!
    dependencies: [String]
    estimated_start_date: String
    estimated_end_date: String
    priority: String!
    status: String
}

# Subtask resource assignment
type SubtaskResourceAssignment @aws_api_key @aws_cognito_user_pools {
    id: ID!
    subtask_id: ID!
    resource_estimate_id: ID!
    quantity: Float
    hours: Float
    dimensions: AWSJSON
    tenant_id: ID!
    created_by: ID!
    updated_by: ID!
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    service_task_id: ID!
    work_order_id: ID!
    product_id: ID
    resource_type: String
    is_additional: Boolean
    resource_id: ID
    employee_id: ID
    resource_estimates_with_details: ResourceEstimateDetails
    resource_estimate: ResourceEstimateDetails
    resource_requests: [ResourceRequest!]
}

# Subtask resource assignment detail for material resources
type SubtaskResourceAssignmentDetail @aws_api_key @aws_cognito_user_pools {
    id: ID
    product_id: ID
    quantity: Float
    hours: Float
    dimensions: AWSJSON
    is_additional: Boolean
}

# Subtask with detailed relationships
type SubtaskWithDetails @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    description: String
    status: String
    estimated_labor_hours: Float
    estimated_machine_hours: Float
    department_id: ID
    dependencies: [String]
    start_date: AWSDateTime
    end_date: AWSDateTime
    actual_start_date: AWSDateTime
    actual_labor_hours: Float
    actual_machine_hours: Float
    actual_completion_date: AWSDateTime
    resource_usage: [ResourceUsage]
    estimated_start_date: String
    estimated_end_date: String
    priority: String
    team_assignments: [TeamAssignment!]
    subtask_resource_assignments: [SubtaskResourceAssignment!]
}

input TaxDiscountInput {
    type: String!
    # 'amount' or 'percentage'
    value: Float!
}

type TaxPeriodTrend @aws_api_key @aws_cognito_user_pools {
    id: ID!
    start_date: AWSDate!
    end_date: AWSDate!
    total_vat_collected: Float!
    total_vat_paid: Float!
    net_vat_liability: Float!
}

type TaxPeriodTrendsResponse @aws_api_key @aws_cognito_user_pools {
    items: [TaxPeriodTrend!]!
}

# Tax Transaction Info
type TaxTransactionInfo @aws_api_key @aws_cognito_user_pools {
    id: ID!
}

type TaxableTransaction @aws_api_key @aws_cognito_user_pools {
    id: ID!
    transaction_type: String!
    transaction_date: AWSDate!
    reference_type: String!
    reference_id: ID!
    vat_rate_id: ID!
    net_amount: Float!
    vat_amount: Float!
    total_amount: Float!
    status: String!
    vat_rate: TaxableTransactionVatRate!
}

type TaxableTransactionVatRate @aws_api_key @aws_cognito_user_pools {
    rate: Float!
    description: String!
}

type TaxableTransactionsResponse @aws_api_key @aws_cognito_user_pools {
    items: [TaxableTransaction!]!
}

type TeamAssignment @aws_api_key @aws_cognito_user_pools {
    id: ID!
    subtask_id: ID
    team_member_id: ID
    status: String
    assigned_at: AWSDateTime
    is_lead: Boolean
    start_date: AWSDateTime
    end_date: AWSDateTime
    hours: Float
    service_task_id: ID
    work_order_id: ID
    department_id: ID
    tenant_id: ID
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    employee: Employee
}

# Team assignment detail for labor resources
type TeamAssignmentDetail @aws_api_key @aws_cognito_user_pools {
    id: ID
    team_member_id: ID
    is_lead: Boolean
    hours: Float
    status: String
}

type TeamMember @aws_api_key @aws_cognito_user_pools {
    first_name: String
    last_name: String
    is_lead: Boolean
}

type TenantValidationResponse {
    id: ID
    name: String
    domain: String
    tierId: ID
    exists: Boolean
}

type TestJournalEntry @aws_api_key @aws_cognito_user_pools {
    description: String!
    lines: [TestJournalEntryLine!]!
    totalDebit: Float!
    totalCredit: Float!
    isBalanced: Boolean!
}

type TestJournalEntryLine @aws_api_key @aws_cognito_user_pools {
    accountCode: String!
    accountName: String!
    description: String!
    debitAmount: Float!
    creditAmount: Float!
}

input TestPostingDefinitionInput {
    tenantId: ID!
    postingRules: AWSJSON!
    testData: AWSJSON!
}

type TestPostingDefinitionResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    generatedEntries: [TestJournalEntry!]
    errors: [String!]
}

type TopBrand @aws_cognito_user_pools {
    brand_id: ID
    brand_name: String
    product_count: Int!
    total_value: Float!
}

type TopCategory @aws_cognito_user_pools {
    category_id: ID
    category_name: String
    product_count: Int!
    total_value: Float!
}

type TrackingMethodStats {
    simple: Int!
    complex: Int!
}

type TurnoverAnalysis @aws_api_key @aws_cognito_user_pools {
    overallTurnover: Float!
    categoryTurnover: [CategoryTurnover!]!
    productTypeTurnover: [ProductTypeTurnover!]!
    locationTurnover: [LocationTurnover!]!
}

# Unit Type Definition
type Unit @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    abbreviation: String
    base_unit: String
    operator: String
    operand: Float
    tenant_id: String
    created_at: AWSDateTime
    updated_at: AWSDateTime
}

# Unit list response type
type UnitConnection {
    items: [Unit]!
    nextToken: String
}

# Unit resource detail for products
type UnitResourceDetail @aws_api_key @aws_cognito_user_pools {
    id: ID
    name: String
    abbreviation: String
    conversion_factor: Float
}

input UpdateAttachmentInput {
    id: ID!
    serial_number: String
    status: String
    equipment_model_id: ID
    customer_id: ID
    tenant_id: ID!
    updated_by: ID
    meta_data: AWSJSON
}

# Input type for updating a brand
input UpdateBrandInput {
    id: ID!
    name: String
    description: String
    files: [BrandFileInput]
    removed_files: [String]
    tenant_id: String!
}

# Input type for updating a category
input UpdateCategoryInput {
    id: ID!
    name: String
    code: String
    tenant_id: String!
}

input UpdateChartOfAccountInput {
    id: ID!
    tenantId: ID!
    accountCode: String
    accountName: String
    accountType: String
    accountCategory: String
    accountSubcategory: String
    parentAccountId: ID
    normalBalance: String
    isActive: Boolean
    allowPosting: Boolean
    requireDimensions: Boolean
    bankAccountId: ID
    customerAccount: Boolean
    supplierAccount: Boolean
    inventoryAccount: Boolean
    currency: String
    allowForeignCurrency: Boolean
    updatedBy: ID!
}

type UpdateChartOfAccountResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    chartOfAccount: ChartOfAccount
    errors: [String!]
}

input UpdateCompanyMachineInput {
    id: ID!
    tenant_id: ID!
    # Product Fields
    name: String
    description: String
    product_code: String
    brand: String
    product_cost: Float
    product_price: Float
    category_id: ID
    unit_of_measurement: String
    sale_unit: String
    purchase_unit: String
    secondary_part_no: String
    updated_by: String
    # Machine Specific Fields
    operational_status: String
    operating_hours: Float
    cost_per_hour: Float
    machine_cost_per_hour: Float
    technical_specs: AWSJSON
    department_id: ID
}

input UpdateConsumableInput {
    id: ID!
    tenant_id: ID!
    # Product Fields
    name: String
    description: String
    product_code: String
    brand: String
    product_cost: Float
    product_price: Float
    category_id: ID
    unit_of_measurement: String
    sale_unit: String
    purchase_unit: String
    vat: Float
    tax_type: String
    profit_margin: Float
    color: String
    manufacture_date: AWSDateTime
    remark: String
    cant_be_sold: Boolean
    cant_be_purchased: Boolean
    cant_be_adjusted: Boolean
    secondary_part_no: String
    inventory_tracking_method: String
    updated_by: String
    # Consumable Specific Fields
    manufacturer: String
    oem_part_number: String
    compatible_models: AWSJSON
    warranty_period: String
    shelf_life: String
    technical_specs: AWSJSON
}

input UpdateCustomerInput {
    id: ID!
    name: String
    email: String
    phone: String
    address: String
    tenant_id: ID!
    is_active: Boolean
    _version: Int
}

# Input type for updating a department
input UpdateDepartmentInput {
    id: ID!
    name: String
    type: String
    tenant_id: ID!
    description: String
    manager_role_id: ID
    level: Int
    is_active: Boolean
    metadata: AWSJSON
    parent_department_id: ID
    updated_by: ID
    # Add the department managers and employees fields
    departmentManagers: [DepartmentManagerInput]
    departmentEmployees: [DepartmentEmployeeInput]
}

input UpdateDepartmentManagerInput {
    id: ID!
    tenant_id: ID!
    employee_id: ID
    department_id: ID
    role_id: ID
    is_primary: Boolean
    start_date: AWSDateTime
    end_date: AWSDateTime
    updated_by: ID
}

input UpdateEmployeeCompensationInput {
    id: ID!
    tenant_id: ID!
    employee_id: ID
    salary_structure_id: ID
    salary_type: SalaryType
    base_salary: Float
    hourly_rate: Float
    commission_rate: Float
    overtime_multiplier: Float
    currency: String
    pay_frequency: PayFrequency
    allowances: AWSJSON
    deductions: AWSJSON
    bonus_structure: AWSJSON
    effective_date: AWSDate
    end_date: AWSDate
    is_active: Boolean
    change_reason: String
    approved_by: ID
    updated_by: ID
    # Workflow fields
    status: CompensationStatus
    workflow_id: ID
    rejection_reason: String
    submit_for_approval: Boolean
}

type UpdateEmployeeCompensationResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    employeeCompensation: EmployeeCompensation
}

# Update the existing UpdateEmployeeInput to include new fields
input UpdateEmployeeInput {
    id: ID!
    first_name: String
    last_name: String
    email: String
    phone: String
    address: String
    date_of_birth: String
    # ENHANCED: Use the new department assignment input
    department_assignment: DepartmentAssignmentInput
    # LEGACY: Keep for backward compatibility
    department_id: ID
    role_id: ID
    gross_salary: Float
    net_salary: Float
    employee_id: String
    start_date: String
    tenant_id: ID!
    updated_by: ID
    employee_files: [EmployeeFileInput]
    removed_files: [ID]
    branch_id: ID
    employment_type: String
    job_title: String
    contract_start_date: String
    contract_end_date: String
    supervisor_id: ID
    work_location: String
    termination_date: String
    termination_reason: String
    is_active: Boolean
    national_id: String
    tax_id_number: String
    custom_fields: String
    bio: String
    # ENHANCED: Use the new department management input
    department_management: DepartmentManagementInput
    # LEGACY: Keep for backward compatibility
    is_department_manager: Boolean
    managed_departments: [ManagedDepartmentInput]
    managed_department_id: ID
}

# Enhanced response types for complex operations
type UpdateEmployeeResponse {
    employee: Employee!
    # Changes made during the update
    changes_applied: [EmployeeChangeLog!]!
    # Warnings or notifications about the changes
    warnings: [String!]
    # Whether additional actions are recommended
    recommended_actions: [String!]
}

input UpdateEquipmentModelInput {
    id: ID!
    name: String
    description: String
    equipment_type_id: ID
    machine_brand_id: ID
    year: Int
    tenant_id: ID!
    updated_by: ID
    manufacturer: String
    specifications: AWSJSON
}

input UpdateEquipmentTypeCompatibilityInput {
    id: ID!
    equipment_type_id: ID!
    attachment_type_id: ID!
    tenant_id: ID!
    updated_by: ID
    notes: String
}

input UpdateEquipmentTypeInput {
    id: ID!
    name: String
    description: String
    classification: String
    can_have_attachments: Boolean
    tenant_id: ID!
    updated_by: ID
}

type UpdateExpenseStatusDiagnostic @aws_api_key @aws_cognito_user_pools {
    operation: String!
    notification_config_found: Boolean!
    previous_status: String!
    new_status: String!
    bank_account_updated: Boolean!
    recipients_created: Int
}

# Update Expense Status Types
input UpdateExpenseStatusInput {
    expense_id: ID!
    status: String!
    updated_by: ID!
    tenant_id: ID!
}

type UpdateExpenseStatusResponse @aws_api_key @aws_cognito_user_pools {
    updated_expense: ExpenseWithRelations!
    updated_bank_account: BankAccountBasic
    diagnostic: UpdateExpenseStatusDiagnostic!
}

input UpdateFiscalPeriodInput {
    id: ID!
    tenantId: ID!
    fiscalYear: Int
    periodNumber: Int
    periodName: String
    startDate: AWSDate
    endDate: AWSDate
    status: String
    closingNotes: String
    ethiopianYear: Int
    ethiopianMonth: Int
    updatedBy: ID!
}

type UpdateFiscalPeriodResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    fiscalPeriod: FiscalPeriod
    errors: [String!]
}

input UpdateHeroSectionInput {
    id: ID!
    tenantId: String!
    badge: String
    headline: String
    subtitle: String
    firstWordStyle: WordStyleInput
    lastWordStyle: WordStyleInput
    cta: CallToActionInput
    backgroundMedia: BackgroundMediaInput
    isActive: Boolean
    order: Int
}

input UpdateJournalEntryInput {
    id: ID!
    tenantId: ID!
    description: String
    journalDate: AWSDate
    postingDate: AWSDate
    fiscalPeriodId: ID
    sourceType: String
    sourceReference: String
    originalJournalId: ID
    reversalReason: String
    batchId: String
    status: String
    workflowStatus: String
    journalEntryLines: [UpdateJournalEntryLineInput!]
    updatedBy: ID!
}

input UpdateJournalEntryLineInput {
    id: ID
    lineNumber: Int!
    accountId: ID!
    description: String!
    debitAmount: Float
    creditAmount: Float
    departmentId: ID
    branchId: ID
    customerId: ID
    supplierId: ID
    currency: String
    exchangeRate: Float
    foreignDebitAmount: Float
    foreignCreditAmount: Float
    taxAmount: Float
    taxRate: Float
    taxType: String
    referenceId: ID
    referenceType: String
    dimensionValues: AWSJSON
}

type UpdateJournalEntryResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    journalEntry: JournalEntry
    errors: [String!]
}

input UpdateMachineAttachmentInput {
    id: ID!
    machine_id: ID
    attachment_id: ID
    is_currently_attached: Boolean
    attached_at: AWSDateTime
    detached_at: AWSDateTime
    # Changed from String to AWSDateTime for consistency
    notes: String
    tenant_id: ID!
    updated_by: ID!
}

input UpdateMachineBrandInput {
    id: ID!
    name: String
    description: String
    tenant_id: ID!
    updated_by: ID
}

input UpdateMachineInput {
    id: ID!
    name: String
    description: String
    serial_number: String
    equipment_model_id: ID
    customer_id: ID
    status: String
    tenant_id: ID!
    updated_by: ID
    purchase_date: AWSDate
    last_maintenance_date: AWSDate
    warranty_expiry_date: AWSDate
    meta_data: AWSJSON
}

input UpdateNavbarConfigInput {
    id: ID!
    tenantId: String!
    logo: LogoConfigInput
    centerNavigation: [NavigationItemInput!]
    rightNavigation: [NavigationItemInput!]
    searchConfig: SearchConfigInput
    cartConfig: CartConfigInput
    styling: NavbarStylingInput
}

input UpdateNotificationPreferencesInput {
    profileId: ID!
    tenantId: ID!
    preferences: [NotificationPreferenceInput!]!
}

# Input type for updating an outlet
input UpdateOutletInput {
    id: ID!
    name: String
    code: String
    type: String
    status: String
    tenant_id: ID!
    address: String
    location: String
    manager_id: ID
    contact_phone: String
    contact_email: String
    tax_registration_no: String
    business_license_no: String
    is_default: Boolean
    has_storage: Boolean
    storage_capacity: Float
    coordinates: AWSJSON
    operating_hours: AWSJSON
    updated_by: ID
}

input UpdatePayrollEntryInput {
    id: ID!
    tenant_id: ID!
    base_salary: Float
    overtime_amount: Float
    allowances: AWSJSON
    deductions: AWSJSON
    gross_salary: Float
    tax_deductions: Float
    other_deductions: Float
    net_salary: Float
    hours_worked: Float
    overtime_hours: Float
    leave_days_taken: Float
    bonus_amount: Float
    commission_amount: Float
    payment_method: String
    payment_reference: String
    payment_date: AWSDate
    payslip_generated: Boolean
    payslip_sent: Boolean
}

type UpdatePayrollEntryResponse {
    success: Boolean!
    message: String
    payrollEntry: PayrollEntry
}

input UpdatePayrollRunInput {
    id: ID!
    tenant_id: ID!
    payroll_period_start: AWSDate
    payroll_period_end: AWSDate
    run_date: AWSDate
    status: String
    notes: String
}

type UpdatePayrollRunResponse {
    success: Boolean!
    message: String
    payrollRun: PayrollRun
}

input UpdatePersonnelActionInput {
    id: ID!
    tenant_id: ID!
    action_type: String
    effective_date: AWSDate
    previous_data: AWSJSON
    new_data: AWSJSON
    reason: String
    workflow_status: String
    approved_by: ID
    documents: AWSJSON
    notes: String
    updated_by: ID
    # Employee information for file organization
    employee_first_name: String
    employee_last_name: String
    employee_id: String
    # Array of file IDs to remove
    files_to_remove: [String]
}

type UpdatePersonnelActionResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    personnel_action: PersonnelAction
    workflow_updates: AWSJSON
    workflow_id: ID
    processed_files: AWSJSON
}

input UpdatePostingDefinitionInput {
    id: ID!
    tenantId: ID!
    ruleName: String
    ruleCode: String
    description: String
    sourceTable: String
    sourceEvent: String
    conditionSql: String
    postingRules: AWSJSON
    isActive: Boolean
    priority: Int
    updatedBy: ID!
}

type UpdatePostingDefinitionResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    postingDefinition: PostingDefinition
    errors: [String!]
}

# Input type for updating a product
input UpdateProductInput {
    id: ID!
    name: String
    description: String
    barcode_symbology: String
    product_code: String
    brand: String
    size: ProductSizeInput
    tenant_id: ID!
    unit_of_measurement: String
    product_cost: Float
    product_price: Float
    imei: String
    sale_unit: String
    purchase_unit: String
    inventory_threshold: Float
    vat: Float
    tax_type: String
    profit_margin: Float
    color: String
    rgb_color: String
    manufacture_date: AWSDateTime
    expiry_date: AWSDateTime
    raw_materials: [RawMaterialInput]
    remark: String
    default_warehouse_id: ID
    default_outlet_id: ID
    machine_cost_per_hour: Float
    category_id: ID
    multi_variants: [String]
    cant_be_sold: Boolean
    cant_be_purchased: Boolean
    cant_be_adjusted: Boolean
    is_fixed_asset: Boolean
    product_type: String
    inventory_tracking_method: String
    has_imei: Boolean
    has_multi_variants: Boolean
    has_raw_materials: Boolean
    conversion_factor: Float
    beginning_inventory: Float
    primary_unit_id: String
    classification: ProductClassificationInput
    inventory_dimensions: [InventoryDimensionInput]
    primary_unit_formula: [FormulaComponentInput]
    files: [ProductFileInput]
    removed_files: [String]
    updated_by: String
    # --- Spare Part Specific Fields (for Lambda/DB) ---
    manufacturer: String
    compatible_models: AWSJSON
    warranty_period: String
    shelf_life: String
    technical_specs: AWSJSON
}

input UpdateRoleInput {
    id: ID!
    role_name: String
    description: String
    department_id: ID
    tenant_id: ID!
    is_manager: Boolean
    type: String
    level: Int
    is_active: Boolean
    can_manage_roles: Boolean
    can_manage_departments: Boolean
    department_access: [ID]
    metadata: AWSJSON
    permissions: AWSJSON
    kpis: AWSJSON
    scopes: [ID]
    subordinates: [ID]
    superiors: [ID]
    updated_by: ID
}

input UpdateSalaryStructureInput {
    id: ID!
    tenantId: ID!
    structure_name: String
    position_id: ID
    department_id: ID
    salary_type: SalaryType
    base_salary: Float
    hourly_rate: Float
    commission_rate: Float
    overtime_multiplier: Float
    allowances: AWSJSON
    deductions: AWSJSON
    bonus_structure: AWSJSON
    currency: String
    pay_frequency: String
    effective_from: AWSDate
    effective_to: AWSDate
    is_active: Boolean
    auto_assign_by_position: Boolean
    auto_assign_by_department: Boolean
    requires_approval: Boolean
}

type UpdateSalaryStructureResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    salaryStructure: SalaryStructure
}

input UpdateServiceTaskTemplateInput {
    id: ID!
    name: String
    description: String
    estimated_duration: Int
    tenant_id: ID!
    updated_by: ID
    equipment_type_id: ID
}

# Input for updating subtask status
input UpdateSubtaskStatusInput {
    subtask_id: ID!
    service_task_id: ID!
    department_id: ID!
    status: String!
    tenant_id: ID!
    created_by: ID!
}

# Response for updateSubtaskStatus mutation
type UpdateSubtaskStatusResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    subtask_id: ID
    work_order_id: ID
    work_order_number: String
    new_status: String
}

# Input type for updating a unit
input UpdateUnitInput {
    id: ID!
    name: String
    abbreviation: String
    base_unit: String
    operator: String
    operand: Float
    tenant_id: String
}

# Input type for updating a warehouse
input UpdateWarehouseInput {
    id: ID!
    name: String
    code: String
    type: String
    status: String
    tenant_id: ID!
    manager_id: ID
    is_default: Boolean
    coordinates: AWSJSON
    operating_hours: AWSJSON
    description: String
    address: AWSJSON
    storage_conditions: AWSJSON
    contact: AWSJSON
    capacity: AWSJSON
    facilities: [String]
    certifications: AWSJSON
    staff: AWSJSON
    updated_by: ID
}

input UpdateWorkOrderInput {
    id: ID!
    work_order_number: String
    customer_id: ID
    equipment_type_id: ID
    machine_brand_id: ID
    equipment_model_id: ID
    machine_id: ID
    status: String
    estimated_completion_date: String
    scheduled_date: String
    completed_date: String
    notes: String
    updated_by: ID
    approved_by: ID
    tenant_id: ID!
    attachment_id: ID
    completed_at: String
    started_at: String
    post_execution_status: String
    # New entity creation fields - same as create
    new_customer_name: String
    new_customer_contact: String
    new_equipment_type_name: String
    new_equipment_type_description: String
    new_equipment_type_classification: String
    new_equipment_type_can_have_attachments: Boolean
    new_machine_brand_name: String
    new_machine_brand_description: String
    new_machine_brand_website: String
    new_machine_model_name: String
    new_machine_model_description: String
    new_machine_model_year: Int
    new_machine_serial_number: String
    new_machine_name: String
    new_machine_description: String
    # Tasks
    task_ids: [ID]
    new_task_names: [String]
    # Attachment specific
    attachment_notes: String
    new_attachment_identifier: String
    associated_machine_serial: String
}

# Input type for upserting an attachment
input UpsertAttachmentInput {
    id: ID
    serial_number: String!
    equipment_model_id: ID!
    status: String
    customer_id: ID
    tenant_id: ID!
    profile_id: ID!
}

# Input for upserting a bank account
input UpsertBankAccountInput {
    id: ID
    account_name: String!
    account_number: String!
    bank_name: String!
    currency: String!
    current_balance: Float
    account_type: String!
    is_active: Boolean!
    notes: String
    tenant_id: ID!
    created_by: ID!
    file_data: BankAccountFileInput
}

input UpsertEquipmentTypeCompatibilityInput {
    id: ID
    equipment_type_id: ID!
    attachment_type_id: ID!
    notes: String
    tenant_id: ID!
    profile_id: ID!
}

# Input for upserting an expense category
input UpsertExpenseCategoryInput {
    id: ID
    name: String!
    description: String
    color: String!
    icon: String!
    budget_limit: Float
    is_active: Boolean!
    created_by: ID!
    tenant_id: ID!
}

# Input for upserting a machine brand with files
input UpsertMachineBrandWithFilesInput {
    id: ID
    name: String!
    description: String
    tenant_id: ID!
    created_by: ID
    updated_by: ID
    website: String
    profile_id: ID
    files: [MachineBrandFileInput]
    removed_files: [ID]
}

input UpsertQuizInput {
    id: ID
    name_en: String!
    name_am: String!
    description_en: String
    description_am: String
    quiz_type: QuizType!
    total_questions: Int!
    estimated_duration_minutes: Int
    is_active: Boolean
    requires_authentication: Boolean
    free_tier_enabled: Boolean
    paid_tier_100_enabled: Boolean
    paid_tier_300_enabled: Boolean
    metadata: AWSJSON
}

input UpsertQuizQuestionInput {
    id: ID
    quiz_id: ID!
    question_number: Int!
    question_text_en: String!
    question_text_am: String!
    question_type: QuestionType!
    response_scale_min: Int
    response_scale_max: Int
    response_options: AWSJSON
    personality_dimensions: AWSJSON!
    weight: Float
    is_reverse_scored: Boolean
    is_active: Boolean
    metadata: AWSJSON
}

input UpsertVatRateInput {
    rate: Float!
    description: String!
    is_default: Boolean!
    tenant_id: ID!
    created_by: ID!
    name: String!
}

type UpsertVatRateResponse @aws_api_key @aws_cognito_user_pools {
    success: Boolean!
    message: String
    error: String
    vat_rate: AWSJSON
}

type User {
    id: ID
    cognitoId: String
    email: String
    phoneNumber: String
    firstName: String
    lastName: String
    tenantId: String
    role_name: String
    status: String
    employeeId: String
    profileId: String
}

input UserIdMappingInput {
    cognitoId: String!
    legacyId: String!
}

type UserIdMappingResponse {
    success: Boolean!
}

type UserNotification @aws_api_key @aws_cognito_user_pools @aws_iam {
    id: ID!
    title: String!
    message: String!
    type: String!
    category: String!
    priority: String!
    channels: [String!]!
    action_url: String
    metadata: AWSJSON
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    tenant_id: ID!
    created_by: ID!
    # Recipient-specific fields
    is_read: Boolean!
    read_at: AWSDateTime
    status: String!
}

type UserNotificationWithRecipient
    @aws_api_key
    @aws_cognito_user_pools
    @aws_iam {
    id: ID!
    title: String
    message: String
    type: String
    category: String
    priority: String
    channels: [String]
    action_url: String
    metadata: AWSJSON
    created_at: String
    updated_at: String
    tenant_id: ID
    created_by: ID
    is_read: Boolean
    read_at: String
    status: String
}

type UserPermissionsResponse {
    userId: ID!
    scopes: [String!]!
}

type UserProfile {
    id: ID!
    login_email: String
    employee_id: String
    employee_uuid: String
    phone_number: String
    tenant_id: String!
    telegram_id: String
    role_id: String
    phone: String
    employee_first_name: String
    employee_last_name: String
    role_name: String
    employee: Employee
    roles: Role
    scopes: [String]
    _version: Int
    _deleted: Boolean
}

input VatInput {
    type: String!
    # 'amount' or 'percentage'
    rate: Float!
    isEdited: Boolean!
}

type VatRate @aws_api_key @aws_cognito_user_pools {
    id: ID!
    tenant_id: ID!
    rate: Float!
    description: String!
    is_default: Boolean!
    is_active: Boolean!
    created_by: ID!
    last_updated_by: ID!
    created_at: AWSDateTime!
    last_updated_at: AWSDateTime!
    name: String
}

type VatRatesResponse @aws_api_key @aws_cognito_user_pools {
    items: [VatRate!]!
}

type VelocityMetrics @aws_api_key @aws_cognito_user_pools {
    fastMoving: Int!
    mediumMoving: Int!
    slowMoving: Int!
    noMovement: Int!
    averageVelocity: Float!
}

enum VerificationStatus {
    PENDING
    VERIFIED
    FAILED
    EXPIRED
}

input VerifyQuizPaymentInput {
    payment_reference: String!
    verification_code: String!
    contact_info: String!
}

type VerifyQuizPaymentResponse @aws_api_key @aws_cognito_user_pools {
    payment: QuizPayment!
    result: QuizResult!
    unlocked_content: AWSJSON
    success: Boolean!
    message: String
}

# Warehouse Type Definition
type Warehouse {
    id: ID!
    tenant_id: ID!
    name: String!
    code: String!
    type: String!
    status: String!
    manager_id: ID
    manager: Employee
    is_default: Boolean
    coordinates: AWSJSON
    operating_hours: AWSJSON
    created_at: AWSDateTime
    updated_at: AWSDateTime
    created_by: ID
    updated_by: ID
    description: String
    address: AWSJSON!
    storage_conditions: AWSJSON
    contact: AWSJSON!
    capacity: AWSJSON!
    facilities: [String]
    certifications: AWSJSON
    staff: AWSJSON
}

# Warehouse list response type
type WarehouseConnection {
    items: [Warehouse]!
    nextToken: String
}

type WordStyle @aws_api_key @aws_cognito_user_pools {
    fontFamily: String!
    fontWeight: Int!
    color: String!
    fontStyle: String
}

input WordStyleInput {
    fontFamily: String!
    fontWeight: Int!
    color: String!
    fontStyle: String
}

# Work Order related types and operations
type WorkOrder @aws_api_key @aws_cognito_user_pools {
    id: ID
    work_order_number: String!
    customer_id: ID!
    equipment_type_id: ID
    machine_brand_id: ID
    equipment_model_id: ID
    machine_id: ID
    status: String!
    estimated_completion_date: AWSDateTime
    scheduled_date: AWSDateTime
    completed_date: AWSDateTime
    notes: String
    created_by: ID!
    updated_by: ID
    approved_by: ID
    tenant_id: ID!
    created_at: AWSDateTime
    updated_at: AWSDateTime
    attachment_id: ID
    completed_at: AWSDateTime
    started_at: AWSDateTime
    post_execution_status: String
    # Relationships
    # existing fields
    equipment_type: EquipmentType @aws_api_key @aws_cognito_user_pools
    machine_brand: MachineBrand @aws_api_key @aws_cognito_user_pools
    equipment_model: EquipmentModel @aws_api_key @aws_cognito_user_pools
    machine: Machine @aws_api_key @aws_cognito_user_pools
    customer: Customer @aws_api_key @aws_cognito_user_pools
    attachment: Attachment @aws_api_key @aws_cognito_user_pools
    service_tasks: [ServiceTask] @aws_api_key @aws_cognito_user_pools
    created_by_employee: Employee @aws_api_key @aws_cognito_user_pools
    department_assignments: [DepartmentWithAssignments]
        @aws_api_key
        @aws_cognito_user_pools
    updated_by_employee: Employee @aws_api_key @aws_cognito_user_pools
    approved_by_employee: Employee @aws_api_key @aws_cognito_user_pools
    # New fields
    department_work_order_planning: [DepartmentWorkOrderPlanning]
        @aws_api_key
        @aws_cognito_user_pools
    work_order_assignments: [WorkOrderAssignment]
        @aws_api_key
        @aws_cognito_user_pools
}

# Work order approval status enum
enum WorkOrderApprovalStatus {
    Approved
    Rejected
}

# Work Order Assignment Type
type WorkOrderAssignment @aws_api_key @aws_cognito_user_pools {
    id: ID!
    status: String
    department_id: ID
    notes: String
    work_order_id: ID
    assigned_by: ID
    service_task_id: ID
    created_at: String
    updated_at: String
    assigned_at: AWSDateTime!
    accepted_at: AWSDateTime
    started_at: AWSDateTime
    completed_at: AWSDateTime
    cancelled_at: AWSDateTime
    rejected_at: AWSDateTime
    tenant_id: ID
    updated_by: ID
    accepted_by: ID
    rejected_by: ID
    rejection_reason: String
    department: Department
    work_order: WorkOrder @aws_api_key @aws_cognito_user_pools
    assigned_by_employee: Employee @aws_api_key @aws_cognito_user_pools
    service_task: ServiceTask @aws_api_key @aws_cognito_user_pools
    accepted_by_employee: Employee @aws_api_key @aws_cognito_user_pools
}

# Connection Type for Pagination
type WorkOrderAssignmentConnection @aws_api_key @aws_cognito_user_pools {
    items: [WorkOrderAssignment]!
    nextToken: String
}

# Union type to support both individual assignments and department-grouped assignments
union WorkOrderAssignmentStatusItem =
    | WorkOrderAssignmentWithDetails
    | DepartmentGroupedAssignments

# Work order assignment with department details
type WorkOrderAssignmentWithDepartment @aws_api_key @aws_cognito_user_pools {
    id: ID!
    work_order_id: ID!
    department_id: ID!
    service_task_id: ID!
    assigned_at: AWSDateTime!
    assigned_by: ID!
    status: String!
    notes: String
    tenant_id: ID!
    created_at: AWSDateTime
    updated_at: AWSDateTime
    accepted_by: ID
    accepted_at: AWSDateTime
    updated_by: ID
    started_at: AWSDateTime
    completed_at: AWSDateTime
    cancelled_at: AWSDateTime
    rejected_at: AWSDateTime
    rejected_by: ID
    rejection_reason: String
    # Department relationship
    department: Department!
}

# Work order assignment with detailed relationships
type WorkOrderAssignmentWithDetails @aws_api_key @aws_cognito_user_pools {
    id: ID!
    status: String!
    assigned_at: String
    accepted_at: String
    department_id: ID!
    work_order_id: ID!
    assigned_by: ID
    service_task_id: ID!
    created_at: String
    updated_at: String
    departments: Department
    work_order: WorkOrderBasic
    service_tasks: ServiceTaskWithSubtasks
}

# Work Order assignment with status connection type
type WorkOrderAssignmentWithStatusConnection
    @aws_api_key
    @aws_cognito_user_pools {
    items: [WorkOrderAssignmentStatusItem!]!
    nextToken: String
}

# Basic work order type
type WorkOrderBasic @aws_api_key @aws_cognito_user_pools {
    id: ID!
    work_order_number: String!
    status: String
    customer_id: ID
    equipment_type_id: ID
    machine_brand_id: ID
    equipment_model_id: ID
    machine_id: ID
    created_at: AWSDateTime
    updated_at: AWSDateTime
    notes: String
    started_at: AWSDateTime
    estimated_completion_date: AWSDateTime
    completed_at: AWSDateTime
    post_execution_status: String
    # Relationships
    customers: Customer
    equipment_type: EquipmentType @aws_api_key @aws_cognito_user_pools
    machine_brand: MachineBrand @aws_api_key @aws_cognito_user_pools
    equipment_model: EquipmentModel @aws_api_key @aws_cognito_user_pools
    machine: Machine @aws_api_key @aws_cognito_user_pools
    department_work_order_planning: DepartmentWorkOrderPlanning
}

# Connection types for pagination
type WorkOrderConnection {
    items: [WorkOrder]
    nextToken: String
}

type WorkOrderDetails @aws_cognito_user_pools @aws_api_key {
    id: ID
    work_order_number: String
    status: String
    notes: String
    created_at: AWSDateTime
    estimated_completion_date: AWSDateTime
    customer: Customer
    equipment_type: EquipmentType
    machine: Machine
    created_by_employee: Employee
}

input WorkOrderFinancialReviewAdjustmentsInput {
    admin_overhead_percentage: Float!
    machine_overhead_percentage: Float!
    margin_percentage: Float!
}

input WorkOrderFinancialReviewSettingsInput {
    show_unit_costs: Boolean!
    show_quantities: Boolean!
    show_rates: Boolean!
}

# Work Order Info for invoice display
type WorkOrderInfo @aws_api_key @aws_cognito_user_pools {
    work_order_number: String!
}

type WorkOrderSummary {
    id: ID!
    work_order_number: String!
    status: String!
    created_at: AWSDateTime!
    updated_at: AWSDateTime!
    estimated_completion_date: AWSDateTime
    current_phase: String
    resources_estimated: Boolean!
    subtasks_defined: Boolean!
    team_assigned: Boolean!
    ready_for_approval: Boolean!
    estimated_start_date: AWSDateTime
    customer: Customer
    equipment_type: String
    machine_brand: String
    machine_model: String
    machine_serial_number: String
    machine_name: String
    assigned_at: AWSDateTime
    accepted_at: AWSDateTime
    started_at: AWSDateTime
    completed_at: AWSDateTime
    cancelled_at: AWSDateTime
    rejected_at: AWSDateTime
    rejected_by: ID
    rejection_reason: String
    service_tasks: [ServiceTask]
    resource_details: [ResourceEstimate]
    team_details: [TeamAssignment]
    subtask_details: [SubtaskDetail]
}

# Work order with assignment details type
type WorkOrderWithAssignments @aws_api_key @aws_cognito_user_pools {
    id: ID!
    work_order_number: String!
    customer_id: ID!
    equipment_type_id: ID
    machine_brand_id: ID
    equipment_model_id: ID
    machine_id: ID
    status: String!
    estimated_completion_date: AWSDateTime
    scheduled_date: AWSDateTime
    completed_date: AWSDateTime
    notes: String
    created_by: ID!
    updated_by: ID
    approved_by: ID
    tenant_id: ID!
    created_at: AWSDateTime
    updated_at: AWSDateTime
    attachment_id: ID
    completed_at: AWSDateTime
    started_at: AWSDateTime
    post_execution_status: String
    # Assignment array with departments
    assignment: [WorkOrderAssignmentWithDepartment!]!
}

type Mutation @aws_api_key @aws_cognito_user_pools {
    # Create a customer
    createCustomer(input: CreateCustomerInput!): Customer @aws_iam
    # Update a customer
    updateCustomer(input: UpdateCustomerInput!): Customer @aws_iam
    # Delete a customer
    deleteCustomer(id: ID!, tenantId: ID!): Customer @aws_iam
    # Signup mutation
    signUp(input: SignUpInput!): SignUpResponse @aws_iam @aws_api_key
    confirmSignUp(input: ConfirmSignUpInput!): SignUpResponse
        @aws_iam
        @aws_api_key
    # User ID mapping mutation
    createUserIdMapping(input: UserIdMappingInput!): UserIdMappingResponse
        @aws_api_key
        @aws_cognito_user_pools
    redisSet(input: RedisSetInput!): RedisCacheResponse
        @aws_iam
        @aws_cognito_user_pools
        @aws_api_key
    redisDelete(key: String!): RedisCacheResponse
        @aws_iam
        @aws_cognito_user_pools
        @aws_api_key
    # Unit mutations
    createUnit(input: CreateUnitInput!): Unit
    updateUnit(input: UpdateUnitInput!): Unit
    deleteUnit(id: ID!, tenantId: ID!): Unit
    deleteUnits(ids: [ID!]!, tenantId: ID!): Boolean
    # Brand mutations
    createBrand(input: CreateBrandInput!): Brand
    updateBrand(input: UpdateBrandInput!): Brand
    deleteBrand(id: ID!, tenantId: ID!): Brand
    deleteBrands(ids: [ID!]!, tenantId: ID!): Boolean
    # Category mutations
    createCategory(input: CreateCategoryInput!): Category
    updateCategory(input: UpdateCategoryInput!): Category
    deleteCategory(id: ID!, tenantId: ID!): Category
    deleteCategories(ids: [ID!]!, tenantId: ID!): Boolean
    # Product mutations
    createProduct(input: CreateProductInput!): Product
    updateProduct(input: UpdateProductInput!): Product
    # Soft delete operations
    deleteProduct(id: ID!, tenantId: ID!, deletedBy: ID): DeleteProductResponse!
    deleteProducts(
        ids: [ID!]!
        tenantId: ID!
        deletedBy: ID
    ): DeleteProductsResponse!
    restoreProducts(
        ids: [ID!]!
        tenantId: ID!
        restoredBy: ID
    ): RestoreProductsResponse!
    createSparePartsBatch(
        inputs: [CreateProductInput!]!
    ): CreateProductsBatchResponse!
    # Warehouse mutations
    createWarehouse(input: CreateWarehouseInput!): Warehouse
    updateWarehouse(input: UpdateWarehouseInput!): Warehouse
    deleteWarehouse(id: ID!, tenantId: ID!): Warehouse
    deleteWarehouses(ids: [ID!]!, tenantId: ID!): Boolean
    # Outlet mutations
    createOutlet(input: CreateOutletInput!): Outlet
    updateOutlet(input: UpdateOutletInput!): Outlet
    deleteOutlet(id: ID!, tenantId: ID!): Outlet
    deleteOutlets(ids: [ID!]!, tenantId: ID!): Boolean
    # Role mutations
    createRole(input: CreateRoleInput!): Role
    updateRole(input: UpdateRoleInput!): Role
    deleteRole(id: ID!, tenantId: ID!): Role
    deleteRoles(ids: [ID!]!, tenantId: ID!): Boolean
    # Department mutations
    createDepartment(input: CreateDepartmentInput!): Department
    updateDepartment(input: UpdateDepartmentInput!): Department
    deleteDepartment(id: ID!, tenantId: ID!): Department
    deleteDepartments(ids: [ID!]!, tenantId: ID!): Boolean
    # --- BEGIN New Machine/Consumable Mutations ---
    createCompanyMachine(input: CreateCompanyMachineInput!): Product
    updateCompanyMachine(input: UpdateCompanyMachineInput!): Product
    createCompanyMachinesBatch(
        inputs: [CreateCompanyMachineInput!]!
    ): CreateProductsBatchResponse!
    createConsumable(input: CreateConsumableInput!): Product
    updateConsumable(input: UpdateConsumableInput!): Product
    createConsumablesBatch(
        inputs: [CreateConsumableInput!]!
    ): CreateProductsBatchResponse!
    # Employee mutations
    createEmployee(input: CreateEmployeeInput!): Employee
    updateEmployee(input: UpdateEmployeeInput!): UpdateEmployeeResponse
    deleteEmployee(id: ID!, tenantId: ID!): Employee
    deleteEmployees(ids: [ID!]!, tenantId: ID!): Boolean
    # Work Order
    createWorkOrder(input: CreateWorkOrderInput!): WorkOrder
    updateWorkOrder(input: UpdateWorkOrderInput!): WorkOrder
    deleteWorkOrder(id: ID!, tenantId: ID!): WorkOrder
    # Equipment Type
    createEquipmentType(input: CreateEquipmentTypeInput!): EquipmentType
    updateEquipmentType(input: UpdateEquipmentTypeInput!): EquipmentType
    deleteEquipmentType(id: ID!, tenantId: ID!): EquipmentType
    # Equipment Model
    createEquipmentModel(input: CreateEquipmentModelInput!): EquipmentModel
    updateEquipmentModel(input: UpdateEquipmentModelInput!): EquipmentModel
    deleteEquipmentModel(id: ID!, tenantId: ID!): EquipmentModel
    # Machine Brand
    createMachineBrand(input: CreateMachineBrandInput!): MachineBrand
    updateMachineBrand(input: UpdateMachineBrandInput!): MachineBrand
    deleteMachineBrand(id: ID!, tenantId: ID!): MachineBrand
    # Machine
    createMachine(input: CreateMachineInput!): Machine
    updateMachine(input: UpdateMachineInput!): Machine
    deleteMachine(id: ID!, tenantId: ID!): Machine
    # Service Task Template
    createServiceTaskTemplate(
        input: CreateServiceTaskTemplateInput!
    ): ServiceTaskTemplate
    updateServiceTaskTemplate(
        input: UpdateServiceTaskTemplateInput!
    ): ServiceTaskTemplate
    deleteServiceTaskTemplate(id: ID!, tenantId: ID!): ServiceTaskTemplate
    # Equipment Type Compatibility
    createEquipmentTypeCompatibility(
        input: CreateEquipmentTypeCompatibilityInput!
    ): EquipmentTypeCompatibility
    updateEquipmentTypeCompatibility(
        input: UpdateEquipmentTypeCompatibilityInput!
    ): EquipmentTypeCompatibility
    deleteEquipmentTypeCompatibility(
        id: ID!
        tenantId: ID!
    ): EquipmentTypeCompatibility
    # Attachment
    createAttachment(input: CreateAttachmentInput!): Attachment
    updateAttachment(input: UpdateAttachmentInput!): Attachment
    deleteAttachment(id: ID!, tenantId: ID!): Attachment
    # Add upsertAttachment mutation with input parameter
    upsertAttachment(input: UpsertAttachmentInput!): Attachment
    # Compound operations
    upsertWorkOrder(input: CreateWorkOrderInput!): WorkOrder
    # Machine Brand with Files
    upsertMachineBrandWithFiles(
        input: UpsertMachineBrandWithFilesInput!
    ): MachineBrand
    upsertEquipmentTypeCompatibility(
        input: UpsertEquipmentTypeCompatibilityInput!
    ): EquipmentTypeCompatibility
    createMachineAttachment(
        input: CreateMachineAttachmentInput!
    ): MachineAttachment
    updateMachineAttachment(
        input: UpdateMachineAttachmentInput!
    ): MachineAttachment
    deleteMachineAttachment(id: ID!, tenantId: ID!): MachineAttachment
    approveWorkOrder(input: ApproveWorkOrderInput!): WorkOrder
        @aws_api_key
        @aws_cognito_user_pools
    acceptWorkOrderAssignment(
        input: AcceptWorkOrderAssignmentInput!
    ): AcceptWorkOrderAssignmentResponse @aws_cognito_user_pools
    addDepartmentManager(input: AddDepartmentManagerInput!): DepartmentManager
    updateDepartmentManager(
        input: UpdateDepartmentManagerInput!
    ): DepartmentManager
    removeDepartmentManager(
        input: RemoveDepartmentManagerInput!
    ): DepartmentManager
    setPrimaryDepartmentManager(
        input: SetPrimaryDepartmentManagerInput!
    ): DepartmentManager
    saveResourceEstimates(
        input: SaveResourceEstimatesInput!
    ): SaveResourceEstimatesResponse @aws_cognito_user_pools @aws_api_key
    saveSubtasks(input: SaveSubtasksInput!): SaveSubtasksResponse!
        @aws_cognito_user_pools
        @aws_api_key
    saveTeamAssignments(
        input: SaveTeamAssignmentsInput!
    ): SaveTeamAssignmentsResponse @aws_cognito_user_pools @aws_api_key
    # Submit planning for review
    submitPlanningForReview(
        input: SubmitPlanningForReviewInput!
    ): SubmitPlanningForReviewResponse @aws_cognito_user_pools @aws_api_key
    reviewPlanning(input: ReviewPlanningInput!): ReviewPlanningResponse
    # Add this to the Mutation type
    startDepartmentExecution(
        input: StartDepartmentExecutionInput!
    ): StartDepartmentExecutionResponse @aws_cognito_user_pools
    updateSubtaskStatus(
        input: UpdateSubtaskStatusInput!
    ): UpdateSubtaskStatusResponse @aws_cognito_user_pools @aws_api_key
    # Add this mutation for requesting resources
    requestResources(input: RequestResourcesInput!): RequestResourcesResponse
        @aws_cognito_user_pools
        @aws_api_key
    collectResources(input: CollectResourcesInput!): CollectResourcesResponse
        @aws_cognito_user_pools
        @aws_api_key
    # Resource request verification action
    handleResourceRequestVerificationAction(
        input: HandleResourceRequestVerificationActionInput!
    ): HandleResourceRequestVerificationActionResponse @aws_cognito_user_pools
    # Resource request approval action
    handleResourceRequestApprovalAction(
        input: HandleResourceRequestApprovalActionInput!
    ): HandleResourceRequestApprovalActionResponse
        @aws_cognito_user_pools
        @aws_api_key
    # Resource request preparation action
    handleResourceRequestPreparationAction(
        input: HandleResourceRequestPreparationActionInput!
    ): HandleResourceRequestPreparationActionResponse
        @aws_cognito_user_pools
        @aws_api_key
    # Input for logging resource usage
    logResourceUsage(input: LogResourceUsageInput!): LogResourceUsageResponse
        @aws_cognito_user_pools
        @aws_api_key
    requestResourceReturn(
        input: RequestResourceReturnInput!
    ): RequestResourceReturnResponse @aws_cognito_user_pools @aws_api_key
    handleVerifyResourceReturn(
        input: HandleVerifyResourceReturnInput!
    ): HandleVerifyResourceReturnResponse @aws_cognito_user_pools @aws_api_key
    completeDepartmentExecution(
        input: CompleteDepartmentExecutionInput!
    ): CompleteDepartmentExecutionResponse @aws_cognito_user_pools @aws_api_key
    handleWorkOrderClosureApproval(
        input: HandleWorkOrderClosureApprovalInput!
    ): HandleWorkOrderClosureApprovalResponse
        @aws_cognito_user_pools
        @aws_api_key
    handleWorkOrderFinancialReview(
        input: HandleWorkOrderFinancialReviewInput!
    ): HandleWorkOrderFinancialReviewResponse
        @aws_cognito_user_pools
        @aws_api_key
    # Expense Category
    upsertExpenseCategory(input: UpsertExpenseCategoryInput!): ExpenseCategory
        @aws_cognito_user_pools
        @aws_api_key
    # Expense
    createExpense(input: CreateExpenseInput!): CreateExpenseResponse
        @aws_cognito_user_pools
        @aws_api_key
    # Bank Account
    upsertBankAccount(input: UpsertBankAccountInput!): BankAccount
        @aws_cognito_user_pools
        @aws_api_key
    deleteBankAccount(
        input: DeleteBankAccountInput!
    ): DeleteBankAccountResponse @aws_cognito_user_pools @aws_api_key
    # Resource Requests
    createStandaloneResourceRequest(
        input: CreateStandaloneResourceRequestInput!
    ): CreateStandaloneResourceRequestResponse
        @aws_cognito_user_pools
        @aws_api_key
    updateExpenseStatus(
        input: UpdateExpenseStatusInput!
    ): UpdateExpenseStatusResponse @aws_cognito_user_pools @aws_api_key
    # Inventory Movement
    createInventoryMovement(
        input: CreateInventoryMovementInput!
    ): CreateInventoryMovementResponse @aws_cognito_user_pools @aws_api_key
    # Department Invoice
    createDepartmentInvoice(
        input: CreateDepartmentInvoiceInput!
    ): CreateDepartmentInvoiceResponse @aws_cognito_user_pools @aws_api_key
    finalizeDepartmentInvoice(
        input: FinalizeDepartmentInvoiceInput!
    ): FinalizeDepartmentInvoiceResponse @aws_cognito_user_pools @aws_api_key
    # Tax Management
    createTaxPeriod(input: CreateTaxPeriodInput!): CreateTaxPeriodResponse
        @aws_cognito_user_pools
        @aws_api_key
    upsertVatRate(input: UpsertVatRateInput!): UpsertVatRateResponse
        @aws_cognito_user_pools
        @aws_api_key
    reconcileTaxTransaction(
        input: ReconcileTaxTransactionInput!
    ): ReconcileTaxTransactionResponse @aws_cognito_user_pools @aws_api_key
    # Record Invoice Payment Mutation
    recordInvoicePayment(
        input: RecordInvoicePaymentInput!
    ): RecordInvoicePaymentResponse! @aws_api_key @aws_cognito_user_pools
    # Notification Management Mutations
    saveSubscription(input: SaveSubscriptionInput!): SaveSubscriptionResponse
        @aws_api_key
        @aws_cognito_user_pools
    updateNotificationPreferences(
        input: UpdateNotificationPreferencesInput!
    ): NotificationMutationResponse @aws_api_key @aws_cognito_user_pools
    sendTestNotification(
        input: SendTestNotificationInput!
    ): NotificationReceivedEvent @aws_api_key @aws_cognito_user_pools
    removePushSubscription(
        input: RemovePushSubscriptionInput!
    ): NotificationMutationResponse @aws_api_key @aws_cognito_user_pools
    markNotificationRead(
        input: MarkNotificationReadInput!
    ): NotificationMutationResponse @aws_api_key @aws_cognito_user_pools
    markNotificationsRead(
        input: MarkNotificationsReadInput!
    ): NotificationReceivedEvent @aws_api_key @aws_cognito_user_pools
    # Mark notification as read
    markNotificationAsRead(
        notificationId: ID!
        profileId: ID!
        tenantId: ID!
    ): NotificationReceivedEvent @aws_api_key @aws_cognito_user_pools
    # Create a new notification (system/admin)
    createNotification(
        input: CreateNotificationInput!
    ): NotificationReceivedEvent @aws_api_key @aws_cognito_user_pools
    # Publish notification for real-time delivery (internal/Lambda use)
    publishNotification(
        input: CreateNotificationInput!
        profileId: ID!
        tenantId: ID!
        subscriptionOnly: Boolean
    ): NotificationReceivedEvent @aws_api_key @aws_cognito_user_pools @aws_iam
    # POS Transaction
    createPosTransaction(
        input: CreatePosTransactionInput!
    ): CreatePosTransactionResponse @aws_api_key @aws_cognito_user_pools
    # Finance Portal - Chart of Accounts
    createChartOfAccount(
        input: CreateChartOfAccountInput!
    ): CreateChartOfAccountResponse @aws_api_key @aws_cognito_user_pools
    updateChartOfAccount(
        input: UpdateChartOfAccountInput!
    ): UpdateChartOfAccountResponse @aws_api_key @aws_cognito_user_pools
    # Finance Portal - Fiscal Periods
    createFiscalPeriod(
        input: CreateFiscalPeriodInput!
    ): CreateFiscalPeriodResponse @aws_api_key @aws_cognito_user_pools
    updateFiscalPeriod(
        input: UpdateFiscalPeriodInput!
    ): UpdateFiscalPeriodResponse @aws_api_key @aws_cognito_user_pools
    # Finance Portal - Journal Entries
    createJournalEntry(
        input: CreateJournalEntryInput!
    ): CreateJournalEntryResponse @aws_api_key @aws_cognito_user_pools
    updateJournalEntry(
        input: UpdateJournalEntryInput!
    ): UpdateJournalEntryResponse @aws_api_key @aws_cognito_user_pools
    postJournalEntry(input: PostJournalEntryInput!): PostJournalEntryResponse
        @aws_api_key
        @aws_cognito_user_pools
    approveJournalEntry(
        input: ApproveJournalEntryInput!
    ): ApproveJournalEntryResponse @aws_api_key @aws_cognito_user_pools
    reverseJournalEntry(
        input: ReverseJournalEntryInput!
    ): ReverseJournalEntryResponse @aws_api_key @aws_cognito_user_pools
    # Finance Portal - Posting Definitions
    createPostingDefinition(
        input: CreatePostingDefinitionInput!
    ): CreatePostingDefinitionResponse @aws_api_key @aws_cognito_user_pools
    updatePostingDefinition(
        input: UpdatePostingDefinitionInput!
    ): UpdatePostingDefinitionResponse @aws_api_key @aws_cognito_user_pools
    deletePostingDefinition(
        id: ID!
        tenantId: ID!
    ): DeletePostingDefinitionResponse @aws_api_key @aws_cognito_user_pools
    testPostingDefinition(
        input: TestPostingDefinitionInput!
    ): TestPostingDefinitionResponse @aws_api_key @aws_cognito_user_pools
    # Personnel Actions
    createPersonnelAction(
        input: CreatePersonnelActionInput!
    ): CreatePersonnelActionResponse @aws_api_key @aws_cognito_user_pools
    updatePersonnelAction(
        input: UpdatePersonnelActionInput!
    ): UpdatePersonnelActionResponse @aws_api_key @aws_cognito_user_pools
    approvePersonnelAction(
        input: ApprovePersonnelActionInput!
    ): ApprovePersonnelActionResponse @aws_api_key @aws_cognito_user_pools
    # Salary Structures
    createSalaryStructure(
        input: CreateSalaryStructureInput!
    ): CreateSalaryStructureResponse @aws_api_key @aws_cognito_user_pools
    updateSalaryStructure(
        input: UpdateSalaryStructureInput!
    ): UpdateSalaryStructureResponse @aws_api_key @aws_cognito_user_pools
    deleteSalaryStructure(
        id: ID!
        tenantId: ID!
    ): DeleteSalaryStructureResponse @aws_api_key @aws_cognito_user_pools
    # Employee Compensation
    createEmployeeCompensation(
        input: CreateEmployeeCompensationInput!
    ): CreateEmployeeCompensationResponse @aws_api_key @aws_cognito_user_pools
    updateEmployeeCompensation(
        input: UpdateEmployeeCompensationInput!
    ): UpdateEmployeeCompensationResponse @aws_api_key @aws_cognito_user_pools
    deleteEmployeeCompensation(
        id: ID!
        tenantId: ID!
    ): DeleteEmployeeCompensationResponse @aws_api_key @aws_cognito_user_pools
    # Compensation Workflow Actions
    submitCompensationForApproval(
        input: SubmitCompensationForApprovalInput!
    ): SubmitCompensationForApprovalResponse
        @aws_api_key
        @aws_cognito_user_pools
    approveCompensation(
        input: ApproveCompensationInput!
    ): ApproveCompensationResponse @aws_api_key @aws_cognito_user_pools
    rejectCompensation(
        input: RejectCompensationInput!
    ): RejectCompensationResponse @aws_api_key @aws_cognito_user_pools
    # Payroll System Mutations
    createPayrollRun(input: CreatePayrollRunInput!): CreatePayrollRunResponse
        @aws_api_key
        @aws_cognito_user_pools
    updatePayrollRun(input: UpdatePayrollRunInput!): UpdatePayrollRunResponse
        @aws_api_key
        @aws_cognito_user_pools
    processPayrollRun(
        input: ProcessPayrollRunInput!
    ): ProcessPayrollRunResponse @aws_api_key @aws_cognito_user_pools
    approvePayrollRun(
        input: ApprovePayrollRunInput!
    ): ApprovePayrollRunResponse @aws_api_key @aws_cognito_user_pools
    # Payroll Entry Mutations
    createPayrollEntry(
        input: CreatePayrollEntryInput!
    ): CreatePayrollEntryResponse @aws_api_key @aws_cognito_user_pools
    updatePayrollEntry(
        input: UpdatePayrollEntryInput!
    ): UpdatePayrollEntryResponse @aws_api_key @aws_cognito_user_pools
    generatePayslips(input: GeneratePayslipsInput!): GeneratePayslipsResponse
        @aws_api_key
        @aws_cognito_user_pools
    # Payroll Workflow Mutations
    initiatePayrollApproval(
        input: InitiatePayrollApprovalInput!
    ): InitiatePayrollApprovalResponse @aws_api_key @aws_cognito_user_pools
    processPayrollWorkflowStep(
        input: ProcessPayrollWorkflowStepInput!
    ): ProcessPayrollWorkflowStepResponse @aws_api_key @aws_cognito_user_pools
    updateNavbarConfig(input: UpdateNavbarConfigInput!): NavbarConfig!
        @aws_api_key
        @aws_cognito_user_pools
    createHeroSection(input: CreateHeroSectionInput!): HeroSection!
        @aws_api_key
        @aws_cognito_user_pools
    updateHeroSection(input: UpdateHeroSectionInput!): HeroSection!
        @aws_api_key
        @aws_cognito_user_pools
    deleteHeroSection(id: ID!, tenantId: String!): Boolean!
        @aws_api_key
        @aws_cognito_user_pools
    # =====================================================
    # QUIZ SYSTEM MUTATIONS
    # ራስን እውቀው (Know Thyself) - Self Assessment Quiz
    # =====================================================
    # Start a new quiz session
    startQuizSession(input: StartQuizSessionInput!): StartQuizSessionResponse
        @aws_api_key
        @aws_cognito_user_pools
    # Submit a response to a question
    submitQuizResponse(
        input: SubmitQuizResponseInput!
    ): SubmitQuizResponseResponse @aws_api_key @aws_cognito_user_pools
    # Calculate quiz results
    calculateQuizResult(
        input: CalculateQuizResultInput!
    ): CalculateQuizResultResponse @aws_api_key @aws_cognito_user_pools
    # Process payment for premium tiers
    processQuizPayment(
        input: ProcessQuizPaymentInput!
    ): ProcessQuizPaymentResponse @aws_api_key @aws_cognito_user_pools
    # Verify payment and unlock premium content
    verifyQuizPayment(
        input: VerifyQuizPaymentInput!
    ): VerifyQuizPaymentResponse @aws_api_key @aws_cognito_user_pools
    # Admin: Create or update quiz
    upsertQuiz(input: UpsertQuizInput!): Quiz @aws_cognito_user_pools
    # Admin: Create or update questions
    upsertQuizQuestion(input: UpsertQuizQuestionInput!): QuizQuestion
        @aws_cognito_user_pools
    # Admin: Generate AI analysis for results
    generateAIAnalysis(
        input: GenerateAIAnalysisInput!
    ): GenerateAIAnalysisResponse @aws_cognito_user_pools
}

type Query {
    # Existing queries
    placeholder: String @aws_api_key
    # List resource requests
    getUserPermissions(userId: ID!): UserPermissionsResponse
        @aws_api_key
        @aws_cognito_user_pools
    # List all available permission groups
    listPermissionGroups: [PermissionGroup!]!
        @aws_api_key
        @aws_cognito_user_pools
    # Get legacy ID from Cognito ID
    getLegacyIdFromCognitoId(cognitoId: String!): LegacyIdResponse
        @aws_api_key
        @aws_cognito_user_pools
    # Get Cognito ID from legacy ID
    getCognitoIdFromLegacyId(legacyId: String!): CognitoIdResponse
        @aws_api_key
        @aws_cognito_user_pools
    # Validate an organization ID
    validateOrgId(org_id: String!): TenantValidationResponse @aws_api_key
    getUserProfile(userId: String!, tenantId: String!): UserProfile
        @aws_iam
        @aws_api_key
        @aws_cognito_user_pools
    # Get a single customer by ID
    getCustomer(id: ID!, tenantId: ID!): Customer @aws_iam
    # List customers for a tenant
    listCustomersByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
        searchTerm: String
    ): CustomerConnection @aws_iam @aws_cognito_user_pools @aws_api_key
    redisGet(key: String!): RedisCacheResponse
        @aws_iam
        @aws_cognito_user_pools
        @aws_api_key
    # Unit queries
    listUnitsByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): UnitConnection
    getUnit(id: ID!, tenantId: ID): Unit
    # Brand queries
    listBrandsByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): BrandConnection
    getBrand(id: ID!, tenantId: ID!): Brand
    # Category queries
    listCategoriesByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): CategoryConnection
    getCategory(id: ID!, tenantId: ID!): Category
    # Product queries
    listProductsByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
        filter: ProductFilterInput
    ): ProductConnection @aws_api_key @aws_cognito_user_pools
    getProduct(id: ID!, tenantId: ID!): Product
    getProductsByIds(tenantId: ID!, productIds: [ID!]!): [Product!]!
        @aws_api_key
        @aws_cognito_user_pools
    getProductsByType(tenantId: ID!, productType: String!): [Product!]!
        @aws_api_key
        @aws_cognito_user_pools
    # Get company machines with detailed machine and product data
    getCompanyMachines(tenantId: ID!, departmentId: ID): [CompanyMachine!]!
        @aws_api_key
        @aws_cognito_user_pools
    # Warehouse queries
    listWarehousesByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): WarehouseConnection
    getWarehouse(id: ID!, tenantId: ID!): Warehouse
    # Outlet queries
    listOutletsByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): OutletConnection
    getOutlet(id: ID!, tenantId: ID!): Outlet
    # Department queries
    listDepartmentsByTenant(tenantId: ID!, limit: Int): DepartmentConnection
    listDepartmentManagersByTenant(
        tenantId: ID!
        limit: Int
    ): DepartmentManagerConnection @aws_api_key @aws_cognito_user_pools
    getDepartment(id: ID!, tenantId: ID!): Department
    # Resource Request Category queries
    listResourceRequestCategoriesByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): ResourceRequestCategoryConnection @aws_api_key @aws_cognito_user_pools
    # Role queries
    listRolesByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): RoleConnection
    getRole(id: ID!, tenantId: ID!): Role
    # Scope queries
    listScopes: [Scope!]!
    # Employee queries
    getEmployee(id: ID!, tenantId: ID!): Employee
    listEmployeesByTenant(
        tenantId: ID!
        filter: EmployeeFilterInput
        limit: Int
        nextToken: String
    ): EmployeeConnection
    listEmployeesByDepartment(
        departmentId: ID!
        tenantId: ID!
        limit: Int
    ): EmployeeConnection
    getEmployeeImpactMetrics(id: ID!, tenantId: ID!): EmployeeImpactMetrics
    # Work Order
    getWorkOrder(id: ID!, tenantId: ID!): WorkOrder
    listWorkOrdersByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): WorkOrderConnection
    listWorkOrderAssignmentsByDepartment(
        departmentId: ID!
        tenantId: ID!
        limit: Int
        nextToken: String
    ): WorkOrderAssignmentConnection @aws_api_key @aws_cognito_user_pools
    listWorkOrderAssignmentsByWorkOrderId(
        workOrderId: ID!
        tenantId: ID!
        limit: Int
        nextToken: String
    ): WorkOrderAssignmentConnection @aws_api_key @aws_cognito_user_pools
    # Work Orders with assignments and departments
    listWorkOrdersWithAssignmentsAndDepartments(
        tenantId: ID!
    ): [WorkOrderWithAssignments!]! @aws_api_key @aws_cognito_user_pools
    # Equipment Type
    getEquipmentType(id: ID!, tenantId: ID!): EquipmentType
    listEquipmentTypesByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): EquipmentTypeConnection
    # Equipment Model
    getEquipmentModel(id: ID!, tenantId: ID!): EquipmentModel
    listEquipmentModelsByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): EquipmentModelConnection
    listEquipmentModelsByEquipmentType(
        equipmentTypeId: ID!
        tenantId: ID!
        limit: Int
        nextToken: String
    ): EquipmentModelConnection
    # Machine Brand
    getMachineBrand(id: ID!, tenantId: ID!): MachineBrand
    listMachineBrandsByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): MachineBrandConnection
    # Machine
    getMachine(id: ID!, tenantId: ID!): Machine
    listMachinesByCustomer(
        customerId: ID!
        tenantId: ID!
        limit: Int
        nextToken: String
    ): MachineConnection
    listMachinesByEquipmentModel(
        equipmentModelId: ID!
        tenantId: ID!
        limit: Int
        nextToken: String
    ): MachineConnection
    # Service Task Template
    getServiceTaskTemplate(id: ID!, tenantId: ID!): ServiceTaskTemplate
    listServiceTaskTemplatesByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): ServiceTaskTemplateConnection @aws_api_key @aws_cognito_user_pools
    # Equipment Type Compatibility
    getEquipmentTypeCompatibility(
        id: ID!
        tenantId: ID!
    ): EquipmentTypeCompatibility
    listEquipmentTypeCompatibilitiesByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): EquipmentTypeCompatibilityConnection
    listEquipmentTypeCompatibilitiesByEquipmentType(
        equipmentTypeId: ID!
        tenantId: ID!
        limit: Int
        nextToken: String
    ): EquipmentTypeCompatibilityConnection
    # Attachment
    getAttachment(id: ID!, tenantId: ID!): Attachment
    listAttachmentsByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): AttachmentConnection
    listAttachmentsByCustomer(
        customerId: ID!
        tenantId: ID!
        limit: Int
        nextToken: String
    ): AttachmentConnection
    listAttachmentsByEquipmentModel(
        equipmentModelId: ID!
        tenantId: ID!
        limit: Int
        nextToken: String
    ): AttachmentConnection
    listCompatibilityRulesByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): CompatibilityRuleConnection
    listMachineAttachmentsByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
        orderBy: String
        orderDirection: String
    ): MachineAttachmentConnection
    listMachinesByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
        filter: MachineFilter
    ): MachineConnection
    getMachineAttachment(id: ID!, tenantId: ID!): MachineAttachment
    # Get detailed inventory items
    getInventoryItems(
        tenantId: ID!
        limit: Int
        nextToken: String
        filter: InventoryFilterInput
    ): InventoryConnection @aws_api_key @aws_cognito_user_pools
    # Get inventory items optimized for planning
    getInventoryForPlanning(
        tenantId: ID!
        resourceIds: [ID]
    ): PlanningInventoryResponse @aws_api_key @aws_cognito_user_pools
    # Get recent inventory movements
    getRecentInventoryMovements(
        tenantId: ID!
        limit: Int
        nextToken: String
        filter: InventoryMovementFilterInput
    ): RecentInventoryMovementsResponse @aws_api_key @aws_cognito_user_pools
    # Get work orders with planning details by department
    listWorkOrdersWithPlanningDetails(
        tenantId: ID!
        limit: Int
        nextToken: String
    ): DepartmentPlanningResponse @aws_api_key @aws_cognito_user_pools
    listDepartmentManagers(
        tenantId: ID!
        limit: Int
    ): DepartmentManagerConnection
    getDepartmentManager(id: ID!, tenantId: ID!): DepartmentManager
    getDepartmentWorkOrders(
        departmentId: ID!
        tenantId: ID!
    ): DepartmentWorkOrderResponse @aws_api_key @aws_cognito_user_pools
    # New query for work order assignments by department with status filter
    listWorkOrderAssignmentsByDepartmentWithStatus(
        departmentId: ID
        tenantId: ID!
        statuses: [String!]
        limit: Int
        nextToken: String
    ): WorkOrderAssignmentWithStatusConnection
        @aws_api_key
        @aws_cognito_user_pools
    # Resource usage query to get usage data for work orders
    listResourceUsageByWorkOrder(
        workOrderIds: [ID!]!
        tenantId: ID!
    ): [ResourceUsage] @aws_api_key @aws_cognito_user_pools
    # Resource requests query
    listResourceRequests(
        tenantId: ID!
        status: String
        approver_id: ID
        limit: Int
        offset: Int
    ): ResourceRequestResponse @aws_api_key @aws_cognito_user_pools
    # Expense categories query
    listExpenseCategoriesByTenant(
        tenantId: ID!
        limit: Int
        offset: Int
    ): ExpenseCategoryConnection @aws_api_key @aws_cognito_user_pools
    # Bank accounts query
    listBankAccountsByTenant(
        tenantId: ID!
        limit: Int
        offset: Int
        nextToken: String
    ): BankAccountConnection @aws_api_key @aws_cognito_user_pools
    # Project queries
    listProjectsByTenantWithBudgetItems(tenantId: ID!): [Project!]!
        @aws_api_key
        @aws_cognito_user_pools
    # Expense queries
    listExpensesByTenant(
        tenantId: ID!
        limit: Int
        offset: Int
    ): ExpenseConnection! @aws_api_key @aws_cognito_user_pools
    # Invoice processing queries
    getApprovedWorkOrders(tenantId: ID!): ApprovedWorkOrdersResponse!
        @aws_api_key
        @aws_cognito_user_pools
    getDepartmentInvoicesByWorkOrders(
        tenantId: ID!
        workOrderIds: [ID!]!
    ): DepartmentInvoicesConnection! @aws_api_key @aws_cognito_user_pools
    getPendingInvoices(
        tenantId: ID!
        workOrderIds: [ID!]!
    ): PendingInvoicesConnection! @aws_api_key @aws_cognito_user_pools
    # Tax Management Queries
    getCurrentTaxPeriod(tenantId: ID!): CurrentTaxPeriod
        @aws_cognito_user_pools
        @aws_api_key
    listVatRatesByTenant(tenantId: ID!): VatRatesResponse
        @aws_cognito_user_pools
        @aws_api_key
    listTaxableTransactions(
        tenantId: ID!
        taxPeriodId: ID!
    ): TaxableTransactionsResponse @aws_cognito_user_pools @aws_api_key
    listTaxPeriodTrends(tenantId: ID!): TaxPeriodTrendsResponse
        @aws_cognito_user_pools
        @aws_api_key
    # Department Invoices with Payments Query
    getDepartmentInvoicesWithPayments(
        tenantId: ID!
    ): DepartmentInvoicesWithPaymentsResponse!
        @aws_api_key
        @aws_cognito_user_pools
    # Notification Management Queries
    getUserNotificationPreferences(
        profileId: ID!
        tenantId: ID!
    ): GetUserNotificationPreferencesResponse
        @aws_api_key
        @aws_cognito_user_pools
    getUserPushSubscriptions(
        profileId: ID!
        tenantId: ID!
    ): GetUserPushSubscriptionsResponse @aws_api_key @aws_cognito_user_pools
    getUserNotifications(
        profileId: ID!
        tenantId: ID!
        limit: Int
        offset: Int
        unreadOnly: Boolean
    ): GetUserNotificationsResponse @aws_api_key @aws_cognito_user_pools
    getNotificationTypes(tenantId: ID!): GetNotificationTypesResponse
        @aws_api_key
        @aws_cognito_user_pools
    # Products Dashboard - Comprehensive analytics and insights
    getProductsDashboardData(
        tenantId: ID!
        filter: ProductDashboardFilterInput
        limit: Int
    ): ProductDashboardData @aws_cognito_user_pools
    # Get comprehensive inventory dashboard insights with aggregated data
    getInventoryInsights(
        tenantId: ID!
        filter: InventoryFilterInput
    ): InventoryDashboardInsights @aws_api_key @aws_cognito_user_pools
    # Enhanced Inventory Analytics - Enterprise-grade insights
    getInventoryAnalytics(
        tenantId: ID!
        filter: InventoryAnalyticsFilterInput
    ): InventoryAnalyticsResponse @aws_api_key @aws_cognito_user_pools
    # Finance Portal - Chart of Accounts
    listChartOfAccountsByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
        filter: ChartOfAccountFilterInput
    ): ChartOfAccountConnection @aws_api_key @aws_cognito_user_pools
    getChartOfAccount(id: ID!, tenantId: ID!): ChartOfAccount
        @aws_api_key
        @aws_cognito_user_pools
    # Finance Portal - Fiscal Periods
    listFiscalPeriodsByTenant(
        tenantId: ID!
        fiscalYear: Int
        limit: Int
        nextToken: String
    ): FiscalPeriodConnection @aws_api_key @aws_cognito_user_pools
    getCurrentFiscalPeriod(tenantId: ID!): FiscalPeriod
        @aws_api_key
        @aws_cognito_user_pools
    # Finance Portal - Journal Entries
    listJournalEntriesByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
        filter: JournalEntryFilterInput
    ): JournalEntryConnection @aws_api_key @aws_cognito_user_pools
    getJournalEntry(id: ID!, tenantId: ID!): JournalEntry
        @aws_api_key
        @aws_cognito_user_pools
    listJournalEntryLinesByEntry(
        journalEntryId: ID!
        tenantId: ID!
        limit: Int
        nextToken: String
    ): JournalEntryLineConnection @aws_api_key @aws_cognito_user_pools
    # Finance Portal - Posting Definitions
    listPostingDefinitionsByTenant(
        tenantId: ID!
        limit: Int
        nextToken: String
        filter: PostingDefinitionFilterInput
    ): PostingDefinitionConnection @aws_api_key @aws_cognito_user_pools
    getPostingDefinition(id: ID!, tenantId: ID!): PostingDefinition
        @aws_api_key
        @aws_cognito_user_pools
    # Personnel Actions
    listPersonnelActions(
        tenantId: ID!
        filter: PersonnelActionFilterInput
        limit: Int
        nextToken: String
    ): PersonnelActionConnection @aws_api_key @aws_cognito_user_pools
    getPersonnelAction(id: ID!, tenantId: ID!): PersonnelAction
        @aws_api_key
        @aws_cognito_user_pools
    # HR Dashboard Statistics
    getHRDashboardStats(tenantId: ID!): HRDashboardStats
        @aws_api_key
        @aws_cognito_user_pools
    # Employee Files
    listEmployeeFiles(
        tenantId: ID!
        filter: EmployeeFilesFilterInput
        limit: Int
        nextToken: String
    ): EmployeeFilesConnection @aws_api_key @aws_cognito_user_pools
    # Salary Structures
    listSalaryStructures(
        tenantId: ID!
        filter: SalaryStructureFilterInput
        limit: Int
        nextToken: String
    ): SalaryStructureConnection @aws_api_key @aws_cognito_user_pools
    getSalaryStructure(id: ID!, tenantId: ID!): SalaryStructure
        @aws_api_key
        @aws_cognito_user_pools
    # Job Positions
    listJobPositions(
        tenantId: ID!
        filter: JobPositionFilterInput
        limit: Int
        nextToken: String
    ): JobPositionConnection @aws_api_key @aws_cognito_user_pools
    getJobPosition(id: ID!, tenantId: ID!): JobPosition
        @aws_api_key
        @aws_cognito_user_pools
    # Employee Compensation
    listEmployeeCompensation(
        tenantId: ID!
        filter: EmployeeCompensationFilterInput
        limit: Int
        nextToken: String
    ): EmployeeCompensationConnection @aws_api_key @aws_cognito_user_pools
    getEmployeeCompensation(id: ID!, tenantId: ID!): EmployeeCompensation
        @aws_api_key
        @aws_cognito_user_pools
    # Payroll Queries
    listPayrollRuns(
        tenantId: ID!
        filter: PayrollRunFilterInput
        limit: Int
        nextToken: String
    ): PayrollRunConnection @aws_api_key @aws_cognito_user_pools
    getPayrollRun(id: ID!, tenantId: ID!): PayrollRun
        @aws_api_key
        @aws_cognito_user_pools
    # Payroll Entries
    listPayrollEntries(
        tenantId: ID!
        filter: PayrollEntryFilterInput
        limit: Int
        nextToken: String
    ): PayrollEntryConnection @aws_api_key @aws_cognito_user_pools
    getPayrollEntry(id: ID!, tenantId: ID!): PayrollEntry
        @aws_api_key
        @aws_cognito_user_pools
    # Payroll Workflow Queries
    getPayrollWorkflowStatus(
        payrollRunId: ID!
        tenantId: ID!
    ): PayrollWorkflowStatusResponse @aws_api_key @aws_cognito_user_pools
    getNavbarConfig(tenantId: String!): NavbarConfig
        @aws_api_key
        @aws_cognito_user_pools
    getHeroSections(tenantId: String!): [HeroSection!]!
        @aws_api_key
        @aws_cognito_user_pools
    getFeaturedProducts(tenantId: String!, limit: Int): [Product!]!
        @aws_api_key
        @aws_cognito_user_pools
    getProductsByCategory(
        tenantId: String!
        category: String!
        limit: Int
    ): [Product!]! @aws_api_key @aws_cognito_user_pools
    # Get available quizzes
    listQuizzes(
        filter: QuizFilterInput
        limit: Int
        nextToken: String
    ): QuizConnection @aws_api_key @aws_cognito_user_pools
    # Get specific quiz details
    getQuiz(id: ID!): Quiz @aws_api_key @aws_cognito_user_pools
    # Get quiz session details
    getQuizSession(sessionToken: String!): QuizSession
        @aws_api_key
        @aws_cognito_user_pools
    # Get quiz questions for a session
    getQuizQuestions(
        sessionToken: String!
        language: String
    ): QuizQuestionsResponse @aws_api_key @aws_cognito_user_pools
    # Get quiz results
    getQuizResult(sessionToken: String!, tier: QuizResultTier): QuizResult
        @aws_api_key
        @aws_cognito_user_pools
    # Get payment status
    getQuizPaymentStatus(paymentReference: String!): QuizPayment
        @aws_api_key
        @aws_cognito_user_pools
    # Analytics queries (admin only)
    getQuizAnalytics(filter: QuizAnalyticsFilterInput): QuizAnalyticsResponse
        @aws_cognito_user_pools
}

type Subscription {
    # Subscribe to customer changes for a tenant
    onCustomerChanged(tenant_id: ID!): Customer
        @aws_subscribe(
            mutations: ["createCustomer", "updateCustomer", "deleteCustomer"]
        )
    # 	# Subscribe to employee changes for a tenant
    # 	onEmployeeChanged(tenant_id: ID!): Employee
    # 		@aws_subscribe(mutations: ["createEmployee","updateEmployee","deleteEmployee"])
    # Subscribe to new notifications for a user
    onNotificationReceived(
        profileId: ID!
        tenantId: ID!
    ): NotificationReceivedEvent
        @aws_subscribe(
            mutations: [
                "markNotificationAsRead"
                "markNotificationsRead"
                "publishNotification"
                "createNotification"
            ]
        )
        @aws_api_key
        @aws_cognito_user_pools
}

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}
